<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"	"http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>FDO .NET API Reference</title>
		<link href="../../custom.css" rel="stylesheet" type="text/css">
		<link href="../../tabs.css" rel="stylesheet" type="text/css">
	</head>
	<body bgcolor="#FFFFFF">
		<table width="100%"  border="0">
			<tr>
				<td><b>FDO .NET API Reference<b></td>
				<td align="right"><b>Feature Data Objects<b></td>
			</tr>
			
		</table>
<!-- End of: header.html -->
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="../../main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="../../modules.htm"><span>Modules</span></a></li>
    <li><a href="../../namespaces.htm"><span>Namespaces</span></a></li>
    <li><a href="../../classes.htm"><span>Classes</span></a></li>
    <li><a href="../../files.htm"><span>Files</span></a></li>
    <li><a href="../../pages.htm"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<h1>OSGeo::FDO::Commands::Schema</h1>
<p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0f/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_apply_schema.htm">OSGeo::FDO::Commands::Schema::IApplySchema</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d4/d0f/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_apply_schema.htm">IApplySchema</a> interface defines the ApplySchema command, which creates or updates a feature schema within the <a class="el" href="../../d9/d34/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_data_store.htm">DataStore</a>. Input to the ApplySchema command is the feature schema instance to be created or updated. Optionally, a provider-specific IPhysicalSchemaMapping interface can be specified that can be used to control how the feature schema elements are mapped into physical storage.  <a href="../../d4/d0f/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_apply_schema.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d77/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_apply_schema_imp.htm">OSGeo::FDO::Commands::Schema::IApplySchemaImp</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d8/d77/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_apply_schema_imp.htm">IApplySchemaImp</a> class is a concrete implementation of <a class="el" href="../../d4/d0f/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_apply_schema.htm">IApplySchema</a>. The <a class="el" href="../../d4/d0f/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_apply_schema.htm">IApplySchema</a> interface defines the ApplySchema command, which creates or updates a feature schema within the <a class="el" href="../../d9/d34/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_data_store.htm">DataStore</a>. Input to the ApplySchema command is the feature schema instance to be created or updated. Optionally, a provider-specific IPhysicalSchemaMapping interface can be specified that can be used to control how the feature schema elements are mapped into physical storage.  <a href="../../d8/d77/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_apply_schema_imp.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/def/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema.htm">OSGeo::FDO::Commands::Schema::IDescribeSchema</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d4/def/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema.htm">IDescribeSchema</a> interface defines the DescribeSchema command, which describes the feature schemas available from the connection. The DescribeSchema command can describe a single schema or all schemas available from the connection. The Execute operation returns an FeatureSchemaCollection object.  <a href="../../d4/def/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dab/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema_imp.htm">OSGeo::FDO::Commands::Schema::IDescribeSchemaImp</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../dd/dab/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema_imp.htm">IDescribeSchemaImp</a> class is a concrete implementation of <a class="el" href="../../d4/def/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema.htm">IDescribeSchema</a>. The <a class="el" href="../../d4/def/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema.htm">IDescribeSchema</a> interface defines the DescribeSchema command, which describes the feature schemas available from the connection. The DescribeSchema command can describe a single schema or all schemas available from the connection. The Execute operation returns an FeatureSchemaCollection object.  <a href="../../dd/dab/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema_imp.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d8c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema_mapping.htm">OSGeo::FDO::Commands::Schema::IDescribeSchemaMapping</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d4/d8c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema_mapping.htm">IDescribeSchemaMapping</a> interface defines the DescribeSchemaMapping command, which describes the logical to physical schema mappings for feature schemas available from the connection. The DescribeSchemaMapping command can describe the mappings for a single schema or all schemas available from the connection. The Execute operation returns an <a class="el" href="../../d0/dcb/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_schema_mapping_collection.htm">PhysicalSchemaMappingCollection</a> object.  <a href="../../d4/d8c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema_mapping.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d81/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema_mapping_imp.htm">OSGeo::FDO::Commands::Schema::IDescribeSchemaMappingImp</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d8/d81/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema_mapping_imp.htm">IDescribeSchemaMappingImp</a> class is a concrete implementation of <a class="el" href="../../d4/d8c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema_mapping.htm">IDescribeSchemaMapping</a>. The <a class="el" href="../../d4/d8c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema_mapping.htm">IDescribeSchemaMapping</a> interface defines the DescribeSchemaMapping command, which describes the logical to physical schema mappings for feature schemas available from the connection. The DescribeSchemaMapping command can describe the mappings for a single schema or all schemas available from the connection. The Execute operation returns an <a class="el" href="../../d0/dcb/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_schema_mapping_collection.htm">PhysicalSchemaMappingCollection</a> object.  <a href="../../d8/d81/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_describe_schema_mapping_imp.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d50/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_destroy_schema.htm">OSGeo::FDO::Commands::Schema::IDestroySchema</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d3/d50/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_destroy_schema.htm">IDestroySchema</a> interface defines the DestroySchema command, which destroys a schema definition, including all class definitions, relationship definitions, and instance data within it. If elements in other schemas refer to the schema to be destroyed command, execution will fail. Input to the delete schema command is the name of the schema to be destroyed.  <a href="../../d3/d50/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_destroy_schema.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d63/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_destroy_schema_imp.htm">OSGeo::FDO::Commands::Schema::IDestroySchemaImp</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d8/d63/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_destroy_schema_imp.htm">IDestroySchemaImp</a> class is a concrete implementation of <a class="el" href="../../d3/d50/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_destroy_schema.htm">IDestroySchema</a>. The <a class="el" href="../../d3/d50/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_destroy_schema.htm">IDestroySchema</a> interface defines the DestroySchema command, which destroys a schema definition, including all class definitions, relationship definitions, and instance data within it. If elements in other schemas refer to the schema to be destroyed command, execution will fail. Input to the delete schema command is the name of the schema to be destroyed.  <a href="../../d8/d63/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_destroy_schema_imp.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/db3/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_physical_element_mapping.htm">OSGeo::FDO::Commands::Schema::IPhysicalElementMapping</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../de/db3/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_physical_element_mapping.htm">IPhysicalElementMapping</a> is an abstract interface that acts as a base interface for all Physical <a class="el" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema.htm">Schema</a> Mapping Override classes. <a class="el" href="../../db/d2d/namespace_o_s_geo_1_1_f_d_o.htm">FDO</a> also provides a number of sub-classes for particular types of Provider-specific override classes:.  <a href="../../de/db3/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_physical_element_mapping.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d94/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_physical_property_mapping.htm">OSGeo::FDO::Commands::Schema::IPhysicalPropertyMapping</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../d2/d94/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_physical_property_mapping.htm">IPhysicalPropertyMapping</a> is an abstract interface that acts as a base interface for all Physical <a class="el" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema.htm">Schema</a> Mapping property overrides.  <a href="../../d2/d94/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_physical_property_mapping.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d05/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_class_mapping.htm">OSGeo::FDO::Commands::Schema::PhysicalClassMapping</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../d5/d05/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_class_mapping.htm">PhysicalClassMapping</a> is an abstract class that acts as a base class for all Physical <a class="el" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema.htm">Schema</a> Mapping class overrides.  <a href="../../d5/d05/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_class_mapping.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d24/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_element_mapping.htm">OSGeo::FDO::Commands::Schema::PhysicalElementMapping</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../d0/d24/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_element_mapping.htm">PhysicalElementMapping</a> is an abstract class that acts as a base class for all Physical <a class="el" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema.htm">Schema</a> Mapping Override classes. <a class="el" href="../../db/d2d/namespace_o_s_geo_1_1_f_d_o.htm">FDO</a> also provides a number of sub-classes for particular types of Provider-specific override classes:.  <a href="../../d0/d24/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_element_mapping.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dc0/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_property_mapping.htm">OSGeo::FDO::Commands::Schema::PhysicalPropertyMapping</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../d6/dc0/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_property_mapping.htm">PhysicalPropertyMapping</a> is an abstract class that acts as a base class for all Physical <a class="el" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema.htm">Schema</a> Mapping property overrides.  <a href="../../d6/dc0/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_property_mapping.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/de5/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_schema_mapping.htm">OSGeo::FDO::Commands::Schema::PhysicalSchemaMapping</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../de/de5/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_schema_mapping.htm">PhysicalSchemaMapping</a> is an abstract class that is the base class of all <a class="el" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema.htm">Schema</a> Override sets. Each instance contains the overrides for a particular <a class="el" href="../../d8/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature.htm">Feature</a> <a class="el" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema.htm">Schema</a> and <a class="el" href="../../db/d2d/namespace_o_s_geo_1_1_f_d_o.htm">FDO</a> Provider. Each <a class="el" href="../../db/d2d/namespace_o_s_geo_1_1_f_d_o.htm">FDO</a> Provider, that allows <a class="el" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema.htm">Schema</a> Overrides, must create a sub-class of this class. This sub-class must implement the overrides that are specific to the provider. The Provider can also add support, for serializing to an XML document, by overriding the functions inherited from XmlSerializable.  <a href="../../de/de5/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_schema_mapping.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_schema_mapping_collection.htm">OSGeo::FDO::Commands::Schema::PhysicalSchemaMappingCollection</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../d0/dcb/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_schema_mapping_collection.htm">PhysicalSchemaMappingCollection</a> defines a collection of <a class="el" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema.htm">Schema</a> Override sets. This is a generic collection which can contain override sets for different <a class="el" href="../../db/d2d/namespace_o_s_geo_1_1_f_d_o.htm">FDO</a> Providers.  <a href="../../d0/dcb/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_physical_schema_mapping_collection.htm#_details">More...</a><br></td></tr>
</table>
<!-- footer.html -->
		<hr>
		<table width="100%"  border="0">
			<tr>
				<td>Comments or suggestions? Send us <a href="mailto:isd.docs@autodesk.com&subject=FDO%20.NET%20API%20documentation">feedback</a>.</td>
				<!-- The logo can go in another cell, when we get one -->			
			</tr>
		</table>
	</body>
</html>
