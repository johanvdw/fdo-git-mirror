<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"	"http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>FDO .NET API Reference</title>
		<link href="../../custom.css" rel="stylesheet" type="text/css">
		<link href="../../tabs.css" rel="stylesheet" type="text/css">
	</head>
	<body bgcolor="#FFFFFF">
		<table width="100%"  border="0">
			<tr>
				<td><b>FDO .NET API Reference<b></td>
				<td align="right"><b>Feature Data Objects<b></td>
			</tr>
			
		</table>
<!-- End of: header.html -->
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="../../main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="../../modules.htm"><span>Modules</span></a></li>
    <li><a href="../../namespaces.htm"><span>Namespaces</span></a></li>
    <li><a href="../../classes.htm"><span>Classes</span></a></li>
    <li id="current"><a href="../../files.htm"><span>Files</span></a></li>
    <li><a href="../../pages.htm"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="../../files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="../../globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>mgIRasterImp.h</h1><a href="../../d7/db5/mg_i_raster_imp_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment">* Copyright (C) 2004-2006  Autodesk, Inc.</span>
<a name="l00003"></a>00003 <span class="comment">* </span>
<a name="l00004"></a>00004 <span class="comment">* This library is free software; you can redistribute it and/or</span>
<a name="l00005"></a>00005 <span class="comment">* modify it under the terms of version 2.1 of the GNU Lesser</span>
<a name="l00006"></a>00006 <span class="comment">* General Public License as published by the Free Software Foundation.</span>
<a name="l00007"></a>00007 <span class="comment">* </span>
<a name="l00008"></a>00008 <span class="comment">* This library is distributed in the hope that it will be useful,</span>
<a name="l00009"></a>00009 <span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00010"></a>00010 <span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00011"></a>00011 <span class="comment">* Lesser General Public License for more details.</span>
<a name="l00012"></a>00012 <span class="comment">* </span>
<a name="l00013"></a>00013 <span class="comment">* You should have received a copy of the GNU Lesser General Public</span>
<a name="l00014"></a>00014 <span class="comment">* License along with this library; if not, write to the Free Software</span>
<a name="l00015"></a>00015 <span class="comment">* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">*/</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#pragma once</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span>
<a name="l00021"></a>00021 <span class="preprocessor">#include "<a class="code" href="../../de/df0/mg_i_raster_8h.htm">FDO\Raster\mgIRaster.h</a>"</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="keyword">class </span>FdoIRaster;
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <a class="code" href="../../d8/d30/_common_namespace_8h_3695dee423bfa9490746e85f8eda7d0d.htm#3695dee423bfa9490746e85f8eda7d0d">BEGIN_NAMESPACE_OSGEO_FDO_RASTER</a>
<a name="l00026"></a>00026 <span class="comment"></span>
<a name="l00027"></a>00027 <span class="comment">/// \ingroup (OSGeoFDORaster)</span>
<a name="l00028"></a>00028 <span class="comment">/// \brief</span>
<a name="l00029"></a>00029 <span class="comment">/// IRasterImp specifies the data type and organization</span>
<a name="l00030"></a>00030 <span class="comment">/// of raster data retrieved and stored. Using this class and the image</span>
<a name="l00031"></a>00031 <span class="comment">/// extents in width and length, the binary format of the image data returned</span>
<a name="l00032"></a>00032 <span class="comment">/// by and accepted by the IoStreamReader class can be interpreted.</span>
<a name="l00033"></a><a class="code" href="../../dc/d58/class_o_s_geo_1_1_f_d_o_1_1_raster_1_1_i_raster_imp.htm">00033</a> <span class="comment"></span><span class="keyword">private</span> __gc <span class="keyword">class </span><a class="code" href="../../dc/d58/class_o_s_geo_1_1_f_d_o_1_1_raster_1_1_i_raster_imp.htm">IRasterImp</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d30/_common_namespace_8h_bfd166a5d24ab2e990a03e8efac51c13.htm#bfd166a5d24ab2e990a03e8efac51c13">NAMESPACE_OSGEO_RUNTIME</a>::Disposable, <span class="keyword">public</span> <a class="code" href="../../d8/d30/_common_namespace_8h_6921f3e600e262ff9ca942a96d84581b.htm#6921f3e600e262ff9ca942a96d84581b">NAMESPACE_OSGEO_FDO_RASTER</a>::<a class="code" href="../../da/d53/interface_o_s_geo_1_1_f_d_o_1_1_raster_1_1_i_raster.htm">IRaster</a>
<a name="l00034"></a>00034 {
<a name="l00035"></a>00035 <span class="keyword">public</span>:<span class="comment"></span>
<a name="l00036"></a>00036 <span class="comment">    /// \brief</span>
<a name="l00037"></a>00037 <span class="comment">    /// Returns true if the IRaster represents a null value.</span>
<a name="l00038"></a>00038 <span class="comment">    /// </span>
<a name="l00039"></a>00039 <span class="comment">    /// \return</span>
<a name="l00040"></a>00040 <span class="comment">    /// Returns true if the IRaster represents a null value.</span>
<a name="l00041"></a>00041 <span class="comment">    /// </span>
<a name="l00042"></a>00042 <span class="comment"></span>    System::Boolean <a class="code" href="../../dd/d85/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_860b813cba1621ddfc56ec05b7d480a9.htm#860b813cba1621ddfc56ec05b7d480a9">IsNull</a> ();
<a name="l00043"></a>00043 <span class="comment"></span>
<a name="l00044"></a>00044 <span class="comment">    /// \brief</span>
<a name="l00045"></a>00045 <span class="comment">    /// Sets the IRaster to a null value.</span>
<a name="l00046"></a>00046 <span class="comment">    /// </span>
<a name="l00047"></a>00047 <span class="comment">    /// \return</span>
<a name="l00048"></a>00048 <span class="comment">    /// Returns nothing</span>
<a name="l00049"></a>00049 <span class="comment">    /// </span>
<a name="l00050"></a>00050 <span class="comment"></span>    System::Void <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_19b3100b6ad849a6777c01a2ec654662.htm#19b3100b6ad849a6777c01a2ec654662">SetNull</a> ();
<a name="l00051"></a>00051 <span class="comment"></span>
<a name="l00052"></a>00052 <span class="comment">    /// \brief</span>
<a name="l00053"></a>00053 <span class="comment">    /// Gets the number of bands/channels contained in the raster image.</span>
<a name="l00054"></a>00054 <span class="comment">    /// </span>
<a name="l00055"></a>00055 <span class="comment">    /// \return</span>
<a name="l00056"></a>00056 <span class="comment">    /// Returns the numbers of bands/channels contained in the raster image. </span>
<a name="l00057"></a>00057 <span class="comment">    /// </span>
<a name="l00058"></a>00058 <span class="comment"></span>    __property System::Int32 <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_4a02a784b7580c7479990b8c5dc22452.htm#4a02a784b7580c7479990b8c5dc22452">get_NumberOfBands</a>();
<a name="l00059"></a>00059 <span class="comment"></span>
<a name="l00060"></a>00060 <span class="comment">    /// \brief</span>
<a name="l00061"></a>00061 <span class="comment">    /// Sets the number of bands/channels contained in the raster image.</span>
<a name="l00062"></a>00062 <span class="comment">    /// </span>
<a name="l00063"></a>00063 <span class="comment">    /// \return</span>
<a name="l00064"></a>00064 <span class="comment">    /// Returns nothing. </span>
<a name="l00065"></a>00065 <span class="comment">    /// </span>
<a name="l00066"></a>00066 <span class="comment"></span>    __property System::Void <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_4252e90227c00d18e85cd9f4d21ac814.htm#4252e90227c00d18e85cd9f4d21ac814">set_NumberOfBands</a> (System::Int32 value);
<a name="l00067"></a>00067 <span class="comment"></span>
<a name="l00068"></a>00068 <span class="comment">    /// \brief</span>
<a name="l00069"></a>00069 <span class="comment">    /// Gets the currently active band/channel.</span>
<a name="l00070"></a>00070 <span class="comment">    /// </span>
<a name="l00071"></a>00071 <span class="comment">    /// \remarks</span>
<a name="l00072"></a>00072 <span class="comment">    /// IRaster Bounds, DataModel, ImageSize, AuxilliaryProperties and Stream </span>
<a name="l00073"></a>00073 <span class="comment">    /// accessors all conform to the current band. </span>
<a name="l00074"></a>00074 <span class="comment">    /// </span>
<a name="l00075"></a>00075 <span class="comment">    /// \return</span>
<a name="l00076"></a>00076 <span class="comment">    /// Returns the current active band/channel. </span>
<a name="l00077"></a>00077 <span class="comment">    /// </span>
<a name="l00078"></a>00078 <span class="comment"></span>    __property System::Int32 <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_c7d189df66e79e78dfac11d27de69008.htm#c7d189df66e79e78dfac11d27de69008">get_CurrentBand</a> ();
<a name="l00079"></a>00079 <span class="comment"></span>
<a name="l00080"></a>00080 <span class="comment">    /// \brief</span>
<a name="l00081"></a>00081 <span class="comment">    /// Sets the currently active band/channel.</span>
<a name="l00082"></a>00082 <span class="comment">    /// </span>
<a name="l00083"></a>00083 <span class="comment">    /// \remarks</span>
<a name="l00084"></a>00084 <span class="comment">    /// Setting the current band will mean that the Bounds, DataModel, ImageSize, </span>
<a name="l00085"></a>00085 <span class="comment">    /// AuxilliaryProperties and Stream accessors of IRaster </span>
<a name="l00086"></a>00086 <span class="comment">    /// will all switch to the specified band. </span>
<a name="l00087"></a>00087 <span class="comment">    /// </span>
<a name="l00088"></a>00088 <span class="comment">    /// \return</span>
<a name="l00089"></a>00089 <span class="comment">    /// Returns nothing. </span>
<a name="l00090"></a>00090 <span class="comment">    /// </span>
<a name="l00091"></a>00091 <span class="comment"></span>    __property System::Void <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_a3408c43ddf12bae573a9b297d9dea38.htm#a3408c43ddf12bae573a9b297d9dea38">set_CurrentBand</a> (System::Int32 value);
<a name="l00092"></a>00092 <span class="comment"></span>
<a name="l00093"></a>00093 <span class="comment">    /// \brief</span>
<a name="l00094"></a>00094 <span class="comment">    /// Get the minimum bounding box around the curent band of the image.</span>
<a name="l00095"></a>00095 <span class="comment">    ///</span>
<a name="l00096"></a>00096 <span class="comment">    /// \return</span>
<a name="l00097"></a>00097 <span class="comment">    /// Returns the bounds of the raster image</span>
<a name="l00098"></a>00098 <span class="comment">    /// </span>
<a name="l00099"></a>00099 <span class="comment"></span>    __property System::Byte <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_b01ab189c9c65e06da97c2f78e965853.htm#b01ab189c9c65e06da97c2f78e965853">get_Bounds</a> () [];
<a name="l00100"></a>00100 <span class="comment"></span>
<a name="l00101"></a>00101 <span class="comment">    /// \brief</span>
<a name="l00102"></a>00102 <span class="comment">    /// Set the minimum bounding box around the image.</span>
<a name="l00103"></a>00103 <span class="comment">    /// For georeferenced images, the coordinate system is specified by the</span>
<a name="l00104"></a>00104 <span class="comment">    /// spatial context in force when the object is created.  The act of</span>
<a name="l00105"></a>00105 <span class="comment">    /// setting this property georeferences the image.  In order to provide</span>
<a name="l00106"></a>00106 <span class="comment">    /// for non-georeferenced images, this property is Nullable (doesn't</span>
<a name="l00107"></a>00107 <span class="comment">    /// need to be set).</span>
<a name="l00108"></a>00108 <span class="comment">    ///</span>
<a name="l00109"></a>00109 <span class="comment">    /// \param bounds </span>
<a name="l00110"></a>00110 <span class="comment">    /// The new bounds of the raster image.</span>
<a name="l00111"></a>00111 <span class="comment">    /// </span>
<a name="l00112"></a>00112 <span class="comment"></span>    __property System::Void <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_a0123f53c170d7d69811b75070a43636.htm#a0123f53c170d7d69811b75070a43636">set_Bounds</a> (System::Byte bounds[]);
<a name="l00113"></a>00113 <span class="comment"></span>
<a name="l00114"></a>00114 <span class="comment">    /// \brief</span>
<a name="l00115"></a>00115 <span class="comment">    /// Gets the data model in use by this raster property.</span>
<a name="l00116"></a>00116 <span class="comment">    /// </span>
<a name="l00117"></a>00117 <span class="comment">    /// \return</span>
<a name="l00118"></a>00118 <span class="comment">    /// Returns the current data model.</span>
<a name="l00119"></a>00119 <span class="comment">    /// </span>
<a name="l00120"></a>00120 <span class="comment"></span>    __property NAMESPACE_OSGEO_FDO_RASTER::RasterDataModel* <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_ef11b5805ba146e2dd9e05742cb22a17.htm#ef11b5805ba146e2dd9e05742cb22a17">get_DataModel</a> ();
<a name="l00121"></a>00121 <span class="comment"></span>
<a name="l00122"></a>00122 <span class="comment">    /// \brief</span>
<a name="l00123"></a>00123 <span class="comment">    /// Sets the data model used by this raster property.</span>
<a name="l00124"></a>00124 <span class="comment">    /// Allowed values are only those data models that are acceptable to the</span>
<a name="l00125"></a>00125 <span class="comment">    /// SupportsDataModel capability.</span>
<a name="l00126"></a>00126 <span class="comment">    ///</span>
<a name="l00127"></a>00127 <span class="comment">    /// \remarks</span>
<a name="l00128"></a>00128 <span class="comment">    /// This attribute specifies the colour/palette model, bits per pixel,</span>
<a name="l00129"></a>00129 <span class="comment">    /// tiling and interleaving. For example, if the bits per pixel of the</span>
<a name="l00130"></a>00130 <span class="comment">    /// data model is 8 and it is set to 24, a conversion would be performed</span>
<a name="l00131"></a>00131 <span class="comment">    /// when image data is requested, to return 24 bit data.  If an update</span>
<a name="l00132"></a>00132 <span class="comment">    /// command is executed to save this value, the raster data would be</span>
<a name="l00133"></a>00133 <span class="comment">    /// transformed and saved.  The next time this image is retrieved</span>
<a name="l00134"></a>00134 <span class="comment">    /// by the client the bits per pixel value would indicate 24.</span>
<a name="l00135"></a>00135 <span class="comment">    /// </span>
<a name="l00136"></a>00136 <span class="comment">    /// \param dataModel </span>
<a name="l00137"></a>00137 <span class="comment">    /// The datamodel to be used.</span>
<a name="l00138"></a>00138 <span class="comment">    /// </span>
<a name="l00139"></a>00139 <span class="comment"></span>    __property System::Void <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_b029832b579edc8f08a7e0639b3aca78.htm#b029832b579edc8f08a7e0639b3aca78">set_DataModel</a> (NAMESPACE_OSGEO_FDO_RASTER::RasterDataModel* dataModel);
<a name="l00140"></a>00140 <span class="comment"></span>
<a name="l00141"></a>00141 <span class="comment">    /// \brief</span>
<a name="l00142"></a>00142 <span class="comment">    /// Gets the size of image file in the horizontal</span>
<a name="l00143"></a>00143 <span class="comment">    /// direction in pixels (number of columns).</span>
<a name="l00144"></a>00144 <span class="comment">    /// </span>
<a name="l00145"></a>00145 <span class="comment">    /// \return</span>
<a name="l00146"></a>00146 <span class="comment">    /// Returns the horizontal image size in pixels</span>
<a name="l00147"></a>00147 <span class="comment">    /// (number of columns).</span>
<a name="l00148"></a>00148 <span class="comment">    /// </span>
<a name="l00149"></a>00149 <span class="comment"></span>    __property System::Int32 <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_4f588be5d83a8ef0eba36db3a20ea1a6.htm#4f588be5d83a8ef0eba36db3a20ea1a6">get_ImageXSize</a> ();
<a name="l00150"></a>00150 <span class="comment"></span>
<a name="l00151"></a>00151 <span class="comment">    /// \brief</span>
<a name="l00152"></a>00152 <span class="comment">    /// Sets the size of image file in the horizontal</span>
<a name="l00153"></a>00153 <span class="comment">    /// direction in pixels (number of columns).</span>
<a name="l00154"></a>00154 <span class="comment">    /// By setting the X and Y image size properties prior to getting</span>
<a name="l00155"></a>00155 <span class="comment">    /// a reader for the data, the client application can control the</span>
<a name="l00156"></a>00156 <span class="comment">    /// density of pixels fetched by the provider, which may reduce</span>
<a name="l00157"></a>00157 <span class="comment">    /// the amount of data shipped by the reader and reduce processing</span>
<a name="l00158"></a>00158 <span class="comment">    /// time significantly.  For example, a certain query in the</span>
<a name="l00159"></a>00159 <span class="comment">    /// coordinate system of the raster object class returns a</span>
<a name="l00160"></a>00160 <span class="comment">    /// IRaster object with image size 12091 by 8043.  But the</span>
<a name="l00161"></a>00161 <span class="comment">    /// image only needs to be displayed in an area 1167 by 776 on</span>
<a name="l00162"></a>00162 <span class="comment">    /// the users monitor. </span>
<a name="l00163"></a>00163 <span class="comment">    /// &lt;p&gt;(&lt;b&gt;Note:&lt;/b&gt; The aspect ratios are the same</span>
<a name="l00164"></a>00164 <span class="comment">    /// because the query is constructed based on the display area).</span>
<a name="l00165"></a>00165 <span class="comment">    /// &lt;p&gt;By setting the image size to these lower values the FDO raster</span>
<a name="l00166"></a>00166 <span class="comment">    /// subsystem may be able to use a previously subsampled image</span>
<a name="l00167"></a>00167 <span class="comment">    /// where the resolution has been reduced by a factor of 4.</span>
<a name="l00168"></a>00168 <span class="comment">    /// So instead of transferring 97MB, it can transfer 6MB (a reduction</span>
<a name="l00169"></a>00169 <span class="comment">    /// by 4 in both dimensions reduces the amount of data by a factor of 16)</span>
<a name="l00170"></a>00170 <span class="comment">    /// and subsample the image again to the desired resolution in a</span>
<a name="l00171"></a>00171 <span class="comment">    /// more timely manner (less data to process means less total time),</span>
<a name="l00172"></a>00172 <span class="comment">    /// with no appreciable difference in display quality to the user.</span>
<a name="l00173"></a>00173 <span class="comment">    /// </span>
<a name="l00174"></a>00174 <span class="comment">    /// \param size </span>
<a name="l00175"></a>00175 <span class="comment">    /// The desired horizontal image size in pixels</span>
<a name="l00176"></a>00176 <span class="comment">    /// (number of columns).</span>
<a name="l00177"></a>00177 <span class="comment">    /// </span>
<a name="l00178"></a>00178 <span class="comment"></span>    __property System::Void <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_846fade017ec1b8c6ac91efe3b29cf66.htm#846fade017ec1b8c6ac91efe3b29cf66">set_ImageXSize</a> (System::Int32 size);
<a name="l00179"></a>00179 <span class="comment"></span>
<a name="l00180"></a>00180 <span class="comment">    /// \brief</span>
<a name="l00181"></a>00181 <span class="comment">    /// Gets the size of image file in the vertical</span>
<a name="l00182"></a>00182 <span class="comment">    /// direction in pixels (number of rows).</span>
<a name="l00183"></a>00183 <span class="comment">    /// </span>
<a name="l00184"></a>00184 <span class="comment">    /// \return</span>
<a name="l00185"></a>00185 <span class="comment">    /// Returns the vertical image size in pixels</span>
<a name="l00186"></a>00186 <span class="comment">    /// (number of rows).</span>
<a name="l00187"></a>00187 <span class="comment">    /// </span>
<a name="l00188"></a>00188 <span class="comment"></span>    __property System::Int32 <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_e52df737c2c83e0f26e1b6cd1a299499.htm#e52df737c2c83e0f26e1b6cd1a299499">get_ImageYSize</a> ();
<a name="l00189"></a>00189 <span class="comment"></span>
<a name="l00190"></a>00190 <span class="comment">    /// \brief</span>
<a name="l00191"></a>00191 <span class="comment">    /// Sets the size of image file in the vertical</span>
<a name="l00192"></a>00192 <span class="comment">    /// direction in pixels (number of rows). See SetImageXSize.</span>
<a name="l00193"></a>00193 <span class="comment">    /// </span>
<a name="l00194"></a>00194 <span class="comment">    /// \param size </span>
<a name="l00195"></a>00195 <span class="comment">    /// The desired vertical image size in pixels</span>
<a name="l00196"></a>00196 <span class="comment">    /// (number of rows).</span>
<a name="l00197"></a>00197 <span class="comment">    /// </span>
<a name="l00198"></a>00198 <span class="comment"></span>    __property System ::Void <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_dd0a52c79b85b2504dcd91cd21877944.htm#dd0a52c79b85b2504dcd91cd21877944">set_ImageYSize</a> (System ::Int32 size);
<a name="l00199"></a>00199 <span class="comment"></span>
<a name="l00200"></a>00200 <span class="comment">    /// \brief</span>
<a name="l00201"></a>00201 <span class="comment">    /// Get a dictionary style interface to the raster properties.</span>
<a name="l00202"></a>00202 <span class="comment">    /// Through this interface the non-standard properties of a raster</span>
<a name="l00203"></a>00203 <span class="comment">    /// image can be determined and their values can be retrieved and set.</span>
<a name="l00204"></a>00204 <span class="comment">    /// Data values are exchanged through the DataValue object to</span>
<a name="l00205"></a>00205 <span class="comment">    /// accommodate various data types, boolean, integer, double, string,</span>
<a name="l00206"></a>00206 <span class="comment">    /// etc.</span>
<a name="l00207"></a>00207 <span class="comment">    /// </span>
<a name="l00208"></a>00208 <span class="comment">    /// \return</span>
<a name="l00209"></a>00209 <span class="comment">    /// The dictionary of auxilliary raster properties.</span>
<a name="l00210"></a>00210 <span class="comment">    /// </span>
<a name="l00211"></a>00211 <span class="comment"></span>    <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_beb53eab499a02931e80014de776510b.htm#beb53eab499a02931e80014de776510b">NAMESPACE_OSGEO_FDO_RASTER::IRasterPropertyDictionary</a>* <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_2316363a9aa9eb1ce1c777b580172720.htm#2316363a9aa9eb1ce1c777b580172720">GetAuxiliaryProperties</a>();
<a name="l00212"></a>00212 <span class="comment"></span>
<a name="l00213"></a>00213 <span class="comment">    /// \brief</span>
<a name="l00214"></a>00214 <span class="comment">    /// Gets the pixel value that represents a NULL value in the available raster stream. </span>
<a name="l00215"></a>00215 <span class="comment">    /// </span>
<a name="l00216"></a>00216 <span class="comment">    /// \remarks</span>
<a name="l00217"></a>00217 <span class="comment">    /// The Null Pixel Value is Data Model dependent. The value of the Null pixel</span>
<a name="l00218"></a>00218 <span class="comment">    /// will change depending on which data model is set. If the client application changes </span>
<a name="l00219"></a>00219 <span class="comment">    /// the Data Model using SetDataModel(RasterDataModel* datamodel) a subsequent </span>
<a name="l00220"></a>00220 <span class="comment">    /// call to GetNullPixelValue will need to be made in order to determine the valid Null </span>
<a name="l00221"></a>00221 <span class="comment">    /// value for the current data model.</span>
<a name="l00222"></a>00222 <span class="comment">    /// </span>
<a name="l00223"></a>00223 <span class="comment">    /// \return</span>
<a name="l00224"></a>00224 <span class="comment">    /// Returns the DataType value that can be used to identify the Null value. </span>
<a name="l00225"></a>00225 <span class="comment">    /// </span>
<a name="l00226"></a>00226 <span class="comment"></span>    __property NAMESPACE_OSGEO_FDO_EXPRESSION::DataValue* <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_aef04ff6611c3df63a78050cedc2c290.htm#aef04ff6611c3df63a78050cedc2c290">get_NullPixelValue</a> ();
<a name="l00227"></a>00227 <span class="comment"></span>
<a name="l00228"></a>00228 <span class="comment">    /// \brief</span>
<a name="l00229"></a>00229 <span class="comment">    /// Set the source of image data.</span>
<a name="l00230"></a>00230 <span class="comment">    /// Image data is shipped using a paradigm similar to BLOB I/O.</span>
<a name="l00231"></a>00231 <span class="comment">    /// When inserting or updating an object with a raster property,</span>
<a name="l00232"></a>00232 <span class="comment">    /// the SetStreamReader method provides a means to set a</span>
<a name="l00233"></a>00233 <span class="comment">    /// IStreamReader callback.</span>
<a name="l00234"></a>00234 <span class="comment">    /// On execution of an insert or update command, requests are made on</span>
<a name="l00235"></a>00235 <span class="comment">    /// the reader for the image data (which is supplied by the FDO client</span>
<a name="l00236"></a>00236 <span class="comment">    /// application).</span>
<a name="l00237"></a>00237 <span class="comment">    /// The format of the image data expected is determined by the</span>
<a name="l00238"></a>00238 <span class="comment">    /// DataModel property.  The data type, bit depth, tiling and</span>
<a name="l00239"></a>00239 <span class="comment">    /// organization specify the meaning of the image data.</span>
<a name="l00240"></a>00240 <span class="comment">    /// By setting the DataModel property prior to setting a</span>
<a name="l00241"></a>00241 <span class="comment">    /// reader for the data, the FDO client application can control the</span>
<a name="l00242"></a>00242 <span class="comment">    /// way data is understood by, the FDO raster subsystem.</span>
<a name="l00243"></a>00243 <span class="comment">    /// </span>
<a name="l00244"></a>00244 <span class="comment"></span>    __property System ::Void <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_774c7c7dba8d62204787f7abbe4972a6.htm#774c7c7dba8d62204787f7abbe4972a6">set_StreamReader</a> (NAMESPACE_OSGEO_COMMON::IStreamReaderImp* reader);
<a name="l00245"></a>00245 <span class="comment"></span>
<a name="l00246"></a>00246 <span class="comment">    /// \brief</span>
<a name="l00247"></a>00247 <span class="comment">    /// Get the source of image data.</span>
<a name="l00248"></a>00248 <span class="comment">    /// Image data is shipped using a paradigm similar to BLOB I/O.</span>
<a name="l00249"></a>00249 <span class="comment">    /// When fetching a raster image the GetStreamReader() method provides</span>
<a name="l00250"></a>00250 <span class="comment">    /// a IStreamReader from which the client may request the image data.</span>
<a name="l00251"></a>00251 <span class="comment">    /// The format of the image data expected is determined by the</span>
<a name="l00252"></a>00252 <span class="comment">    /// DataModel property.  The data type, bit depth, tiling and</span>
<a name="l00253"></a>00253 <span class="comment">    /// organization specify the meaning of the image data.</span>
<a name="l00254"></a>00254 <span class="comment">    /// By setting the DataModel property prior to getting a</span>
<a name="l00255"></a>00255 <span class="comment">    /// reader for the data, the FDO client application can control the</span>
<a name="l00256"></a>00256 <span class="comment">    /// way data is retrieved from the FDO raster subsystem.</span>
<a name="l00257"></a>00257 <span class="comment">    /// When a tiled image is fetched, the image data will be tiled by default,</span>
<a name="l00258"></a>00258 <span class="comment">    /// unless a spatial query is used that covers a portion of a tile,</span>
<a name="l00259"></a>00259 <span class="comment">    /// in which case the image is converted to monolithic form prior to</span>
<a name="l00260"></a>00260 <span class="comment">    /// returning to the client.  The client may force a monolithic</span>
<a name="l00261"></a>00261 <span class="comment">    /// image in the former case by setting the DataModel to monolithic</span>
<a name="l00262"></a>00262 <span class="comment">    /// prior to getting the stream reader.  Or conversely it can request</span>
<a name="l00263"></a>00263 <span class="comment">    /// a re-tiling of the remaining sub-image by setting the DataModel</span>
<a name="l00264"></a>00264 <span class="comment">    /// property to tiled (in this case the tile origin is at the new upper</span>
<a name="l00265"></a>00265 <span class="comment">    /// left corner of the sub-image).</span>
<a name="l00266"></a>00266 <span class="comment">    /// &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Altering the DataModel may have significant performance issues.</span>
<a name="l00267"></a>00267 <span class="comment">    /// </span>
<a name="l00268"></a>00268 <span class="comment"></span>    __property NAMESPACE_OSGEO_COMMON::IStreamReaderImp* <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_973200e680f5d3476131f9d4a62b39c4.htm#973200e680f5d3476131f9d4a62b39c4">get_StreamReader</a> ();
<a name="l00269"></a>00269 <span class="comment"></span>
<a name="l00270"></a>00270 <span class="comment">    /// \brief</span>
<a name="l00271"></a>00271 <span class="comment">    /// Gets the Vertical Unit of Measure corresponding to the Raster Band.</span>
<a name="l00272"></a>00272 <span class="comment">    /// The string value returned will be a considered lookup value that</span>
<a name="l00273"></a>00273 <span class="comment">    /// will be used to identify the properties of the Unit of Measure using</span>
<a name="l00274"></a>00274 <span class="comment">    /// the IGetMeasureUnits command.</span>
<a name="l00275"></a>00275 <span class="comment">    ///</span>
<a name="l00276"></a>00276 <span class="comment">    /// \return</span>
<a name="l00277"></a>00277 <span class="comment">    /// Returns the Unit of Measure type of data associated to the Raster Band.</span>
<a name="l00278"></a>00278 <span class="comment">    ///</span>
<a name="l00279"></a>00279 <span class="comment"></span>    __property System::String* <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_a75e0eccac358bef2f7a1bb63bfb39a3.htm#a75e0eccac358bef2f7a1bb63bfb39a3">get_VerticalUnits</a> ();
<a name="l00280"></a>00280 <span class="comment"></span>
<a name="l00281"></a>00281 <span class="comment">    /// \brief</span>
<a name="l00282"></a>00282 <span class="comment">    /// Sets the Vertical Unit of Measure corresponding to the Raster Band.</span>
<a name="l00283"></a>00283 <span class="comment">    ///</span>
<a name="l00284"></a>00284 <span class="comment">    /// \param units</span>
<a name="l00285"></a>00285 <span class="comment">    /// The Unit of Measure type for the current band.</span>
<a name="l00286"></a>00286 <span class="comment">    /// The units string value corresponds to a Unit of Measure supported</span>
<a name="l00287"></a>00287 <span class="comment">    /// through the IGetMeasureUnits command.</span>
<a name="l00288"></a>00288 <span class="comment"></span>    __property System::Void <a class="code" href="../../d6/dc3/namespace_o_s_geo_1_1_f_d_o_1_1_raster_6eca2f2ad0c845c127bc04446f851630.htm#6eca2f2ad0c845c127bc04446f851630">set_VerticalUnits</a> (System::String* units);
<a name="l00289"></a>00289 
<a name="l00290"></a>00290 <span class="keyword">public</span>:<span class="comment"></span>
<a name="l00291"></a>00291 <span class="comment">    /// \brief</span>
<a name="l00292"></a>00292 <span class="comment">    /// Constructs a IRasterImp object based on an unmanaged instance of the object</span>
<a name="l00293"></a>00293 <span class="comment">    /// </span>
<a name="l00294"></a>00294 <span class="comment">    /// \param unmanaged </span>
<a name="l00295"></a>00295 <span class="comment">    /// Input A Pointer to the unmanaged object.</span>
<a name="l00296"></a>00296 <span class="comment">    /// </span>
<a name="l00297"></a>00297 <span class="comment">    /// \param autoDelete </span>
<a name="l00298"></a>00298 <span class="comment">    /// Input Indicates if the constructed object should be automatically deleted </span>
<a name="l00299"></a>00299 <span class="comment">    /// once it no longer referenced.</span>
<a name="l00300"></a>00300 <span class="comment">    /// </span>
<a name="l00301"></a>00301 <span class="comment"></span>    <a class="code" href="../../dc/d58/class_o_s_geo_1_1_f_d_o_1_1_raster_1_1_i_raster_imp.htm">IRasterImp</a>(System::IntPtr unmanaged, System::Boolean autoDelete);
<a name="l00302"></a>00302 <span class="comment"></span>
<a name="l00303"></a>00303 <span class="comment">/// \cond DOXYGEN-IGNORE</span>
<a name="l00304"></a>00304 <span class="comment"></span><span class="keyword">protected</span>:
<a name="l00305"></a>00305     System::Void ReleaseUnmanagedObject();<span class="comment"></span>
<a name="l00306"></a>00306 <span class="comment">/// \endcond</span>
<a name="l00307"></a>00307 <span class="comment"></span>
<a name="l00308"></a>00308 <span class="keyword">public</span> <span class="keyword">private</span>:
<a name="l00309"></a>00309     <span class="keyword">inline</span> FdoIRaster* GetImpObj();
<a name="l00310"></a>00310 };
<a name="l00311"></a>00311 
<a name="l00312"></a>00312 <a class="code" href="../../d8/d30/_common_namespace_8h_fe8358ba98b54c10948e11fb08879979.htm#fe8358ba98b54c10948e11fb08879979">END_NAMESPACE_OSGEO_FDO_RASTER</a>
<a name="l00313"></a>00313 
<a name="l00314"></a>00314 
</pre></div><!-- footer.html -->
		<hr>
		<table width="100%"  border="0">
			<tr>
				<td>Comments or suggestions? Send us <a href="mailto:isd.docs@autodesk.com&subject=FDO%20.NET%20API%20documentation">feedback</a>.</td>
				<!-- The logo can go in another cell, when we get one -->			
			</tr>
		</table>
	</body>
</html>
