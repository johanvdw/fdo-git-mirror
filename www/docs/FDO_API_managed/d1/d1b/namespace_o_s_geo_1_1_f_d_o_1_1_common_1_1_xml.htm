<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"	"http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>FDO .NET API Reference</title>
		<link href="../../custom.css" rel="stylesheet" type="text/css">
		<link href="../../tabs.css" rel="stylesheet" type="text/css">
	</head>
	<body bgcolor="#FFFFFF">
		<table width="100%"  border="0">
			<tr>
				<td><b>FDO .NET API Reference<b></td>
				<td align="right"><b>Feature Data Objects<b></td>
			</tr>
			
		</table>
<!-- End of: header.html -->
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="../../main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="../../modules.htm"><span>Modules</span></a></li>
    <li id="current"><a href="../../namespaces.htm"><span>Namespaces</span></a></li>
    <li><a href="../../classes.htm"><span>Classes</span></a></li>
    <li><a href="../../files.htm"><span>Files</span></a></li>
    <li><a href="../../pages.htm"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="../../namespaces.htm"><span>Namespace List</span></a></li>
    <li><a href="../../namespacemembers.htm"><span>Namespace&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="../../d4/dae/namespace_o_s_geo.htm">OSGeo</a>::<a class="el" href="../../db/d2d/namespace_o_s_geo_1_1_f_d_o.htm">FDO</a>::<a class="el" href="../../de/dd9/namespace_o_s_geo_1_1_f_d_o_1_1_common.htm">Common</a>::<a class="el" href="../../d1/d1b/namespace_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml.htm">Xml</a></div>
<h1>OSGeo::FDO::Common::Xml Namespace Reference</h1>
<p>

<p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/deb/interface_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_i_xml_sax_handler.htm">IXmlSaxHandler</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../df/deb/interface_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_i_xml_sax_handler.htm">IXmlSaxHandler</a> defines the SAX Handler callback interface. It is not an interface in the strict sense, since each function has a default implementation that does nothing. Implementors can override these callbacks to customize the handling of XML fragments parsed by <a class="el" href="../../d1/df5/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_reader.htm">XmlReader</a>.  <a href="../../df/deb/interface_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_i_xml_sax_handler.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d46/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_attribute.htm">XmlAttribute</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../dd/d46/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_attribute.htm">XmlAttribute</a> contains the name and value of a single attribute from an XML document.  <a href="../../dd/d46/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_attribute.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d3e/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_attribute_collection.htm">XmlAttributeCollection</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d1/d3e/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_attribute_collection.htm">XmlAttributeCollection</a> class represents a collection of <a class="el" href="../../dd/d46/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_attribute.htm">XmlAttribute</a> objects.  <a href="../../d1/d3e/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_attribute_collection.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dcd/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_char_data_handler.htm">XmlCharDataHandler</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../da/dcd/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_char_data_handler.htm">XmlCharDataHandler</a> is convenience class for reading XML element content. When <a class="el" href="../../d1/df5/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_reader.htm">XmlReader</a> encounters the start of an element with simple content, an object of this class can be constructed and pushed onto the XmlReader's SAX handler stack. When the end of the element is reached, the object will contain all of the element's content.  <a href="../../da/dcd/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_char_data_handler.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/de7/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_copy_handler.htm">XmlCopyHandler</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../d9/de7/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_copy_handler.htm">XmlCopyHandler</a> can be used to copy a set of elements from one XML document to another. It can be created and set as the SAX Handler for an XML Reader on the document to copy from. An XML Writer to the document to copy to is passed to one of the Create methods below. The elements to copy will be inserted at the XML writer's current position.  <a href="../../d9/de7/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_copy_handler.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df5/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_reader.htm">XmlReader</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../d1/df5/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_reader.htm">XmlReader</a> reads an XML document from a text or binary stream. As various document fragments are read, it calls the appropriate SAX Handler callback on the current SAX Handler. This object maintains a stack of SAX Handlers, with the current one being the top handler in the stack. Callers provide this object with SAX Handlers to customize the processing of the XML document. SAXHandler callbacks also provide a means to push other handlers onto the stack. For example, a SAX Handler for a particular XML element might push another handler to read a particular sub-element.  <a href="../../d1/df5/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_reader.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d22/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_sax_handler.htm">XmlSaxHandler</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../d8/d22/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_sax_handler.htm">XmlSaxHandler</a> defines the SAX Handler callback interface. It is not an interface in the strict sense, since each function has a default implementation that does nothing. Implementors can override these callbacks to customize the handling of XML fragments parsed by <a class="el" href="../../d1/df5/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_reader.htm">XmlReader</a>.  <a href="../../d8/d22/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_sax_handler.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d95/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_skip_element_handler.htm">XmlSkipElementHandler</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">XmlSkipHandler can be used to skip an XML element, when reading an XML document via <a class="el" href="../../d1/df5/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_reader.htm">XmlReader</a>. It is a <a class="el" href="../../d8/d22/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_sax_handler.htm">XmlSaxHandler</a> with no callback implementations. Therefore, if another XmlSaxHandler's XmlStartElement callback returns a <a class="el" href="../../d1/d95/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_skip_element_handler.htm">XmlSkipElementHandler</a> then there are no more SAX events until the end of the current element is reached.  <a href="../../d1/d95/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_skip_element_handler.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d67/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_writer.htm">XmlWriter</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="../../de/d67/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_writer.htm">XmlWriter</a> writes an XML document to a text or binary stream. Note: The XML document is not completely written until this object is destroyed by releasing all references to it. Therefore, this object must be destroyed before reading back the document being written.  <a href="../../de/d67/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_writer.htm#_details">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d1b/namespace_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_788e42931fbd3e70dcfb90c4343bead5.htm#788e42931fbd3e70dcfb90c4343bead5">XmlCharacters</a> (OSGeo::FDO::Common::Xml::XmlSaxContext *context, System::String *characters)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Default Sax callback that is called when the <a class="el" href="../../d1/df5/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_reader.htm">XmlReader</a> reads a chunk of simple content for the current element. Does nothing by default. This function may be called multiple times for the same element, if the the content is long. Applications must not make any assumptions about the chunk size or number of chunks for each element.  <a href="#788e42931fbd3e70dcfb90c4343bead5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d1b/namespace_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_4cf611abb7ab33f07e6edd5d042a3c70.htm#4cf611abb7ab33f07e6edd5d042a3c70">XmlEndDocument</a> (OSGeo::FDO::Common::Xml::XmlSaxContext *context)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Default Sax callback that is called when the <a class="el" href="../../d1/df5/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_reader.htm">XmlReader</a> finishes reading an XML document. Does nothing.  <a href="#4cf611abb7ab33f07e6edd5d042a3c70"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Boolean&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d1b/namespace_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_b4eebdb29f32a46371e5e7e14c24d221.htm#b4eebdb29f32a46371e5e7e14c24d221">XmlEndElement</a> (OSGeo::FDO::Common::Xml::XmlSaxContext *context, System::String *resourceLocation, System::String *name, System::String *qualifiedName)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Default Sax callback that is called when the <a class="el" href="../../d1/df5/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_reader.htm">XmlReader</a> reads the end tag for an XML element in the document. Does nothing.  <a href="#b4eebdb29f32a46371e5e7e14c24d221"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="../../df/deb/interface_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_i_xml_sax_handler.htm">OSGeo::FDO::Common::Xml::IXmlSaxHandler</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d1b/namespace_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_78175f523b61563efa236308b6898c5e.htm#78175f523b61563efa236308b6898c5e">XmlStartElement</a> (OSGeo::FDO::Common::Xml::XmlSaxContext *context, System::String *resourceLocation, System::String *name, System::String *qualifiedName, <a class="el" href="../../d1/d3e/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_attribute_collection.htm">OSGeo::FDO::Common::Xml::XmlAttributeCollection</a> *attributes)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Default Sax callback that is called when the <a class="el" href="../../d1/df5/class_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_1_1_xml_reader.htm">XmlReader</a> reads the start tag for an XML element in the document. Does nothing.  <a href="#78175f523b61563efa236308b6898c5e"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Variables</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">public __gc __interface&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d1b/namespace_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_69174d66d030eb5ed1e9be77a9c2064f.htm#69174d66d030eb5ed1e9be77a9c2064f">IXmlSaxHandler</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">public __gc __interface&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d1b/namespace_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_69174d66d030eb5ed1e9be77a9c2064f.htm#69174d66d030eb5ed1e9be77a9c2064f">IXmlSaxHandler</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">public __gc __interface&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d1b/namespace_o_s_geo_1_1_f_d_o_1_1_common_1_1_xml_69174d66d030eb5ed1e9be77a9c2064f.htm#69174d66d030eb5ed1e9be77a9c2064f">IXmlSaxHandler</a></td></tr>

</table>
<!-- footer.html -->
		<hr>
		<table width="100%"  border="0">
			<tr>
				<td>Comments or suggestions? Send us <a href="mailto:isd.docs@autodesk.com&subject=FDO%20.NET%20API%20documentation">feedback</a>.</td>
				<!-- The logo can go in another cell, when we get one -->			
			</tr>
		</table>
	</body>
</html>
