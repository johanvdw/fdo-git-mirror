<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"	"http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>FDO .NET API Reference</title>
		<link href="../../custom.css" rel="stylesheet" type="text/css">
		<link href="../../tabs.css" rel="stylesheet" type="text/css">
	</head>
	<body bgcolor="#FFFFFF">
		<table width="100%"  border="0">
			<tr>
				<td><b>FDO .NET API Reference<b></td>
				<td align="right"><b>Feature Data Objects<b></td>
			</tr>
			
		</table>
<!-- End of: header.html -->
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="../../main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="../../modules.htm"><span>Modules</span></a></li>
    <li><a href="../../namespaces.htm"><span>Namespaces</span></a></li>
    <li><a href="../../classes.htm"><span>Classes</span></a></li>
    <li id="current"><a href="../../files.htm"><span>Files</span></a></li>
    <li><a href="../../pages.htm"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="../../files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="../../globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>mgSignatureDefinition.h</h1><a href="../../d9/d76/mg_signature_definition_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment">* Copyright (C) 2004-2006  Autodesk, Inc.</span>
<a name="l00003"></a>00003 <span class="comment">* </span>
<a name="l00004"></a>00004 <span class="comment">* This library is free software; you can redistribute it and/or</span>
<a name="l00005"></a>00005 <span class="comment">* modify it under the terms of version 2.1 of the GNU Lesser</span>
<a name="l00006"></a>00006 <span class="comment">* General Public License as published by the Free Software Foundation.</span>
<a name="l00007"></a>00007 <span class="comment">* </span>
<a name="l00008"></a>00008 <span class="comment">* This library is distributed in the hope that it will be useful,</span>
<a name="l00009"></a>00009 <span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00010"></a>00010 <span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00011"></a>00011 <span class="comment">* Lesser General Public License for more details.</span>
<a name="l00012"></a>00012 <span class="comment">* </span>
<a name="l00013"></a>00013 <span class="comment">* You should have received a copy of the GNU Lesser General Public</span>
<a name="l00014"></a>00014 <span class="comment">* License along with this library; if not, write to the Free Software</span>
<a name="l00015"></a>00015 <span class="comment">* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">*/</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#pragma once</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span>
<a name="l00021"></a>00021 <span class="preprocessor">#include "<a class="code" href="../../d4/d6c/mg_data_type_8h.htm">FDO\Schema\mgDataType.h</a>"</span>
<a name="l00022"></a>00022 <span class="preprocessor">#include "<a class="code" href="../../da/d07/mg_property_type_8h.htm">FDO\Schema\mgPropertyType.h</a>"</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include "<a class="code" href="../../d6/d82/mg_argument_definition_collection_8h.htm">FDO\Connections\Capabilities\mgArgumentDefinitionCollection.h</a>"</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include "<a class="code" href="../../d6/df2/mg_read_only_arg_def_coll_8h.htm">FDO\Connections\Capabilities\mgReadOnlyArgDefColl.h</a>"</span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="keyword">class </span>FdoSignatureDefinition;
<a name="l00027"></a>00027 <span class="keyword">class </span>FdoReadOnlySignatureDefinitionCollection;
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="keyword">using namespace </span><a class="code" href="../../d8/d30/_common_namespace_8h_19adbdcc7fc458c9d298e9b55851747a.htm#19adbdcc7fc458c9d298e9b55851747a">NAMESPACE_OSGEO_FDO_SCHEMA</a>;
<a name="l00030"></a>00030 <a class="code" href="../../d8/d30/_common_namespace_8h_8569f5061fc043dd24827eb4cd5216ab.htm#8569f5061fc043dd24827eb4cd5216ab">BEGIN_NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES</a>
<a name="l00031"></a>00031 <span class="comment"></span>
<a name="l00032"></a>00032 <span class="comment">/// \ingroup (OSGeoFDOConnectionsCapabilities)</span>
<a name="l00033"></a>00033 <span class="comment">/// \brief</span>
<a name="l00034"></a>00034 <span class="comment">/// The FDO SignatureDefinition class allows the signatures of FDO FunctionDefinition objects to be defined.</span>
<a name="l00035"></a><a class="code" href="../../de/dd5/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition.htm">00035</a> <span class="comment"></span><span class="keyword">public</span> __gc <span class="keyword">class </span><a class="code" href="../../de/dd5/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition.htm">SignatureDefinition</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d30/_common_namespace_8h_bfd166a5d24ab2e990a03e8efac51c13.htm#bfd166a5d24ab2e990a03e8efac51c13">NAMESPACE_OSGEO_RUNTIME</a>::Disposable
<a name="l00036"></a>00036 {
<a name="l00037"></a>00037 <span class="keyword">public</span>:
<a name="l00038"></a>00038 <span class="comment"></span>
<a name="l00039"></a>00039 <span class="comment">    /// \brief</span>
<a name="l00040"></a>00040 <span class="comment">    /// Constructs an instance of a FunctionDefinition using the specified arguments.</span>
<a name="l00041"></a>00041 <span class="comment"></span>    <a class="code" href="../../de/dd5/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition.htm">SignatureDefinition</a> (<a class="code" href="../../dc/dd2/group___o_s_geo_f_d_o_schema_gd8ed01ff3ff33333d8e19db4d2818bb6.htm#gd8ed01ff3ff33333d8e19db4d2818bb6">NAMESPACE_OSGEO_FDO_SCHEMA::DataType</a> returnDataType,
<a name="l00042"></a>00042                          NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::ArgumentDefinitionCollection *arguments);
<a name="l00043"></a>00043 <span class="comment"></span>
<a name="l00044"></a>00044 <span class="comment">    /// \brief</span>
<a name="l00045"></a>00045 <span class="comment">    /// Constructs an instance of a FunctionDefinition using the specified arguments.</span>
<a name="l00046"></a>00046 <span class="comment"></span>    <a class="code" href="../../de/dd5/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition.htm">SignatureDefinition</a> (<a class="code" href="../../dc/dd2/group___o_s_geo_f_d_o_schema_g7ff5a5c54f182b86d1cd993cf4512c87.htm#g7ff5a5c54f182b86d1cd993cf4512c87">NAMESPACE_OSGEO_FDO_SCHEMA::PropertyType</a> returnPropertyType,
<a name="l00047"></a>00047                          <a class="code" href="../../dc/dd2/group___o_s_geo_f_d_o_schema_gd8ed01ff3ff33333d8e19db4d2818bb6.htm#gd8ed01ff3ff33333d8e19db4d2818bb6">NAMESPACE_OSGEO_FDO_SCHEMA::DataType</a> returnDataType,
<a name="l00048"></a>00048                          NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::ArgumentDefinitionCollection *arguments);
<a name="l00049"></a>00049 <span class="comment"></span>
<a name="l00050"></a>00050 <span class="comment">    /// \brief</span>
<a name="l00051"></a>00051 <span class="comment">    /// Gets an array of ArgumentDefinition objects required for the function. </span>
<a name="l00052"></a>00052 <span class="comment"></span>    __property NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::ReadOnlyArgumentDefinitionCollection *get_Arguments();
<a name="l00053"></a>00053 <span class="comment"></span>
<a name="l00054"></a>00054 <span class="comment">    /// \brief</span>
<a name="l00055"></a>00055 <span class="comment">    /// Gets the PropertyType of the function return value.</span>
<a name="l00056"></a>00056 <span class="comment"></span>    __property <a class="code" href="../../dc/dd2/group___o_s_geo_f_d_o_schema_g7ff5a5c54f182b86d1cd993cf4512c87.htm#g7ff5a5c54f182b86d1cd993cf4512c87">NAMESPACE_OSGEO_FDO_SCHEMA::PropertyType</a> get_ReturnPropertyType();
<a name="l00057"></a>00057 <span class="comment"></span>
<a name="l00058"></a>00058 <span class="comment">    /// \brief</span>
<a name="l00059"></a>00059 <span class="comment">    /// Gets the DataType of the function return value. This is only valid if the function return property type is</span>
<a name="l00060"></a>00060 <span class="comment">    /// PropertyType_DataProperty.</span>
<a name="l00061"></a>00061 <span class="comment"></span>    __property <a class="code" href="../../dc/dd2/group___o_s_geo_f_d_o_schema_gd8ed01ff3ff33333d8e19db4d2818bb6.htm#gd8ed01ff3ff33333d8e19db4d2818bb6">NAMESPACE_OSGEO_FDO_SCHEMA::DataType</a> get_ReturnType();
<a name="l00062"></a>00062 <span class="comment"></span>
<a name="l00063"></a>00063 <span class="comment">/// \cond DOXYGEN-IGNORE</span>
<a name="l00064"></a>00064 <span class="comment"></span><span class="keyword">protected</span>:
<a name="l00065"></a>00065     System::Void ReleaseUnmanagedObject();<span class="comment"></span>
<a name="l00066"></a>00066 <span class="comment">/// \endcond</span>
<a name="l00067"></a>00067 <span class="comment"></span>
<a name="l00068"></a>00068 <span class="keyword">public</span> <span class="keyword">private</span>:
<a name="l00069"></a>00069     <a class="code" href="../../de/dd5/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition.htm">SignatureDefinition</a>(System::IntPtr unmanaged, System::Boolean autoDelete);
<a name="l00070"></a>00070 
<a name="l00071"></a>00071     <span class="keyword">inline</span> FdoSignatureDefinition* GetImpObj();
<a name="l00072"></a>00072 };
<a name="l00073"></a>00073 
<a name="l00074"></a>00074 <span class="comment">// -----------------------------------------------------------------------------------------------------</span>
<a name="l00075"></a>00075 
<a name="l00076"></a>00076 <span class="comment"></span>
<a name="l00077"></a>00077 <span class="comment">/// \ingroup (OSGeoFDOConnectionsCapabilities)</span>
<a name="l00078"></a>00078 <span class="comment">/// \brief</span>
<a name="l00079"></a>00079 <span class="comment">/// SignatureDefinitionCollection is a collection of SignatureDefinition elements.</span>
<a name="l00080"></a>00080 <span class="comment">///</span>
<a name="l00081"></a>00081 <span class="comment"></span>[System::Reflection::DefaultMemberAttribute(<span class="stringliteral">"RealTypeItem"</span>)]
<a name="l00082"></a><a class="code" href="../../d6/d32/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition_collection.htm">00082</a> <span class="keyword">public</span> __sealed __gc <span class="keyword">class </span><a class="code" href="../../d6/d32/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition_collection.htm">SignatureDefinitionCollection</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d30/_common_namespace_8h_bfd166a5d24ab2e990a03e8efac51c13.htm#bfd166a5d24ab2e990a03e8efac51c13">NAMESPACE_OSGEO_RUNTIME</a>::Disposable, <span class="keyword">public</span> System::Collections::IList
<a name="l00083"></a>00083 {<span class="comment"></span>
<a name="l00084"></a>00084 <span class="comment">/// \cond DOXYGEN-IGNORE</span>
<a name="l00085"></a>00085 <span class="comment"></span><span class="keyword">private</span>:<span class="comment"></span>
<a name="l00086"></a>00086 <span class="comment">    /// \brief</span>
<a name="l00087"></a>00087 <span class="comment">    /// A Nested class defined to provide enumeration of Dictionary elements</span>
<a name="l00088"></a>00088 <span class="comment">    ///</span>
<a name="l00089"></a>00089 <span class="comment">    /// Enumerators can be used to read the data in the collection, </span>
<a name="l00090"></a>00090 <span class="comment">    /// but they cannot be used to modify the underlying collection.</span>
<a name="l00091"></a>00091 <span class="comment">    ///</span>
<a name="l00092"></a>00092 <span class="comment">    /// An enumerator remains valid as long as the collection remains unchanged. </span>
<a name="l00093"></a>00093 <span class="comment">    /// If changes are made to the collection, such as adding, modifying, or deleting </span>
<a name="l00094"></a>00094 <span class="comment">    /// elements, the enumerator is irrecoverably invalidated and the next call to </span>
<a name="l00095"></a>00095 <span class="comment">    /// MoveNext or Reset throws an InvalidOperationException. If the collection is </span>
<a name="l00096"></a>00096 <span class="comment">    /// modified between MoveNext and Current, Current returns the element that it is </span>
<a name="l00097"></a>00097 <span class="comment">    /// set to, even if the enumerator is already invalidated.</span>
<a name="l00098"></a>00098 <span class="comment">    ///</span>
<a name="l00099"></a>00099 <span class="comment">    /// The enumerator does not have exclusive access to the collection; therefore, </span>
<a name="l00100"></a>00100 <span class="comment">    /// enumerating through a collection is intrinsically not a thread-safe procedure. </span>
<a name="l00101"></a>00101 <span class="comment">    /// Even when a collection is synchronized, other threads can still modify the </span>
<a name="l00102"></a>00102 <span class="comment">    /// collection, which causes the enumerator to throw an exception. To guarantee </span>
<a name="l00103"></a>00103 <span class="comment">    /// thread safety during enumeration, you can either lock the collection during </span>
<a name="l00104"></a>00104 <span class="comment">    /// the entire enumeration or catch the exceptions resulting from changes made </span>
<a name="l00105"></a>00105 <span class="comment">    /// by other threads.</span>
<a name="l00106"></a>00106 <span class="comment">    /// </span>
<a name="l00107"></a>00107 <span class="comment"></span>    __gc <span class="keyword">class </span>Enumerator : <span class="keyword">public</span> System::Collections::IEnumerator
<a name="l00108"></a>00108     {
<a name="l00109"></a>00109     <span class="keyword">private</span>:
<a name="l00110"></a>00110         <a class="code" href="../../d6/d32/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition_collection.htm">SignatureDefinitionCollection</a> *m_pCol;
<a name="l00111"></a>00111         System::Int32 m_nIdx;
<a name="l00112"></a>00112 
<a name="l00113"></a>00113     <span class="keyword">public</span>:<span class="comment"></span>
<a name="l00114"></a>00114 <span class="comment">        /// \brief</span>
<a name="l00115"></a>00115 <span class="comment">        /// Constructs a new Collection Enumerator</span>
<a name="l00116"></a>00116 <span class="comment">        /// </span>
<a name="l00117"></a>00117 <span class="comment">        /// \param col </span>
<a name="l00118"></a>00118 <span class="comment">        /// Input The collection to enumerate.</span>
<a name="l00119"></a>00119 <span class="comment">        /// </span>
<a name="l00120"></a>00120 <span class="comment"></span>        Enumerator(<a class="code" href="../../d6/d32/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition_collection.htm">SignatureDefinitionCollection</a>* elements) : m_pCol(elements), m_nIdx(-1) 
<a name="l00121"></a>00121         {
<a name="l00122"></a>00122 
<a name="l00123"></a>00123         }
<a name="l00124"></a>00124 <span class="comment"></span>
<a name="l00125"></a>00125 <span class="comment">        /// \brief</span>
<a name="l00126"></a>00126 <span class="comment">        /// Retrieves the current object at the enumerator location</span>
<a name="l00127"></a>00127 <span class="comment">        /// </span>
<a name="l00128"></a>00128 <span class="comment">        /// \return</span>
<a name="l00129"></a>00129 <span class="comment">        /// Retuns the current object referenced by the enumerator</span>
<a name="l00130"></a>00130 <span class="comment">        /// </span>
<a name="l00131"></a>00131 <span class="comment"></span>        __property System::Object *get_Current();
<a name="l00132"></a>00132 <span class="comment"></span>
<a name="l00133"></a>00133 <span class="comment">        /// \brief</span>
<a name="l00134"></a>00134 <span class="comment">        /// Initially, the enumerator is positioned before the first object in the collection. </span>
<a name="l00135"></a>00135 <span class="comment">        /// At this position, calling the Current property throws an exception. </span>
<a name="l00136"></a>00136 <span class="comment">        /// Therefore, you must call the MoveNext method to advance the enumerator </span>
<a name="l00137"></a>00137 <span class="comment">        /// to the first element of the collection before reading the value of Current.</span>
<a name="l00138"></a>00138 <span class="comment">        /// If MoveNext passes the end of the collection, the enumerator is positioned </span>
<a name="l00139"></a>00139 <span class="comment">        /// after the last element in the collection and MoveNext returns false. </span>
<a name="l00140"></a>00140 <span class="comment">        /// When the enumerator is at this position, subsequent calls to MoveNext also return false. </span>
<a name="l00141"></a>00141 <span class="comment">        /// If the last call to MoveNext returned false, calling Current throws an exception. </span>
<a name="l00142"></a>00142 <span class="comment">        /// To set Current to the first element of the collection again, you can call Reset </span>
<a name="l00143"></a>00143 <span class="comment">        /// followed by MoveNext.</span>
<a name="l00144"></a>00144 <span class="comment">        /// </span>
<a name="l00145"></a>00145 <span class="comment">        /// \return</span>
<a name="l00146"></a>00146 <span class="comment">        /// Retuns true if the Enumerator is able to move to a valid element</span>
<a name="l00147"></a>00147 <span class="comment">        /// otherwise false.</span>
<a name="l00148"></a>00148 <span class="comment">        /// </span>
<a name="l00149"></a>00149 <span class="comment"></span>        System::Boolean MoveNext();
<a name="l00150"></a>00150 <span class="comment"></span>
<a name="l00151"></a>00151 <span class="comment">        /// \brief</span>
<a name="l00152"></a>00152 <span class="comment">        /// Initially, the enumerator is positioned before the first element in the collection. </span>
<a name="l00153"></a>00153 <span class="comment">        /// The Reset method brings the enumerator back to this position. </span>
<a name="l00154"></a>00154 <span class="comment">        /// </span>
<a name="l00155"></a>00155 <span class="comment"></span>        System::Void <a class="code" href="../../db/d99/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_long_transaction_a83d1e486514e9b734817dbf301b098f.htm#a83d1e486514e9b734817dbf301b098f">Reset</a>();
<a name="l00156"></a>00156     };
<a name="l00157"></a>00157 
<a name="l00158"></a>00158 <span class="keyword">public</span> <span class="keyword">private</span>:
<a name="l00159"></a>00159     <a class="code" href="../../d6/d32/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition_collection.htm">SignatureDefinitionCollection</a>(System::IntPtr unmanaged, System::Boolean autoDelete);
<a name="l00160"></a>00160 
<a name="l00161"></a>00161     <span class="keyword">inline</span> FdoSignatureDefinitionCollection *GetImpObj();
<a name="l00162"></a>00162 
<a name="l00163"></a>00163 <span class="keyword">private</span>:
<a name="l00164"></a>00164     <span class="comment">// System::Collections::ICollection interface properties</span>
<a name="l00165"></a>00165     __property System::Object* System::Collections::ICollection::get_SyncRoot();
<a name="l00166"></a>00166     __property System::Boolean System::Collections::ICollection::get_IsSynchronized();
<a name="l00167"></a>00167 
<a name="l00168"></a>00168     <span class="comment">// System::Collections::ICollection interface methods</span>
<a name="l00169"></a>00169     System::Void System::Collections::ICollection::CopyTo(System::Array* array,System::Int32 index);
<a name="l00170"></a>00170 
<a name="l00171"></a>00171     <span class="comment">// System::Collections::IList interface properties</span>
<a name="l00172"></a>00172     __property System::Boolean System::Collections::IList::get_IsFixedSize();
<a name="l00173"></a>00173     __property System::Boolean System::Collections::IList::get_IsReadOnly();
<a name="l00174"></a>00174     __property Object* <a class="code" href="../../df/df7/namespace_o_s_geo_1_1_f_d_o_1_1_geometry_d1f15d741ef081fa070cf6dca6cbc31c.htm#d1f15d741ef081fa070cf6dca6cbc31c">System::Collections::IList::get_Item</a>(System::Int32 index);
<a name="l00175"></a>00175     __property System::Void  System::Collections::IList::set_Item(System::Int32 index, Object* value);
<a name="l00176"></a>00176 
<a name="l00177"></a>00177     <span class="comment">// System::Collections::IList interface methods</span>
<a name="l00178"></a>00178     System::Int32 System::Collections::IList::Add(Object* value);
<a name="l00179"></a>00179     System::Boolean System::Collections::IList::Contains(Object* value);
<a name="l00180"></a>00180     System::Int32 System::Collections::IList::IndexOf(Object* value);
<a name="l00181"></a>00181     System::Void System::Collections::IList::Insert(System::Int32 index, Object* value);
<a name="l00182"></a>00182     System::Void System::Collections::IList::Remove(Object* value);<span class="comment"></span>
<a name="l00183"></a>00183 <span class="comment">/// \endcond</span>
<a name="l00184"></a>00184 <span class="comment"></span>
<a name="l00185"></a>00185 <span class="keyword">public</span>:
<a name="l00186"></a>00186     <a class="code" href="../../d6/d32/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition_collection.htm">SignatureDefinitionCollection</a>();
<a name="l00187"></a>00187 <span class="comment"></span>
<a name="l00188"></a>00188 <span class="comment">    /// \brief</span>
<a name="l00189"></a>00189 <span class="comment">    /// Gets the count of items in collection.</span>
<a name="l00190"></a>00190 <span class="comment">    /// </span>
<a name="l00191"></a>00191 <span class="comment">    /// \return</span>
<a name="l00192"></a>00192 <span class="comment">    /// Returns the number of items in the collection.</span>
<a name="l00193"></a>00193 <span class="comment">    /// </span>
<a name="l00194"></a>00194 <span class="comment"></span>    __property System::Int32 <a class="code" href="../../db/d99/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_long_transaction_c8e11f1473c337b36d482a7a5e3846fe.htm#c8e11f1473c337b36d482a7a5e3846fe">get_Count</a>(System::Void);
<a name="l00195"></a>00195 <span class="comment"></span>
<a name="l00196"></a>00196 <span class="comment">    /// \brief</span>
<a name="l00197"></a>00197 <span class="comment">    /// Gets an enumerator that can iterate through a collection.</span>
<a name="l00198"></a>00198 <span class="comment">    /// </span>
<a name="l00199"></a>00199 <span class="comment">    /// \return</span>
<a name="l00200"></a>00200 <span class="comment">    /// Returns an enumerator on the dictionary.</span>
<a name="l00201"></a>00201 <span class="comment">    /// </span>
<a name="l00202"></a>00202 <span class="comment"></span>    __sealed System::Collections::IEnumerator* GetEnumerator(System::Void);
<a name="l00203"></a>00203 <span class="comment"></span>
<a name="l00204"></a>00204 <span class="comment">    /// \brief</span>
<a name="l00205"></a>00205 <span class="comment">    /// Removes the index-th SignatureDefinition from this collection.</span>
<a name="l00206"></a>00206 <span class="comment">    /// </span>
<a name="l00207"></a>00207 <span class="comment">    /// \param index </span>
<a name="l00208"></a>00208 <span class="comment">    /// Input index of the element to remove.</span>
<a name="l00209"></a>00209 <span class="comment">    /// </span>
<a name="l00210"></a>00210 <span class="comment"></span>    System::Void RemoveAt(System::Int32 index);
<a name="l00211"></a>00211 <span class="comment"></span>
<a name="l00212"></a>00212 <span class="comment">    /// \brief</span>
<a name="l00213"></a>00213 <span class="comment">    /// Removes all elements from the collection.</span>
<a name="l00214"></a>00214 <span class="comment">    /// </span>
<a name="l00215"></a>00215 <span class="comment"></span>    System::Void Clear();
<a name="l00216"></a>00216 <span class="comment"></span>
<a name="l00217"></a>00217 <span class="comment">    /// \brief</span>
<a name="l00218"></a>00218 <span class="comment">    /// Adds a SignatureDefinition object into the collection.</span>
<a name="l00219"></a>00219 <span class="comment">    /// </span>
<a name="l00220"></a>00220 <span class="comment">    /// \param value </span>
<a name="l00221"></a>00221 <span class="comment">    /// Input the SignatureDefinition object to add.</span>
<a name="l00222"></a>00222 <span class="comment">    /// </span>
<a name="l00223"></a>00223 <span class="comment">    /// \return</span>
<a name="l00224"></a>00224 <span class="comment">    /// Returns the position into which the new element was inserted.</span>
<a name="l00225"></a>00225 <span class="comment">    /// </span>
<a name="l00226"></a>00226 <span class="comment"></span>    System::Int32 Add(NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::SignatureDefinition *value);
<a name="l00227"></a>00227 <span class="comment"></span>
<a name="l00228"></a>00228 <span class="comment">    /// \brief</span>
<a name="l00229"></a>00229 <span class="comment">    /// Determines the index of a specific SignatureDefinition object.</span>
<a name="l00230"></a>00230 <span class="comment">    /// </span>
<a name="l00231"></a>00231 <span class="comment">    /// \param value </span>
<a name="l00232"></a>00232 <span class="comment">    /// Input the SignatureDefinition object to locate in the collection.</span>
<a name="l00233"></a>00233 <span class="comment">    /// </span>
<a name="l00234"></a>00234 <span class="comment">    /// \return</span>
<a name="l00235"></a>00235 <span class="comment">    /// The index of value if found in the collection; otherwise, -1.</span>
<a name="l00236"></a>00236 <span class="comment">    /// </span>
<a name="l00237"></a>00237 <span class="comment"></span>    System::Int32 IndexOf(NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::SignatureDefinition *value);
<a name="l00238"></a>00238 <span class="comment"></span>
<a name="l00239"></a>00239 <span class="comment">    /// \brief</span>
<a name="l00240"></a>00240 <span class="comment">    /// Inserts a SignatureDefinition object into the collection at the specified position.</span>
<a name="l00241"></a>00241 <span class="comment">    /// </span>
<a name="l00242"></a>00242 <span class="comment">    /// \param index </span>
<a name="l00243"></a>00243 <span class="comment">    /// Input the zero-based index at which value should be inserted.</span>
<a name="l00244"></a>00244 <span class="comment">    /// \param value </span>
<a name="l00245"></a>00245 <span class="comment">    /// Input the SignatureDefinition object to insert.</span>
<a name="l00246"></a>00246 <span class="comment">    /// </span>
<a name="l00247"></a>00247 <span class="comment"></span>    System::Void Insert(System::Int32 index, NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::SignatureDefinition *value);
<a name="l00248"></a>00248 <span class="comment"></span>
<a name="l00249"></a>00249 <span class="comment">    /// \brief</span>
<a name="l00250"></a>00250 <span class="comment">    /// Removes the first occurrence of a specific SignatureDefinition object.</span>
<a name="l00251"></a>00251 <span class="comment">    /// </span>
<a name="l00252"></a>00252 <span class="comment">    /// \param value </span>
<a name="l00253"></a>00253 <span class="comment">    /// Input the SignatureDefinition object to remove from the collection.</span>
<a name="l00254"></a>00254 <span class="comment">    /// </span>
<a name="l00255"></a>00255 <span class="comment"></span>    System::Void Remove(NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::SignatureDefinition *value);
<a name="l00256"></a>00256 <span class="comment"></span>
<a name="l00257"></a>00257 <span class="comment">    /// \brief</span>
<a name="l00258"></a>00258 <span class="comment">    /// Determines whether the collection contains a specific SignatureDefinition object.</span>
<a name="l00259"></a>00259 <span class="comment">    /// </span>
<a name="l00260"></a>00260 <span class="comment">    /// \param value </span>
<a name="l00261"></a>00261 <span class="comment">    /// Input The SignatureDefinition object to search in the collection.</span>
<a name="l00262"></a>00262 <span class="comment">    /// </span>
<a name="l00263"></a>00263 <span class="comment">    /// \return</span>
<a name="l00264"></a>00264 <span class="comment">    /// Returns true if the value is found in the collection; otherwise, false.</span>
<a name="l00265"></a>00265 <span class="comment">    /// </span>
<a name="l00266"></a>00266 <span class="comment"></span>    System::Boolean Contains(NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::SignatureDefinition *value);
<a name="l00267"></a>00267 <span class="comment"></span>
<a name="l00268"></a>00268 <span class="comment">    /// \brief</span>
<a name="l00269"></a>00269 <span class="comment">    /// Copies the elements of the collection to an array.</span>
<a name="l00270"></a>00270 <span class="comment">    /// </span>
<a name="l00271"></a>00271 <span class="comment">    /// \param array </span>
<a name="l00272"></a>00272 <span class="comment">    /// Output the one-dimensional Array that is the destination of the elements copied from this collection.</span>
<a name="l00273"></a>00273 <span class="comment">    ///</span>
<a name="l00274"></a>00274 <span class="comment">    /// \param startAt </span>
<a name="l00275"></a>00275 <span class="comment">    /// Input an integer that represents the index in array at which copying begins.</span>
<a name="l00276"></a>00276 <span class="comment">    /// </span>
<a name="l00277"></a>00277 <span class="comment"></span>    System::Void CopyTo(NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::SignatureDefinition *array[], System::Int32 startAt);
<a name="l00278"></a>00278 <span class="comment"></span>
<a name="l00279"></a>00279 <span class="comment">    /// \brief</span>
<a name="l00280"></a>00280 <span class="comment">    /// Gets the item in the collection at the specified index. </span>
<a name="l00281"></a>00281 <span class="comment">    /// </span>
<a name="l00282"></a>00282 <span class="comment">    /// \param index </span>
<a name="l00283"></a>00283 <span class="comment">    /// The index of the item in the collection. The index is 0 based.</span>
<a name="l00284"></a>00284 <span class="comment">    /// </span>
<a name="l00285"></a>00285 <span class="comment">    /// \return</span>
<a name="l00286"></a>00286 <span class="comment">    /// Returns an instance of a the collected item.</span>
<a name="l00287"></a>00287 <span class="comment">    /// Throws an instance of Exception if the index is out of range or an error occurs.</span>
<a name="l00288"></a>00288 <span class="comment">    /// </span>
<a name="l00289"></a>00289 <span class="comment"></span>    __property <a class="code" href="../../de/dd5/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition.htm">SignatureDefinition</a> *get_RealTypeItem(System::Int32 index);
<a name="l00290"></a>00290 <span class="comment"></span>
<a name="l00291"></a>00291 <span class="comment">    /// \brief</span>
<a name="l00292"></a>00292 <span class="comment">    /// Sets the value of the item at the specified index</span>
<a name="l00293"></a>00293 <span class="comment">    /// </span>
<a name="l00294"></a>00294 <span class="comment">    /// \param index </span>
<a name="l00295"></a>00295 <span class="comment">    /// Input index of the item to set.</span>
<a name="l00296"></a>00296 <span class="comment">    /// </span>
<a name="l00297"></a>00297 <span class="comment">    /// \param value </span>
<a name="l00298"></a>00298 <span class="comment">    /// Input the value of the item</span>
<a name="l00299"></a>00299 <span class="comment">    /// </span>
<a name="l00300"></a>00300 <span class="comment"></span>    __property System::Void set_RealTypeItem(System::Int32 index, NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::SignatureDefinition *value);
<a name="l00301"></a>00301 <span class="comment"></span>
<a name="l00302"></a>00302 <span class="comment">    /// \brief</span>
<a name="l00303"></a>00303 <span class="comment">    /// Gets an item in the collection.</span>
<a name="l00304"></a>00304 <span class="comment">    /// </span>
<a name="l00305"></a>00305 <span class="comment">    /// \param index </span>
<a name="l00306"></a>00306 <span class="comment">    /// Input index of the item to retrieve.</span>
<a name="l00307"></a>00307 <span class="comment">    /// </span>
<a name="l00308"></a>00308 <span class="comment">    /// \return</span>
<a name="l00309"></a>00309 <span class="comment">    /// Returns the item at the specified index</span>
<a name="l00310"></a>00310 <span class="comment">    /// </span>
<a name="l00311"></a>00311 <span class="comment"></span>    __property <a class="code" href="../../de/dd5/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition.htm">SignatureDefinition</a> *<a class="code" href="../../df/df7/namespace_o_s_geo_1_1_f_d_o_1_1_geometry_d1f15d741ef081fa070cf6dca6cbc31c.htm#d1f15d741ef081fa070cf6dca6cbc31c">get_Item</a>(System::Int32 index);
<a name="l00312"></a>00312 <span class="comment"></span>
<a name="l00313"></a>00313 <span class="comment">    /// \brief</span>
<a name="l00314"></a>00314 <span class="comment">    /// Sets the value of the item at the specified index</span>
<a name="l00315"></a>00315 <span class="comment">    /// </span>
<a name="l00316"></a>00316 <span class="comment">    /// \param index </span>
<a name="l00317"></a>00317 <span class="comment">    /// Input index of the item to set.</span>
<a name="l00318"></a>00318 <span class="comment">    /// </span>
<a name="l00319"></a>00319 <span class="comment">    /// \param value </span>
<a name="l00320"></a>00320 <span class="comment">    /// Input the value of the item</span>
<a name="l00321"></a>00321 <span class="comment">    /// </span>
<a name="l00322"></a>00322 <span class="comment"></span>    __property System::Void set_Item(System::Int32 index, NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::SignatureDefinition *value);
<a name="l00323"></a>00323 <span class="comment"></span>
<a name="l00324"></a>00324 <span class="comment">/// \cond DOXYGEN-IGNORE</span>
<a name="l00325"></a>00325 <span class="comment"></span><span class="keyword">protected</span>:
<a name="l00326"></a>00326     System::Void ReleaseUnmanagedObject();<span class="comment"></span>
<a name="l00327"></a>00327 <span class="comment">/// \endcond</span>
<a name="l00328"></a>00328 <span class="comment"></span>};
<a name="l00329"></a>00329 
<a name="l00330"></a>00330 <span class="comment">// -----------------------------------------------------------------------------------------------------</span>
<a name="l00331"></a>00331 <span class="comment"></span>
<a name="l00332"></a>00332 <span class="comment">/// \ingroup (OSGeoFDOConnectionsCapbilities)</span>
<a name="l00333"></a>00333 <span class="comment">/// \brief</span>
<a name="l00334"></a>00334 <span class="comment">/// The ReadOnlySignatureDefinitionCollection class represents a collection of ReadOnlySignatureDefinition objects.</span>
<a name="l00335"></a>00335 <span class="comment"></span>[System::Reflection::DefaultMemberAttribute(<span class="stringliteral">"RealTypeItem"</span>)]
<a name="l00336"></a><a class="code" href="../../d5/d9e/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_read_only_signature_definition_collection.htm">00336</a> <span class="keyword">public</span> __sealed __gc <span class="keyword">class </span><a class="code" href="../../d5/d9e/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_read_only_signature_definition_collection.htm">ReadOnlySignatureDefinitionCollection</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d30/_common_namespace_8h_bfd166a5d24ab2e990a03e8efac51c13.htm#bfd166a5d24ab2e990a03e8efac51c13">NAMESPACE_OSGEO_RUNTIME</a>::Disposable,
<a name="l00337"></a>00337                                                                    <span class="keyword">public</span> System::Collections::ICollection,
<a name="l00338"></a>00338                                                                    <span class="keyword">public</span> System::Collections::IEnumerable
<a name="l00339"></a>00339 {<span class="comment"></span>
<a name="l00340"></a>00340 <span class="comment">/// \cond DOXYGEN-IGNORE</span>
<a name="l00341"></a>00341 <span class="comment"></span><span class="keyword">private</span>:<span class="comment"></span>
<a name="l00342"></a>00342 <span class="comment">    /// \brief</span>
<a name="l00343"></a>00343 <span class="comment">    /// A Nested class defined to provide enumeration of Dictionary elements</span>
<a name="l00344"></a>00344 <span class="comment">    ///</span>
<a name="l00345"></a>00345 <span class="comment">    /// Enumerators can be used to read the data in the collection, </span>
<a name="l00346"></a>00346 <span class="comment">    /// but they cannot be used to modify the underlying collection.</span>
<a name="l00347"></a>00347 <span class="comment">    ///</span>
<a name="l00348"></a>00348 <span class="comment">    /// An enumerator remains valid as long as the collection remains unchanged. </span>
<a name="l00349"></a>00349 <span class="comment">    /// If changes are made to the collection, such as adding, modifying, or deleting </span>
<a name="l00350"></a>00350 <span class="comment">    /// elements, the enumerator is irrecoverably invalidated and the next call to </span>
<a name="l00351"></a>00351 <span class="comment">    /// MoveNext or Reset throws an InvalidOperationException. If the collection is </span>
<a name="l00352"></a>00352 <span class="comment">    /// modified between MoveNext and Current, Current returns the element that it is </span>
<a name="l00353"></a>00353 <span class="comment">    /// set to, even if the enumerator is already invalidated.</span>
<a name="l00354"></a>00354 <span class="comment">    ///</span>
<a name="l00355"></a>00355 <span class="comment">    /// The enumerator does not have exclusive access to the collection; therefore, </span>
<a name="l00356"></a>00356 <span class="comment">    /// enumerating through a collection is intrinsically not a thread-safe procedure. </span>
<a name="l00357"></a>00357 <span class="comment">    /// Even when a collection is synchronized, other threads can still modify the </span>
<a name="l00358"></a>00358 <span class="comment">    /// collection, which causes the enumerator to throw an exception. To guarantee </span>
<a name="l00359"></a>00359 <span class="comment">    /// thread safety during enumeration, you can either lock the collection during </span>
<a name="l00360"></a>00360 <span class="comment">    /// the entire enumeration or catch the exceptions resulting from changes made </span>
<a name="l00361"></a>00361 <span class="comment">    /// by other threads.</span>
<a name="l00362"></a>00362 <span class="comment">    /// </span>
<a name="l00363"></a>00363 <span class="comment"></span>    __gc <span class="keyword">class </span>Enumerator : <span class="keyword">public</span> System::Collections::IEnumerator
<a name="l00364"></a>00364     {
<a name="l00365"></a>00365     <span class="keyword">private</span>:
<a name="l00366"></a>00366         <a class="code" href="../../d5/d9e/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_read_only_signature_definition_collection.htm">ReadOnlySignatureDefinitionCollection</a> *m_pCol;
<a name="l00367"></a>00367         System::Int32 m_nIdx;
<a name="l00368"></a>00368 
<a name="l00369"></a>00369     <span class="keyword">public</span>:<span class="comment"></span>
<a name="l00370"></a>00370 <span class="comment">        /// \brief</span>
<a name="l00371"></a>00371 <span class="comment">        /// Constructs a new Collection Enumerator</span>
<a name="l00372"></a>00372 <span class="comment">        /// </span>
<a name="l00373"></a>00373 <span class="comment">        /// \param col </span>
<a name="l00374"></a>00374 <span class="comment">        /// Input The collection to enumerate.</span>
<a name="l00375"></a>00375 <span class="comment">        /// </span>
<a name="l00376"></a>00376 <span class="comment"></span>        Enumerator(<a class="code" href="../../d5/d9e/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_read_only_signature_definition_collection.htm">ReadOnlySignatureDefinitionCollection</a> *elements) : m_pCol(elements), m_nIdx(-1) 
<a name="l00377"></a>00377         {
<a name="l00378"></a>00378 
<a name="l00379"></a>00379         }
<a name="l00380"></a>00380 <span class="comment"></span>
<a name="l00381"></a>00381 <span class="comment">        /// \brief</span>
<a name="l00382"></a>00382 <span class="comment">        /// Retrieves the current object at the enumerator location</span>
<a name="l00383"></a>00383 <span class="comment">        /// </span>
<a name="l00384"></a>00384 <span class="comment">        /// \return</span>
<a name="l00385"></a>00385 <span class="comment">        /// Retuns the current object referenced by the enumerator</span>
<a name="l00386"></a>00386 <span class="comment">        /// </span>
<a name="l00387"></a>00387 <span class="comment"></span>        __property System::Object *get_Current();
<a name="l00388"></a>00388 <span class="comment"></span>
<a name="l00389"></a>00389 <span class="comment">        /// \brief</span>
<a name="l00390"></a>00390 <span class="comment">        /// Initially, the enumerator is positioned before the first object in the collection. </span>
<a name="l00391"></a>00391 <span class="comment">        /// At this position, calling the Current property throws an exception. </span>
<a name="l00392"></a>00392 <span class="comment">        /// Therefore, you must call the MoveNext method to advance the enumerator </span>
<a name="l00393"></a>00393 <span class="comment">        /// to the first element of the collection before reading the value of Current.</span>
<a name="l00394"></a>00394 <span class="comment">        /// If MoveNext passes the end of the collection, the enumerator is positioned </span>
<a name="l00395"></a>00395 <span class="comment">        /// after the last element in the collection and MoveNext returns false. </span>
<a name="l00396"></a>00396 <span class="comment">        /// When the enumerator is at this position, subsequent calls to MoveNext also return false. </span>
<a name="l00397"></a>00397 <span class="comment">        /// If the last call to MoveNext returned false, calling Current throws an exception. </span>
<a name="l00398"></a>00398 <span class="comment">        /// To set Current to the first element of the collection again, you can call Reset </span>
<a name="l00399"></a>00399 <span class="comment">        /// followed by MoveNext.</span>
<a name="l00400"></a>00400 <span class="comment">        /// </span>
<a name="l00401"></a>00401 <span class="comment">        /// \return</span>
<a name="l00402"></a>00402 <span class="comment">        /// Retuns true if the Enumerator is able to move to a valid element</span>
<a name="l00403"></a>00403 <span class="comment">        /// otherwise false.</span>
<a name="l00404"></a>00404 <span class="comment">        /// </span>
<a name="l00405"></a>00405 <span class="comment"></span>        System::Boolean MoveNext();
<a name="l00406"></a>00406 <span class="comment"></span>
<a name="l00407"></a>00407 <span class="comment">        /// \brief</span>
<a name="l00408"></a>00408 <span class="comment">        /// Initially, the enumerator is positioned before the first element in the collection. </span>
<a name="l00409"></a>00409 <span class="comment">        /// The Reset method brings the enumerator back to this position. </span>
<a name="l00410"></a>00410 <span class="comment">        /// </span>
<a name="l00411"></a>00411 <span class="comment"></span>        System::Void <a class="code" href="../../db/d99/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_long_transaction_a83d1e486514e9b734817dbf301b098f.htm#a83d1e486514e9b734817dbf301b098f">Reset</a>();
<a name="l00412"></a>00412     };
<a name="l00413"></a>00413 
<a name="l00414"></a>00414 <span class="keyword">public</span> <span class="keyword">private</span>:
<a name="l00415"></a>00415     <a class="code" href="../../d5/d9e/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_read_only_signature_definition_collection.htm">ReadOnlySignatureDefinitionCollection</a>(System::IntPtr unmanaged, System::Boolean autoDelete);
<a name="l00416"></a>00416 
<a name="l00417"></a>00417     <span class="keyword">inline</span> FdoReadOnlySignatureDefinitionCollection *GetImpObj();
<a name="l00418"></a>00418 
<a name="l00419"></a>00419 <span class="keyword">private</span>:
<a name="l00420"></a>00420     <span class="comment">// System::Collections::ICollection methods</span>
<a name="l00421"></a>00421     System::Void System::Collections::ICollection::CopyTo(System::Array *array, System::Int32 index);
<a name="l00422"></a>00422 
<a name="l00423"></a>00423     <span class="comment">// System::Collections::ICollection properties</span>
<a name="l00424"></a>00424     __property System::Object *System::Collections::ICollection::get_SyncRoot();
<a name="l00425"></a>00425     __property System::Boolean System::Collections::ICollection::get_IsSynchronized();
<a name="l00426"></a>00426 <span class="comment"></span>
<a name="l00427"></a>00427 <span class="comment">/// \endcond</span>
<a name="l00428"></a>00428 <span class="comment"></span>
<a name="l00429"></a>00429 <span class="keyword">public</span>:
<a name="l00430"></a>00430     <a class="code" href="../../d5/d9e/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_read_only_signature_definition_collection.htm">ReadOnlySignatureDefinitionCollection</a>();
<a name="l00431"></a>00431 <span class="comment"></span>
<a name="l00432"></a>00432 <span class="comment">    /// \brief</span>
<a name="l00433"></a>00433 <span class="comment">    /// Gets the count of items in collection.</span>
<a name="l00434"></a>00434 <span class="comment">    /// </span>
<a name="l00435"></a>00435 <span class="comment">    /// \return</span>
<a name="l00436"></a>00436 <span class="comment">    /// Returns the number of items in the collection.</span>
<a name="l00437"></a>00437 <span class="comment">    /// </span>
<a name="l00438"></a>00438 <span class="comment"></span>    __property System::Int32 <a class="code" href="../../db/d99/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_long_transaction_c8e11f1473c337b36d482a7a5e3846fe.htm#c8e11f1473c337b36d482a7a5e3846fe">get_Count</a>(System::Void);   
<a name="l00439"></a>00439 <span class="comment"></span>
<a name="l00440"></a>00440 <span class="comment">    /// \brief</span>
<a name="l00441"></a>00441 <span class="comment">    /// Gets an enumerator that can iterate through a collection.</span>
<a name="l00442"></a>00442 <span class="comment">    /// </span>
<a name="l00443"></a>00443 <span class="comment">    /// \return</span>
<a name="l00444"></a>00444 <span class="comment">    /// Returns an enumerator on the dictionary.</span>
<a name="l00445"></a>00445 <span class="comment">    /// </span>
<a name="l00446"></a>00446 <span class="comment"></span>    __sealed System::Collections::IEnumerator* GetEnumerator(System::Void);
<a name="l00447"></a>00447 <span class="comment"></span>
<a name="l00448"></a>00448 <span class="comment">    /// \brief</span>
<a name="l00449"></a>00449 <span class="comment">    /// Copies the elements of the collection to an array.</span>
<a name="l00450"></a>00450 <span class="comment">    /// </span>
<a name="l00451"></a>00451 <span class="comment">    /// \param array </span>
<a name="l00452"></a>00452 <span class="comment">    /// Output the one-dimensional Array that is the destination of the elements copied from this collection.</span>
<a name="l00453"></a>00453 <span class="comment">    ///</span>
<a name="l00454"></a>00454 <span class="comment">    /// \param startAt </span>
<a name="l00455"></a>00455 <span class="comment">    /// Input an integer that represents the index in array at which copying begins.</span>
<a name="l00456"></a>00456 <span class="comment">    /// </span>
<a name="l00457"></a>00457 <span class="comment"></span>    System::Void CopyTo(NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::SignatureDefinition *array[], System::Int32 startAt);
<a name="l00458"></a>00458 <span class="comment"></span>
<a name="l00459"></a>00459 <span class="comment">    /// \brief</span>
<a name="l00460"></a>00460 <span class="comment">    /// Determines the index of a specific SignatureDefinition object.</span>
<a name="l00461"></a>00461 <span class="comment">    /// </span>
<a name="l00462"></a>00462 <span class="comment">    /// \param value </span>
<a name="l00463"></a>00463 <span class="comment">    /// Input the SignatureDefinition object to locate in the collection.</span>
<a name="l00464"></a>00464 <span class="comment">    /// </span>
<a name="l00465"></a>00465 <span class="comment">    /// \return</span>
<a name="l00466"></a>00466 <span class="comment">    ///     The index of value if found in the collection; otherwise, -1.</span>
<a name="l00467"></a>00467 <span class="comment">    /// </span>
<a name="l00468"></a>00468 <span class="comment"></span>    System::Int32 IndexOf(NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::SignatureDefinition *value);
<a name="l00469"></a>00469 <span class="comment"></span>
<a name="l00470"></a>00470 <span class="comment">    /// \brief</span>
<a name="l00471"></a>00471 <span class="comment">    /// Determines whether the collection contains a specific SignatureDefinition object.</span>
<a name="l00472"></a>00472 <span class="comment">    /// </span>
<a name="l00473"></a>00473 <span class="comment">    /// \param value </span>
<a name="l00474"></a>00474 <span class="comment">    /// Input The SignatureDefinition object to search in the collection.</span>
<a name="l00475"></a>00475 <span class="comment">    /// </span>
<a name="l00476"></a>00476 <span class="comment">    /// \return</span>
<a name="l00477"></a>00477 <span class="comment">    ///     Returns true if the value is found in the collection; otherwise, false.</span>
<a name="l00478"></a>00478 <span class="comment">    /// </span>
<a name="l00479"></a>00479 <span class="comment"></span>    System::Boolean Contains(NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES::SignatureDefinition *value);
<a name="l00480"></a>00480 <span class="comment"></span>
<a name="l00481"></a>00481 <span class="comment">    /// \brief</span>
<a name="l00482"></a>00482 <span class="comment">    /// Gets the item in the collection at the specified index. </span>
<a name="l00483"></a>00483 <span class="comment">    /// </span>
<a name="l00484"></a>00484 <span class="comment">    /// \param index </span>
<a name="l00485"></a>00485 <span class="comment">    /// The index of the item in the collection. The index is 0 based.</span>
<a name="l00486"></a>00486 <span class="comment">    /// </span>
<a name="l00487"></a>00487 <span class="comment">    /// \return</span>
<a name="l00488"></a>00488 <span class="comment">    /// Returns an instance of a the collected item.</span>
<a name="l00489"></a>00489 <span class="comment">    /// Throws an instance of Exception if the index is out of range or an error occurs.</span>
<a name="l00490"></a>00490 <span class="comment">    /// </span>
<a name="l00491"></a>00491 <span class="comment"></span>    __property <a class="code" href="../../de/dd5/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition.htm">SignatureDefinition</a> *get_RealTypeItem(System::Int32 index);
<a name="l00492"></a>00492 <span class="comment"></span>
<a name="l00493"></a>00493 <span class="comment">    /// \brief</span>
<a name="l00494"></a>00494 <span class="comment">    /// Gets the item in the collection at the specified index. </span>
<a name="l00495"></a>00495 <span class="comment">    /// </span>
<a name="l00496"></a>00496 <span class="comment">    /// \param name </span>
<a name="l00497"></a>00497 <span class="comment">    /// The name of the item in the collection.</span>
<a name="l00498"></a>00498 <span class="comment">    /// </span>
<a name="l00499"></a>00499 <span class="comment">    /// \return</span>
<a name="l00500"></a>00500 <span class="comment">    /// Returns an instance of a the collected item.</span>
<a name="l00501"></a>00501 <span class="comment">    /// </span>
<a name="l00502"></a>00502 <span class="comment"></span>__property <a class="code" href="../../de/dd5/class_o_s_geo_1_1_f_d_o_1_1_connections_1_1_capabilities_1_1_signature_definition.htm">SignatureDefinition</a> *get_RealTypeItem(System::String* name);
<a name="l00503"></a>00503 <span class="comment"></span>
<a name="l00504"></a>00504 <span class="comment">/// \cond DOXYGEN-IGNORE</span>
<a name="l00505"></a>00505 <span class="comment"></span><span class="keyword">protected</span>:
<a name="l00506"></a>00506     System::Void ReleaseUnmanagedObject();<span class="comment"></span>
<a name="l00507"></a>00507 <span class="comment">/// \endcond</span>
<a name="l00508"></a>00508 <span class="comment"></span>};
<a name="l00509"></a>00509 
<a name="l00510"></a>00510 <a class="code" href="../../d8/d30/_common_namespace_8h_c8d2e894f142b7c189f4831a0a2aef5b.htm#c8d2e894f142b7c189f4831a0a2aef5b">END_NAMESPACE_OSGEO_FDO_CONNECTIONS_CAPABILITIES</a>
<a name="l00511"></a>00511 
</pre></div><!-- footer.html -->
		<hr>
		<table width="100%"  border="0">
			<tr>
				<td>Comments or suggestions? Send us <a href="mailto:isd.docs@autodesk.com&subject=FDO%20.NET%20API%20documentation">feedback</a>.</td>
				<!-- The logo can go in another cell, when we get one -->			
			</tr>
		</table>
	</body>
</html>
