<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"	"http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>FDO .NET API Reference</title>
		<link href="../../custom.css" rel="stylesheet" type="text/css">
		<link href="../../tabs.css" rel="stylesheet" type="text/css">
	</head>
	<body bgcolor="#FFFFFF">
		<table width="100%"  border="0">
			<tr>
				<td><b>FDO .NET API Reference<b></td>
				<td align="right"><b>Feature Data Objects<b></td>
			</tr>
			
		</table>
<!-- End of: header.html -->
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="../../main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="../../modules.htm"><span>Modules</span></a></li>
    <li><a href="../../namespaces.htm"><span>Namespaces</span></a></li>
    <li><a href="../../classes.htm"><span>Classes</span></a></li>
    <li id="current"><a href="../../files.htm"><span>Files</span></a></li>
    <li><a href="../../pages.htm"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="../../files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="../../globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>mgIApplySchemaImp.h</h1><a href="../../d1/dc2/mg_i_apply_schema_imp_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment">* Copyright (C) 2004-2006  Autodesk, Inc.</span>
<a name="l00003"></a>00003 <span class="comment">* </span>
<a name="l00004"></a>00004 <span class="comment">* This library is free software; you can redistribute it and/or</span>
<a name="l00005"></a>00005 <span class="comment">* modify it under the terms of version 2.1 of the GNU Lesser</span>
<a name="l00006"></a>00006 <span class="comment">* General Public License as published by the Free Software Foundation.</span>
<a name="l00007"></a>00007 <span class="comment">* </span>
<a name="l00008"></a>00008 <span class="comment">* This library is distributed in the hope that it will be useful,</span>
<a name="l00009"></a>00009 <span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00010"></a>00010 <span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00011"></a>00011 <span class="comment">* Lesser General Public License for more details.</span>
<a name="l00012"></a>00012 <span class="comment">* </span>
<a name="l00013"></a>00013 <span class="comment">* You should have received a copy of the GNU Lesser General Public</span>
<a name="l00014"></a>00014 <span class="comment">* License along with this library; if not, write to the Free Software</span>
<a name="l00015"></a>00015 <span class="comment">* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">*/</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#pragma once</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span>
<a name="l00021"></a>00021 <span class="preprocessor">#include "<a class="code" href="../../d8/d9a/mg_i_command_imp_8h.htm">FDO\Commands\mgICommandImp.h</a>"</span>
<a name="l00022"></a>00022 <span class="preprocessor">#include "<a class="code" href="../../d7/db3/mg_i_apply_schema_8h.htm">FDO\Commands\Schema\mgIApplySchema.h</a>"</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="keyword">class </span>FdoIApplySchema;
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <a class="code" href="../../d8/d30/_common_namespace_8h_e28674c5cd0ff97396835f0ec4ad9eb2.htm#e28674c5cd0ff97396835f0ec4ad9eb2">BEGIN_NAMESPACE_OSGEO_FDO_SCHEMA</a>
<a name="l00027"></a>00027 <span class="keyword">public</span> __gc <span class="keyword">class </span>FeatureSchema;
<a name="l00028"></a>00028 <a class="code" href="../../d8/d30/_common_namespace_8h_b1e631870d84af2374132f7e67d70e5f.htm#b1e631870d84af2374132f7e67d70e5f">END_NAMESPACE_OSGEO_FDO_SCHEMA</a>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <a class="code" href="../../d8/d30/_common_namespace_8h_929d553cff3dd7f518de4e1b47b8ea2a.htm#929d553cff3dd7f518de4e1b47b8ea2a">BEGIN_NAMESPACE_OSGEO_FDO_COMMANDS_SCHEMA</a>
<a name="l00031"></a>00031 <span class="keyword">public</span> __gc <span class="keyword">class </span>PhysicalSchemaMapping;
<a name="l00032"></a>00032 <span class="comment"></span>
<a name="l00033"></a>00033 <span class="comment">/// \ingroup (OSGeoFDOCommandsSchema)</span>
<a name="l00034"></a>00034 <span class="comment">/// \brief</span>
<a name="l00035"></a>00035 <span class="comment">/// The IApplySchemaImp class is a concrete implementation of IApplySchema.</span>
<a name="l00036"></a>00036 <span class="comment">/// The IApplySchema interface defines the ApplySchema command, which creates or</span>
<a name="l00037"></a>00037 <span class="comment">/// updates a feature schema within the DataStore. Input to the ApplySchema</span>
<a name="l00038"></a>00038 <span class="comment">/// command is the feature schema instance to be created or updated. Optionally, </span>
<a name="l00039"></a>00039 <span class="comment">/// a provider-specific IPhysicalSchemaMapping interface can be specified that can be</span>
<a name="l00040"></a>00040 <span class="comment">/// used to control how the feature schema elements are mapped into physical</span>
<a name="l00041"></a>00041 <span class="comment">/// storage.</span>
<a name="l00042"></a><a class="code" href="../../d8/d77/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_apply_schema_imp.htm">00042</a> <span class="comment"></span><span class="keyword">private</span> __gc <span class="keyword">class </span><a class="code" href="../../d8/d77/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_apply_schema_imp.htm">IApplySchemaImp</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d30/_common_namespace_8h_64de417dabf8a4b495616e9639a404fb.htm#64de417dabf8a4b495616e9639a404fb">NAMESPACE_OSGEO_FDO_COMMANDS</a>::<a class="code" href="../../d2/db4/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_i_command_imp.htm">ICommandImp</a>, 
<a name="l00043"></a>00043                                      <span class="keyword">public</span> <a class="code" href="../../d8/d30/_common_namespace_8h_06aed2597924d4a292781ada6129d7cc.htm#06aed2597924d4a292781ada6129d7cc">NAMESPACE_OSGEO_FDO_COMMANDS_SCHEMA</a>::<a class="code" href="../../d4/d0f/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_apply_schema.htm">IApplySchema</a>
<a name="l00044"></a>00044 {
<a name="l00045"></a>00045 <span class="keyword">public</span>:<span class="comment"></span>
<a name="l00046"></a>00046 <span class="comment">    /// \brief</span>
<a name="l00047"></a>00047 <span class="comment">    /// Gets the name of the schema to create.</span>
<a name="l00048"></a>00048 <span class="comment">    /// </span>
<a name="l00049"></a>00049 <span class="comment">    /// \return</span>
<a name="l00050"></a>00050 <span class="comment">    /// Returns the name of the schema to create</span>
<a name="l00051"></a>00051 <span class="comment">    /// </span>
<a name="l00052"></a>00052 <span class="comment"></span>    __property NAMESPACE_OSGEO_FDO_SCHEMA::FeatureSchema* get_FeatureSchema();
<a name="l00053"></a>00053 <span class="comment"></span>
<a name="l00054"></a>00054 <span class="comment">    /// \brief</span>
<a name="l00055"></a>00055 <span class="comment">    /// Sets the name of the schema to create.</span>
<a name="l00056"></a>00056 <span class="comment">    /// </span>
<a name="l00057"></a>00057 <span class="comment">    /// \param value </span>
<a name="l00058"></a>00058 <span class="comment">    /// Input the name of the schema to create</span>
<a name="l00059"></a>00059 <span class="comment">    /// </span>
<a name="l00060"></a>00060 <span class="comment">    /// \return</span>
<a name="l00061"></a>00061 <span class="comment">    /// Returns nothing</span>
<a name="l00062"></a>00062 <span class="comment">    /// </span>
<a name="l00063"></a>00063 <span class="comment"></span>    __property System::Void <a class="code" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_01dab0005675be9add422d68c604178a.htm#01dab0005675be9add422d68c604178a">set_FeatureSchema</a>(NAMESPACE_OSGEO_FDO_SCHEMA::FeatureSchema* value);
<a name="l00064"></a>00064 <span class="comment"></span>
<a name="l00065"></a>00065 <span class="comment">    /// \brief</span>
<a name="l00066"></a>00066 <span class="comment">    ///  Gets the PhysicalSchemaMapping used to specify how the schema definition</span>
<a name="l00067"></a>00067 <span class="comment">    /// gets mapped into physical storage.</span>
<a name="l00068"></a>00068 <span class="comment">    /// </span>
<a name="l00069"></a>00069 <span class="comment">    /// \return</span>
<a name="l00070"></a>00070 <span class="comment">    /// Returns PhysicalSchemaMapping</span>
<a name="l00071"></a>00071 <span class="comment">    /// </span>
<a name="l00072"></a>00072 <span class="comment"></span>    __property NAMESPACE_OSGEO_FDO_COMMANDS_SCHEMA::PhysicalSchemaMapping* <a class="code" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_49931ecc04e627ddbae63ebbb8520815.htm#49931ecc04e627ddbae63ebbb8520815">get_PhysicalMapping</a>();
<a name="l00073"></a>00073 <span class="comment"></span>
<a name="l00074"></a>00074 <span class="comment">    /// \brief</span>
<a name="l00075"></a>00075 <span class="comment">    /// Sets the PhysicalSchemaMapping used to specify how the schema definition</span>
<a name="l00076"></a>00076 <span class="comment">    /// gets mapped into physical storage.</span>
<a name="l00077"></a>00077 <span class="comment">    /// </span>
<a name="l00078"></a>00078 <span class="comment">    /// \param value </span>
<a name="l00079"></a>00079 <span class="comment">    /// Input the PhysicalSchemaMapping</span>
<a name="l00080"></a>00080 <span class="comment">    /// </span>
<a name="l00081"></a>00081 <span class="comment">    /// \return</span>
<a name="l00082"></a>00082 <span class="comment">    /// Returns nothing</span>
<a name="l00083"></a>00083 <span class="comment">    /// </span>
<a name="l00084"></a>00084 <span class="comment"></span>    __property System::Void <a class="code" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_ba23efd2af1f0641659e966fe3493f8e.htm#ba23efd2af1f0641659e966fe3493f8e">set_PhysicalMapping</a>(NAMESPACE_OSGEO_FDO_COMMANDS_SCHEMA::PhysicalSchemaMapping* value);
<a name="l00085"></a>00085 <span class="comment"></span>
<a name="l00086"></a>00086 <span class="comment">    /// \brief</span>
<a name="l00087"></a>00087 <span class="comment">    ///  Indicates whether Execute() will ignore element states </span>
<a name="l00088"></a>00088 <span class="comment">    /// when applying the feature schema.</span>
<a name="l00089"></a>00089 <span class="comment">    /// </span>
<a name="l00090"></a>00090 <span class="comment">    /// \return</span>
<a name="l00091"></a>00091 <span class="comment">    /// Returns true if elements states will be ignored, false otherwise. </span>
<a name="l00092"></a>00092 <span class="comment">    /// </span>
<a name="l00093"></a>00093 <span class="comment">    ///  </span>
<a name="l00094"></a>00094 <span class="comment"></span>    __property System::Boolean <a class="code" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_fa1d0628e379a2618055eb34d7182dc7.htm#fa1d0628e379a2618055eb34d7182dc7">get_IgnoreStates</a>();
<a name="l00095"></a>00095 <span class="comment"></span>
<a name="l00096"></a>00096 <span class="comment">    /// \brief</span>
<a name="l00097"></a>00097 <span class="comment">    /// Changes the handling of element states by Execute().</span>
<a name="l00098"></a>00098 <span class="comment">    /// </span>
<a name="l00099"></a>00099 <span class="comment">    /// \param ignoreStates </span>
<a name="l00100"></a>00100 <span class="comment">    /// Input True: Execute() will ignore the </span>
<a name="l00101"></a>00101 <span class="comment">    /// element states on the Feature Schema elements. Instead, it </span>
<a name="l00102"></a>00102 <span class="comment">    /// will additively merge the Feature Schema into the current DataStore.</span>
<a name="l00103"></a>00103 <span class="comment">    /// False: Execute() will use the element states to determine whether</span>
<a name="l00104"></a>00104 <span class="comment">    /// each element is inserted, modified or deleted.</span>
<a name="l00105"></a>00105 <span class="comment">    /// </span>
<a name="l00106"></a>00106 <span class="comment">    /// \return</span>
<a name="l00107"></a>00107 <span class="comment">    /// Returns nothing</span>
<a name="l00108"></a>00108 <span class="comment">    /// </span>
<a name="l00109"></a>00109 <span class="comment"></span>    __property System::Void <a class="code" href="../../d1/d9d/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_f274be60df197e2cf3ebe0b2a78e71e7.htm#f274be60df197e2cf3ebe0b2a78e71e7">set_IgnoreStates</a>(System::Boolean ignoreStates );
<a name="l00110"></a>00110 <span class="comment"></span>
<a name="l00111"></a>00111 <span class="comment">    /// \brief</span>
<a name="l00112"></a>00112 <span class="comment">    /// Executes the ApplySchema command that creates metadata and physical</span>
<a name="l00113"></a>00113 <span class="comment">    /// storage for the schema. An exception is thrown if the schema already</span>
<a name="l00114"></a>00114 <span class="comment">    /// exists or if a schema already exists and the feature provider only</span>
<a name="l00115"></a>00115 <span class="comment">    /// supports a single schema. If schema changes include deletion of classes</span>
<a name="l00116"></a>00116 <span class="comment">    /// or the schema itself, then those classes (or the schema, if it is marked</span>
<a name="l00117"></a>00117 <span class="comment">    /// as deleted) must not contain any instance data. If they do, an exception</span>
<a name="l00118"></a>00118 <span class="comment">    /// will be thrown.</span>
<a name="l00119"></a>00119 <span class="comment">    /// Implementors must call FeatureSchema::AcceptChanges() when Execute() succeeds.</span>
<a name="l00120"></a>00120 <span class="comment">    /// It must be called after the schema has been successfully applied, in</span>
<a name="l00121"></a>00121 <span class="comment">    /// order to synchronize the states of the schema elements.</span>
<a name="l00122"></a>00122 <span class="comment">    /// </span>
<a name="l00123"></a>00123 <span class="comment">    /// \return</span>
<a name="l00124"></a>00124 <span class="comment">    /// Returns nothing</span>
<a name="l00125"></a>00125 <span class="comment">    /// </span>
<a name="l00126"></a>00126 <span class="comment"></span>    System::Void <a class="code" href="../../d1/d01/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_unit_of_measure_047c9dac1ed078374be8f3d3f6825352.htm#047c9dac1ed078374be8f3d3f6825352">Execute</a>();
<a name="l00127"></a>00127 
<a name="l00128"></a>00128 <span class="keyword">public</span> <span class="keyword">private</span>:
<a name="l00129"></a>00129     <a class="code" href="../../d8/d77/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_schema_1_1_i_apply_schema_imp.htm">IApplySchemaImp</a>(System::IntPtr unmanaged, System::Boolean autoDelete) : NAMESPACE_OSGEO_FDO_COMMANDS::ICommandImp(unmanaged, autoDelete)
<a name="l00130"></a>00130     {
<a name="l00131"></a>00131 
<a name="l00132"></a>00132     }
<a name="l00133"></a>00133 
<a name="l00134"></a>00134     <span class="keyword">inline</span> FdoIApplySchema* GetImpObj();
<a name="l00135"></a>00135 };
<a name="l00136"></a>00136 
<a name="l00137"></a>00137 <a class="code" href="../../d8/d30/_common_namespace_8h_28303f4f8966bdae18a33da1978c9239.htm#28303f4f8966bdae18a33da1978c9239">END_NAMESPACE_OSGEO_FDO_COMMANDS_SCHEMA</a>
<a name="l00138"></a>00138 
<a name="l00139"></a>00139 
</pre></div><!-- footer.html -->
		<hr>
		<table width="100%"  border="0">
			<tr>
				<td>Comments or suggestions? Send us <a href="mailto:isd.docs@autodesk.com&subject=FDO%20.NET%20API%20documentation">feedback</a>.</td>
				<!-- The logo can go in another cell, when we get one -->			
			</tr>
		</table>
	</body>
</html>
