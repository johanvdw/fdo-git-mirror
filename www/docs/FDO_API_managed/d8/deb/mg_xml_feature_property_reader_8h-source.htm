<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"	"http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>FDO .NET API Reference</title>
		<link href="../../custom.css" rel="stylesheet" type="text/css">
		<link href="../../tabs.css" rel="stylesheet" type="text/css">
	</head>
	<body bgcolor="#FFFFFF">
		<table width="100%"  border="0">
			<tr>
				<td><b>FDO .NET API Reference<b></td>
				<td align="right"><b>Feature Data Objects<b></td>
			</tr>
			
		</table>
<!-- End of: header.html -->
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="../../main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="../../modules.htm"><span>Modules</span></a></li>
    <li><a href="../../namespaces.htm"><span>Namespaces</span></a></li>
    <li><a href="../../classes.htm"><span>Classes</span></a></li>
    <li id="current"><a href="../../files.htm"><span>Files</span></a></li>
    <li><a href="../../pages.htm"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="../../files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="../../globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>mgXmlFeaturePropertyReader.h</h1><a href="../../dc/da3/mg_xml_feature_property_reader_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment">* Copyright (C) 2004-2006  Autodesk, Inc.</span>
<a name="l00003"></a>00003 <span class="comment">* </span>
<a name="l00004"></a>00004 <span class="comment">* This library is free software; you can redistribute it and/or</span>
<a name="l00005"></a>00005 <span class="comment">* modify it under the terms of version 2.1 of the GNU Lesser</span>
<a name="l00006"></a>00006 <span class="comment">* General Public License as published by the Free Software Foundation.</span>
<a name="l00007"></a>00007 <span class="comment">* </span>
<a name="l00008"></a>00008 <span class="comment">* This library is distributed in the hope that it will be useful,</span>
<a name="l00009"></a>00009 <span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00010"></a>00010 <span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00011"></a>00011 <span class="comment">* Lesser General Public License for more details.</span>
<a name="l00012"></a>00012 <span class="comment">* </span>
<a name="l00013"></a>00013 <span class="comment">* You should have received a copy of the GNU Lesser General Public</span>
<a name="l00014"></a>00014 <span class="comment">* License along with this library; if not, write to the Free Software</span>
<a name="l00015"></a>00015 <span class="comment">* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">*/</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#pragma  once</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span>
<a name="l00021"></a>00021 <span class="keyword">class </span>FdoXmlFeaturePropertyReader;
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <a class="code" href="../../d8/d30/_common_namespace_8h_8daf3cb7bff57507fe3cff21845ca1c2.htm#8daf3cb7bff57507fe3cff21845ca1c2">BEGIN_NAMESPACE_OSGEO_COMMON_XML</a>
<a name="l00024"></a>00024 <span class="keyword">public</span> __gc <span class="keyword">class </span>XmlReader;
<a name="l00025"></a>00025 <a class="code" href="../../d8/d30/_common_namespace_8h_723bd348854811d01a9e6068933fcd2c.htm#723bd348854811d01a9e6068933fcd2c">END_NAMESPACE_OSGEO_COMMON_XML</a>
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <a class="code" href="../../d8/d30/_common_namespace_8h_e28674c5cd0ff97396835f0ec4ad9eb2.htm#e28674c5cd0ff97396835f0ec4ad9eb2">BEGIN_NAMESPACE_OSGEO_FDO_SCHEMA</a>
<a name="l00028"></a>00028 <span class="keyword">public</span> __gc <span class="keyword">class </span>FeatureSchemaCollection;
<a name="l00029"></a>00029 <a class="code" href="../../d8/d30/_common_namespace_8h_b1e631870d84af2374132f7e67d70e5f.htm#b1e631870d84af2374132f7e67d70e5f">END_NAMESPACE_OSGEO_FDO_SCHEMA</a>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <a class="code" href="../../d8/d30/_common_namespace_8h_e8a0db70a369fb5aabcc2722e1bc2cb2.htm#e8a0db70a369fb5aabcc2722e1bc2cb2">BEGIN_NAMESPACE_OSGEO_FDO_XML</a>
<a name="l00032"></a>00032 <span class="keyword">public</span> __gc <span class="keyword">class </span>XmlFeatureContext;
<a name="l00033"></a>00033 <span class="keyword">public</span> __gc <span class="keyword">class </span>XmlFeatureHandler;
<a name="l00034"></a>00034 <span class="keyword">public</span> __gc <span class="keyword">class </span>XmlFeatureFlags;
<a name="l00035"></a>00035 <span class="comment"></span>
<a name="l00036"></a>00036 <span class="comment">/// \ingroup (OSGeoFDOXml)</span>
<a name="l00037"></a>00037 <span class="comment">/// \brief</span>
<a name="l00038"></a>00038 <span class="comment">/// XmlFeaturePropertyReader reads features from an XML document. The reading</span>
<a name="l00039"></a>00039 <span class="comment">/// is event driven. As features and properties within features are encountered, the </span>
<a name="l00040"></a>00040 <span class="comment">/// invoker is notified through the XmlFeatureHandler interface. This class is </span>
<a name="l00041"></a>00041 <span class="comment">/// similar to XmlFeatureReader except that it provides better performance.</span>
<a name="l00042"></a><a class="code" href="../../d3/d15/class_o_s_geo_1_1_f_d_o_1_1_xml_1_1_xml_feature_property_reader.htm">00042</a> <span class="comment"></span><span class="keyword">public</span> __gc <span class="keyword">class </span><a class="code" href="../../d3/d15/class_o_s_geo_1_1_f_d_o_1_1_xml_1_1_xml_feature_property_reader.htm">XmlFeaturePropertyReader</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d30/_common_namespace_8h_9316dcd64d44b465fd6f16440a84f39b.htm#9316dcd64d44b465fd6f16440a84f39b">NAMESPACE_OSGEO_COMMON_XML</a>::XmlSaxHandler
<a name="l00043"></a>00043 {
<a name="l00044"></a>00044 <span class="keyword">public</span>:<span class="comment"></span>
<a name="l00045"></a>00045 <span class="comment">    /// \brief</span>
<a name="l00046"></a>00046 <span class="comment">    /// creates a Feature Property Reader.</span>
<a name="l00047"></a>00047 <span class="comment">    /// </span>
<a name="l00048"></a>00048 <span class="comment">    /// \remarks</span>
<a name="l00049"></a>00049 <span class="comment">    /// The XML element, at the document reader's current position, is recognized as a feature </span>
<a name="l00050"></a>00050 <span class="comment">    /// collection if it is one or more of the following: </span>
<a name="l00051"></a>00051 <span class="comment">    /// &lt;ul&gt;</span>
<a name="l00052"></a>00052 <span class="comment">    ///     &lt;li&gt; GML FeatureCollection element</span>
<a name="l00053"></a>00053 <span class="comment">    ///     &lt;li&gt; the element specified by flags-&gt;collectionUri and flags-&gt;collectionName</span>
<a name="l00054"></a>00054 <span class="comment">    ///     &lt;li&gt; it has a corresponding class definition, in the given schemas, that </span>
<a name="l00055"></a>00055 <span class="comment">    ///   derives from the GML AbstractFeatureCollectionType.</span>
<a name="l00056"></a>00056 <span class="comment">    /// &lt;/ul&gt;</span>
<a name="l00057"></a>00057 <span class="comment">    /// </span>
<a name="l00058"></a>00058 <span class="comment">    /// \param reader </span>
<a name="l00059"></a>00059 <span class="comment">    /// Input XML document reader.</span>
<a name="l00060"></a>00060 <span class="comment">    /// If this reader is currently positioned at a feature </span>
<a name="l00061"></a>00061 <span class="comment">    /// collection type element then all features in this element are read. Otherwise, </span>
<a name="l00062"></a>00062 <span class="comment">    /// it processes all Feature Collection type sub-elements of the current element </span>
<a name="l00063"></a>00063 <span class="comment">    /// and reads their features. Therefore, if the reader is at the start of the XML </span>
<a name="l00064"></a>00064 <span class="comment">    /// document, all top-level feature collections in the document are read.</span>
<a name="l00065"></a>00065 <span class="comment">    /// </span>
<a name="l00066"></a>00066 <span class="comment"></span>    <a class="code" href="../../d3/d15/class_o_s_geo_1_1_f_d_o_1_1_xml_1_1_xml_feature_property_reader.htm">XmlFeaturePropertyReader</a>(NAMESPACE_OSGEO_COMMON_XML::XmlReader* reader);
<a name="l00067"></a>00067 <span class="comment"></span>
<a name="l00068"></a>00068 <span class="comment">    /// \brief</span>
<a name="l00069"></a>00069 <span class="comment">    /// creates a Feature Property Reader.</span>
<a name="l00070"></a>00070 <span class="comment">    /// </span>
<a name="l00071"></a>00071 <span class="comment">    /// \remarks</span>
<a name="l00072"></a>00072 <span class="comment">    /// The XML element, at the document reader's current position, is recognized as a feature </span>
<a name="l00073"></a>00073 <span class="comment">    /// collection if it is one or more of the following: </span>
<a name="l00074"></a>00074 <span class="comment">    /// &lt;ul&gt;</span>
<a name="l00075"></a>00075 <span class="comment">    ///     &lt;li&gt; GML FeatureCollection element</span>
<a name="l00076"></a>00076 <span class="comment">    ///     &lt;li&gt; the element specified by flags-&gt;collectionUri and flags-&gt;collectionName</span>
<a name="l00077"></a>00077 <span class="comment">    ///     &lt;li&gt; it has a corresponding class definition, in the given schemas, that </span>
<a name="l00078"></a>00078 <span class="comment">    ///   derives from the GML AbstractFeatureCollectionType.</span>
<a name="l00079"></a>00079 <span class="comment">    /// &lt;/ul&gt;</span>
<a name="l00080"></a>00080 <span class="comment">    /// </span>
<a name="l00081"></a>00081 <span class="comment">    /// \param reader </span>
<a name="l00082"></a>00082 <span class="comment">    /// Input XML document reader.</span>
<a name="l00083"></a>00083 <span class="comment">    /// If this reader is currently positioned at a feature </span>
<a name="l00084"></a>00084 <span class="comment">    /// collection type element then all features in this element are read. Otherwise, </span>
<a name="l00085"></a>00085 <span class="comment">    /// it processes all Feature Collection type sub-elements of the current element </span>
<a name="l00086"></a>00086 <span class="comment">    /// and reads their features. Therefore, if the reader is at the start of the XML </span>
<a name="l00087"></a>00087 <span class="comment">    /// document, all top-level feature collections in the document are read.</span>
<a name="l00088"></a>00088 <span class="comment">    /// \param flags </span>
<a name="l00089"></a>00089 <span class="comment">    /// Input options for controlling the deserializing of the features. If NULL then </span>
<a name="l00090"></a>00090 <span class="comment">    /// the default flags are used.</span>
<a name="l00091"></a>00091 <span class="comment">    /// </span>
<a name="l00092"></a>00092 <span class="comment"></span>    <a class="code" href="../../d3/d15/class_o_s_geo_1_1_f_d_o_1_1_xml_1_1_xml_feature_property_reader.htm">XmlFeaturePropertyReader</a>(NAMESPACE_OSGEO_COMMON_XML::XmlReader* reader, NAMESPACE_OSGEO_FDO_XML::XmlFeatureFlags* flags);
<a name="l00093"></a>00093 <span class="comment"></span>
<a name="l00094"></a>00094 <span class="comment">    /// \brief</span>
<a name="l00095"></a>00095 <span class="comment">    /// Gets the Xml document reader that was passed to this object.</span>
<a name="l00096"></a>00096 <span class="comment">    /// </span>
<a name="l00097"></a>00097 <span class="comment">    /// \return</span>
<a name="l00098"></a>00098 <span class="comment">    /// Returns XmlReader.</span>
<a name="l00099"></a>00099 <span class="comment">    /// </span>
<a name="l00100"></a>00100 <span class="comment"></span>    NAMESPACE_OSGEO_COMMON_XML::XmlReader* <a class="code" href="../../d6/d84/namespace_o_s_geo_1_1_f_d_o_1_1_xml_90c2fe52345f200ea8fbc1ee3100d7f9.htm#90c2fe52345f200ea8fbc1ee3100d7f9">GetXmlReader</a>();
<a name="l00101"></a>00101 <span class="comment"></span>
<a name="l00102"></a>00102 <span class="comment">    /// \brief</span>
<a name="l00103"></a>00103 <span class="comment">    /// Gets the feature schemas describing the features being read.</span>
<a name="l00104"></a>00104 <span class="comment">    /// </span>
<a name="l00105"></a>00105 <span class="comment">    /// \return</span>
<a name="l00106"></a>00106 <span class="comment">    /// Returns FeatureSchemaCollection</span>
<a name="l00107"></a>00107 <span class="comment">    /// </span>
<a name="l00108"></a>00108 <span class="comment"></span>    __property NAMESPACE_OSGEO_FDO_SCHEMA::FeatureSchemaCollection* get_FeatureSchemas();
<a name="l00109"></a>00109 <span class="comment"></span>
<a name="l00110"></a>00110 <span class="comment">    /// \brief</span>
<a name="l00111"></a>00111 <span class="comment">    /// Sets the feature schemas describing the features being read.</span>
<a name="l00112"></a>00112 <span class="comment">    /// </span>
<a name="l00113"></a>00113 <span class="comment">    /// \remarks</span>
<a name="l00114"></a>00114 <span class="comment">    /// The feature schemas provide directions to this class on how to deserialize the </span>
<a name="l00115"></a>00115 <span class="comment">    /// features and convert their property values from the strings in the XML document</span>
<a name="l00116"></a>00116 <span class="comment">    /// to their proper types. If any feature, whose class definition is not present </span>
<a name="l00117"></a>00117 <span class="comment">    /// in these schemas, is encountered then one of the following is done:</span>
<a name="l00118"></a>00118 <span class="comment">    /// &lt;ul&gt;</span>
<a name="l00119"></a>00119 <span class="comment">    ///     &lt;li&gt; an exception is thrown when flags-&gt;errorLevel is Normal or higher. The </span>
<a name="l00120"></a>00120 <span class="comment">    ///   exception reports all such features.</span>
<a name="l00121"></a>00121 <span class="comment">    ///     &lt;li&gt; the feature is read according to a best default translation when the </span>
<a name="l00122"></a>00122 <span class="comment">    ///   flags-&gt;errorLevel is below Normal.</span>
<a name="l00123"></a>00123 <span class="comment">    /// &lt;/ul&gt;</span>
<a name="l00124"></a>00124 <span class="comment">    /// </span>
<a name="l00125"></a>00125 <span class="comment">    /// \param schemas </span>
<a name="l00126"></a>00126 <span class="comment">    /// Input the feature schemas</span>
<a name="l00127"></a>00127 <span class="comment">    /// </span>
<a name="l00128"></a>00128 <span class="comment">    /// \return</span>
<a name="l00129"></a>00129 <span class="comment">    /// Returns nothing</span>
<a name="l00130"></a>00130 <span class="comment">    /// </span>
<a name="l00131"></a>00131 <span class="comment"></span>    __property System::Void set_FeatureSchemas(NAMESPACE_OSGEO_FDO_SCHEMA::FeatureSchemaCollection* schemas);
<a name="l00132"></a>00132 <span class="comment"></span>
<a name="l00133"></a>00133 <span class="comment">    /// \brief</span>
<a name="l00134"></a>00134 <span class="comment">    /// Parses the XML document.</span>
<a name="l00135"></a>00135 <span class="comment">    /// </span>
<a name="l00136"></a>00136 <span class="comment">    /// \return</span>
<a name="l00137"></a>00137 <span class="comment">    /// Returns false if no feature(s) were read.</span>
<a name="l00138"></a>00138 <span class="comment">    /// </span>
<a name="l00139"></a>00139 <span class="comment"></span>    System::Boolean Parse();
<a name="l00140"></a>00140 <span class="comment"></span>
<a name="l00141"></a>00141 <span class="comment">    /// \brief</span>
<a name="l00142"></a>00142 <span class="comment">    /// Parses the XML document.</span>
<a name="l00143"></a>00143 <span class="comment">    /// </span>
<a name="l00144"></a>00144 <span class="comment">    /// \param featureHandler </span>
<a name="l00145"></a>00145 <span class="comment">    /// Input handler to receive events. Parse() fires various events as features and</span>
<a name="l00146"></a>00146 <span class="comment">    /// properties are encountered.</span>
<a name="l00147"></a>00147 <span class="comment">    /// </span>
<a name="l00148"></a>00148 <span class="comment">    /// \return</span>
<a name="l00149"></a>00149 <span class="comment">    /// Returns false if no feature(s) were read.</span>
<a name="l00150"></a>00150 <span class="comment">    /// </span>
<a name="l00151"></a>00151 <span class="comment"></span>    System::Boolean Parse(NAMESPACE_OSGEO_FDO_XML::XmlFeatureHandler* featureHandler);
<a name="l00152"></a>00152 <span class="comment"></span>
<a name="l00153"></a>00153 <span class="comment">    /// \brief</span>
<a name="l00154"></a>00154 <span class="comment">    /// Parses the XML document.</span>
<a name="l00155"></a>00155 <span class="comment">    /// </span>
<a name="l00156"></a>00156 <span class="comment">    /// \param featureHandler </span>
<a name="l00157"></a>00157 <span class="comment">    /// Input handler to receive events. Parse() fires various events as features and</span>
<a name="l00158"></a>00158 <span class="comment">    /// properties are encountered.</span>
<a name="l00159"></a>00159 <span class="comment">    /// \param featureContext </span>
<a name="l00160"></a>00160 <span class="comment">    /// Input Caller-specific contextual information that is pass to the feature </span>
<a name="l00161"></a>00161 <span class="comment">    /// handler event callbacks.</span>
<a name="l00162"></a>00162 <span class="comment">    /// </span>
<a name="l00163"></a>00163 <span class="comment">    /// \return</span>
<a name="l00164"></a>00164 <span class="comment">    /// Returns false if no feature(s) were read.</span>
<a name="l00165"></a>00165 <span class="comment">    /// </span>
<a name="l00166"></a>00166 <span class="comment"></span>    System::Boolean Parse(NAMESPACE_OSGEO_FDO_XML::XmlFeatureHandler* featureHandler, NAMESPACE_OSGEO_FDO_XML::XmlFeatureContext* featureContext);
<a name="l00167"></a>00167 <span class="comment"></span>
<a name="l00168"></a>00168 <span class="comment">    /// \brief</span>
<a name="l00169"></a>00169 <span class="comment">    /// Parses the XML document.</span>
<a name="l00170"></a>00170 <span class="comment">    /// </span>
<a name="l00171"></a>00171 <span class="comment">    /// \param featureHandler </span>
<a name="l00172"></a>00172 <span class="comment">    /// Input handler to receive events. Parse() fires various events as features and</span>
<a name="l00173"></a>00173 <span class="comment">    /// properties are encountered.</span>
<a name="l00174"></a>00174 <span class="comment">    /// \param featureContext </span>
<a name="l00175"></a>00175 <span class="comment">    /// Input Caller-specific contextual information that is pass to the feature </span>
<a name="l00176"></a>00176 <span class="comment">    /// handler event callbacks.</span>
<a name="l00177"></a>00177 <span class="comment">    /// \param incremental </span>
<a name="l00178"></a>00178 <span class="comment">    /// Input </span>
<a name="l00179"></a>00179 <span class="comment">    /// true: an incremental (progressive) parse is performed. This function returns after the </span>
<a name="l00180"></a>00180 <span class="comment">    /// next feature is read. </span>
<a name="l00181"></a>00181 <span class="comment">    /// false: this function keeps going until all features have been read.</span>
<a name="l00182"></a>00182 <span class="comment">    /// </span>
<a name="l00183"></a>00183 <span class="comment">    /// \return</span>
<a name="l00184"></a>00184 <span class="comment">    /// Returns false if no feature(s) were read.</span>
<a name="l00185"></a>00185 <span class="comment">    /// </span>
<a name="l00186"></a>00186 <span class="comment"></span>    System::Boolean Parse(NAMESPACE_OSGEO_FDO_XML::XmlFeatureHandler* featureHandler, NAMESPACE_OSGEO_FDO_XML::XmlFeatureContext* featureContext, System::Boolean incremental);
<a name="l00187"></a>00187 <span class="comment"></span>
<a name="l00188"></a>00188 <span class="comment">    /// \brief</span>
<a name="l00189"></a>00189 <span class="comment">    /// Indicates whether all features have been read</span>
<a name="l00190"></a>00190 <span class="comment">    /// </span>
<a name="l00191"></a>00191 <span class="comment">    /// \return</span>
<a name="l00192"></a>00192 <span class="comment">    /// Returns true if there are no more features to read , false otherwise</span>
<a name="l00193"></a>00193 <span class="comment">    /// </span>
<a name="l00194"></a>00194 <span class="comment"></span>    System::Boolean GetEOF();
<a name="l00195"></a>00195 
<a name="l00196"></a>00196 <span class="keyword">public</span> <span class="keyword">private</span>:
<a name="l00197"></a>00197     <a class="code" href="../../d3/d15/class_o_s_geo_1_1_f_d_o_1_1_xml_1_1_xml_feature_property_reader.htm">XmlFeaturePropertyReader</a>(System::IntPtr unmanaged, System::Boolean autoDelete) : NAMESPACE_OSGEO_COMMON_XML::XmlSaxHandler(unmanaged, autoDelete)
<a name="l00198"></a>00198     {
<a name="l00199"></a>00199         
<a name="l00200"></a>00200     }
<a name="l00201"></a>00201 
<a name="l00202"></a>00202     <span class="keyword">inline</span> FdoXmlFeaturePropertyReader* GetImpObj();
<a name="l00203"></a>00203 <span class="comment"></span>
<a name="l00204"></a>00204 <span class="comment">/// \cond DOXYGEN-IGNORE</span>
<a name="l00205"></a>00205 <span class="comment"></span><span class="keyword">protected</span>:
<a name="l00206"></a>00206     System::Void ReleaseUnmanagedObject();<span class="comment"></span>
<a name="l00207"></a>00207 <span class="comment">/// \endcond</span>
<a name="l00208"></a>00208 <span class="comment"></span>};
<a name="l00209"></a>00209 
<a name="l00210"></a>00210 <a class="code" href="../../d8/d30/_common_namespace_8h_eb7ce40b371f0204406c1888001d7d6c.htm#eb7ce40b371f0204406c1888001d7d6c">END_NAMESPACE_OSGEO_FDO_XML</a>
<a name="l00211"></a>00211 
<a name="l00212"></a>00212 
</pre></div><!-- footer.html -->
		<hr>
		<table width="100%"  border="0">
			<tr>
				<td>Comments or suggestions? Send us <a href="mailto:isd.docs@autodesk.com&subject=FDO%20.NET%20API%20documentation">feedback</a>.</td>
				<!-- The logo can go in another cell, when we get one -->			
			</tr>
		</table>
	</body>
</html>
