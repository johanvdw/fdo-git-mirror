<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"	"http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>FDO .NET API Reference</title>
		<link href="../../custom.css" rel="stylesheet" type="text/css">
		<link href="../../tabs.css" rel="stylesheet" type="text/css">
	</head>
	<body bgcolor="#FFFFFF">
		<table width="100%"  border="0">
			<tr>
				<td><b>FDO .NET API Reference<b></td>
				<td align="right"><b>Feature Data Objects<b></td>
			</tr>
			
		</table>
<!-- End of: header.html -->
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="../../main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="../../modules.htm"><span>Modules</span></a></li>
    <li><a href="../../namespaces.htm"><span>Namespaces</span></a></li>
    <li><a href="../../classes.htm"><span>Classes</span></a></li>
    <li><a href="../../files.htm"><span>Files</span></a></li>
    <li><a href="../../pages.htm"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<h1>OSGeo::FDO::Commands::Feature</h1>
<p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/def/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_base_select.htm">OSGeo::FDO::Commands::Feature::IBaseSelect</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d3/def/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_base_select.htm">IBaseSelect</a> interface defines a base interface for the the <a class="el" href="../../db/d2d/namespace_o_s_geo_1_1_f_d_o.htm">FDO</a> <a class="el" href="../../d1/d46/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select.htm">ISelect</a> command, which queries for features of a given class that match the specified criteria. Input to the select command includes the name of the class, the list of properties to be returned, and a filter. All but the class name is optional. If the list of properties to be returned is empty then all properties are returned. The filter may be specified either as text or as an expression tree (most likely produced by a query builder). The result of executing a select command is an <a class="el" href="../../dd/d2c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader.htm">IFeatureReader</a> reference (see "Reading Features"). If the feature provider supports locking, then the select command can optionally lock all of the features selected, via the ExecuteWithLock method (see "Locking Commands" for more information on locking features).  <a href="../../d3/def/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_base_select.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d43/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_base_select_imp.htm">OSGeo::FDO::Commands::Feature::IBaseSelectImp</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d0/d43/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_base_select_imp.htm">IBaseSelectImp</a> class is a concrete implementation class for interface <a class="el" href="../../d3/def/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_base_select.htm">IBaseSelect</a>. The <a class="el" href="../../d3/def/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_base_select.htm">IBaseSelect</a> interface defines a base interface for the the <a class="el" href="../../db/d2d/namespace_o_s_geo_1_1_f_d_o.htm">FDO</a> <a class="el" href="../../d1/d46/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select.htm">ISelect</a> command, which queries for features of a given class that match the specified criteria. Input to the select command includes the name of the class, the list of properties to be returned, and a filter. All but the class name is optional. If the list of properties to be returned is empty then all properties are returned. The filter may be specified either as text or as an expression tree (most likely produced by a query builder). The result of executing a select command is an <a class="el" href="../../dd/d2c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader.htm">IFeatureReader</a> reference (see "Reading Features"). If the feature provider supports locking, then the select command can optionally lock all of the features selected, via the ExecuteWithLock method (see "Locking Commands" for more information on locking features).  <a href="../../d0/d43/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_base_select_imp.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/de1/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader.htm">OSGeo::FDO::Commands::Feature::IDataReader</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../df/de1/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader.htm">IDataReader</a> interface provides a forward-only, read-only iterator for reading relational table data. A reference to an <a class="el" href="../../df/de1/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader.htm">IDataReader</a> is returned from the ISQLCommands ExecuteReader method. The initial position of the <a class="el" href="../../df/de1/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader.htm">IDataReader</a> interface is prior to the first item. Thus, you must call ReadNext to begin accessing any data.  <a href="../../df/de1/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d2e/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader_imp.htm">OSGeo::FDO::Commands::Feature::IDataReaderImp</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../dc/d2e/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader_imp.htm">IDataReaderImp</a> class is a concrete implementation class for <a class="el" href="../../df/de1/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader.htm">IDataReader</a>. The <a class="el" href="../../df/de1/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader.htm">IDataReader</a> interface provides a forward-only, read-only iterator for reading relational table data. A reference to an <a class="el" href="../../df/de1/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader.htm">IDataReader</a> is returned from the SQLCommands ExecuteReader method. The initial position of the <a class="el" href="../../df/de1/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader.htm">IDataReader</a> interface is prior to the first item. Thus, you must call ReadNext to begin accessing any data.  <a href="../../dc/d2e/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader_imp.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d97/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_delete.htm">OSGeo::FDO::Commands::Feature::IDelete</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d7/d97/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_delete.htm">IDelete</a> interface defines the <a class="el" href="../../db/d2d/namespace_o_s_geo_1_1_f_d_o.htm">FDO</a> Delete command, which deletes instances of a given class that match the specified criteria. Input to the delete command includes the name of the class, and filter criteria by which to identify the instances to be deleted. The filter may be specified either as text or as an expression tree (most likely produced by a query builder). The delete command can delete instances at global scope or instances/values nested within an object collection property. Instances at global scope are referred to simply by the class name. Instances at a nested scope (i.e. instances within a object collection property) are referred to by the containing class name, followed by a '.', followed by the object collection property name.  <a href="../../d7/d97/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_delete.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/de5/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_delete_imp.htm">OSGeo::FDO::Commands::Feature::IDeleteImp</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d1/de5/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_delete_imp.htm">IDeleteImp</a> class is a concrete implementation class for interface <a class="el" href="../../d7/d97/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_delete.htm">IDelete</a>. The <a class="el" href="../../d7/d97/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_delete.htm">IDelete</a> interface defines the <a class="el" href="../../db/d2d/namespace_o_s_geo_1_1_f_d_o.htm">FDO</a> Delete command, which deletes instances of a given class that match the specified criteria. Input to the delete command includes the name of the class, and filter criteria by which to identify the instances to be deleted. The filter may be specified either as text or as an expression tree (most likely produced by a query builder). The delete command can delete instances at global scope or instances/values nested within an object collection property. Instances at global scope are referred to simply by the class name. Instances at a nested scope (i.e. instances within a object collection property) are referred to by the containing class name, followed by a '.', followed by the object collection property name.  <a href="../../d1/de5/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_delete_imp.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d2c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader.htm">OSGeo::FDO::Commands::Feature::IFeatureReader</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../dd/d2c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader.htm">IFeatureReader</a> interface provides a forward-only, read-only iterator for reading feature data. A reference to an <a class="el" href="../../dd/d2c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader.htm">IFeatureReader</a> is returned from the Select and SelectAndLock commands. Because the initial position of the <a class="el" href="../../dd/d2c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader.htm">IFeatureReader</a> is prior to the first item, you must call ReadNext to begin accessing any data.  <a href="../../dd/d2c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d5b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader_imp.htm">OSGeo::FDO::Commands::Feature::IFeatureReaderImp</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d4/d5b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader_imp.htm">IFeatureReaderImp</a> class is a concrete implementation class for interface <a class="el" href="../../dd/d2c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader.htm">IFeatureReader</a>. The <a class="el" href="../../dd/d2c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader.htm">IFeatureReader</a> interface provides a forward-only, read-only iterator for reading feature data. A reference to an <a class="el" href="../../dd/d2c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader.htm">IFeatureReader</a> is returned from the Select and SelectAndLock commands. Because the initial position of the <a class="el" href="../../dd/d2c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader.htm">IFeatureReader</a> is prior to the first item, you must call ReadNext to begin accessing any data.  <a href="../../d4/d5b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader_imp.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/deb/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_insert.htm">OSGeo::FDO::Commands::Feature::IInsert</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../dc/deb/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_insert.htm">IInsert</a> interface defines the Insert command, which inserts a new instance of a given class. Input to the insert command includes the name of the class and a collection of property values. Properties that are not specified and do not have a default value will be assigned a null value or an exception will be thrown if the property is required. The insert command can insert instances at global scope or instances nested within an object collection property. Instances at global scope are referred to simply by the class name. Instances at a nested scope (i.e. instances within a object collection property) are referred to by the containing class name, followed by a '.', followed by the object collection property name.  <a href="../../dc/deb/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_insert.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d73/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_insert_imp.htm">OSGeo::FDO::Commands::Feature::IInsertImp</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d2/d73/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_insert_imp.htm">IInsertImp</a> class is a concrete implementation class for interface <a class="el" href="../../dc/deb/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_insert.htm">IInsert</a>. The <a class="el" href="../../dc/deb/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_insert.htm">IInsert</a> interface defines the Insert command, which inserts a new instance of a given class. Input to the insert command includes the name of the class and a collection of property values. Properties that are not specified and do not have a default value will be assigned a null value or an exception will be thrown if the property is required. The insert command can insert instances at global scope or instances nested within an object collection property. Instances at global scope are referred to simply by the class name. Instances at a nested scope (i.e. instances within a object collection property) are referred to by the containing class name, followed by a '.', followed by the object collection property name.  <a href="../../d2/d73/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_insert_imp.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/dbd/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_reader.htm">OSGeo::FDO::Commands::Feature::IReader</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d9/dbd/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_reader.htm">IReader</a> interface provides a forward-only, read-only iterator for reading data. Because the initial position of the <a class="el" href="../../d9/dbd/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_reader.htm">IReader</a> is prior to the first item, you must call ReadNext to begin accessing any data.  <a href="../../d9/dbd/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_reader.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d40/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_reader_imp.htm">OSGeo::FDO::Commands::Feature::IReaderImp</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d5/d40/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_reader_imp.htm">IReaderImp</a> class is a concrete implementation class for interface <a class="el" href="../../d9/dbd/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_reader.htm">IReader</a>. The <a class="el" href="../../d9/dbd/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_reader.htm">IReader</a> interface provides a forward-only, read-only iterator for reading data. Because the initial position of the <a class="el" href="../../d9/dbd/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_reader.htm">IReader</a> is prior to the first item, you must call ReadNext to begin accessing any data.  <a href="../../d5/d40/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_reader_imp.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d46/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select.htm">OSGeo::FDO::Commands::Feature::ISelect</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d1/d46/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select.htm">ISelect</a> interface defines the Select command, which queries for features of a given class that match the specified criteria. Input to the select command includes the name of the class, the list of properties to be returned, and a filter. All but the class name is optional. If the list of properties to be returned is empty then all properties are returned. The filter may be specified either as text or as an expression tree (most likely produced by a query builder). The result of executing a select command is an <a class="el" href="../../dd/d2c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader.htm">IFeatureReader</a> reference (see "Reading Features"). If the feature provider supports locking, then the select command can optionally lock all of the features selected, via the ExecuteWithLock method (see "Locking Commands" for more information on locking features).  <a href="../../d1/d46/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dca/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select_aggregates.htm">OSGeo::FDO::Commands::Feature::ISelectAggregates</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The ISelectAggregate interface defines a Select command that handle selection of properties that include the use of aggregate functions. This command differs from the <a class="el" href="../../d1/d46/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select.htm">ISelect</a> command in a number of ways. It handles selection of properties that are aggregate functions and supports selecting distinct property values. It also includes grouping criteria. The execute method returns an <a class="el" href="../../df/de1/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader.htm">IDataReader</a> which is not tied to a specific class. Unlike Select, ISelectAggregate does not include any locking functions.  <a href="../../d6/dca/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select_aggregates.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/df5/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select_aggregates_imp.htm">OSGeo::FDO::Commands::Feature::ISelectAggregatesImp</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The ISelectAggregateImp class is a cocrete implementation of interface <a class="el" href="../../d6/dca/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select_aggregates.htm">ISelectAggregates</a>. The ISelectAggregate interface defines a Select command that handle selection of properties that include the use of aggregate functions. This command differs from the <a class="el" href="../../d1/d46/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select.htm">ISelect</a> command in a number of ways. It handles selection of properties that are aggregate functions and supports selecting distinct property values. It also includes grouping criteria. The execute method returns an <a class="el" href="../../df/de1/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_data_reader.htm">IDataReader</a> which is not tied to a specific class. Unlike Select, ISelectAggregate does not include any locking functions.  <a href="../../d6/df5/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select_aggregates_imp.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d83/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select_imp.htm">OSGeo::FDO::Commands::Feature::ISelectImp</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d3/d83/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select_imp.htm">ISelectImp</a> class is a concrete implementation of interface <a class="el" href="../../d1/d46/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select.htm">ISelect</a>. The <a class="el" href="../../d1/d46/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select.htm">ISelect</a> interface defines the Select command, which queries for features of a given class that match the specified criteria. Input to the select command includes the name of the class, the list of properties to be returned, and a filter. All but the class name is optional. If the list of properties to be returned is empty then all properties are returned. The filter may be specified either as text or as an expression tree (most likely produced by a query builder). The result of executing a select command is an <a class="el" href="../../dd/d2c/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_feature_reader.htm">IFeatureReader</a> reference (see "Reading Features"). If the feature provider supports locking, then the select command can optionally lock all of the features selected, via the ExecuteWithLock method (see "Locking Commands" for more information on locking features).  <a href="../../d3/d83/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_select_imp.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">interface &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/db5/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_update.htm">OSGeo::FDO::Commands::Feature::IUpdate</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../dc/db5/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_update.htm">IUpdate</a> interface defines the Update command, which modifies instances of a given class that match the specified criteria. Input to the update command includes the name of the class, the list of property name/value pairs to be updated, and the filter criteria by which to identify the instances to be updated. The filter may be specified either as text or as an expression tree (most likely produced by a query builder). The update command can update instances at global scope or nested within an object collection property. Instances at global scope are referred to simply by the class name. Instances at a nested scope (i.e., instances within an object collection property) are referred to by the containing class name, followed by a '.', followed by the object collection property name.  <a href="../../dc/db5/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_update.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3f/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_update_imp.htm">OSGeo::FDO::Commands::Feature::IUpdateImp</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="../../d0/d3f/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_update_imp.htm">IUpdateImp</a> class is a concrete implementation of interface <a class="el" href="../../dc/db5/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_update.htm">IUpdate</a>. The <a class="el" href="../../dc/db5/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_update.htm">IUpdate</a> interface defines the Update command, which modifies instances of a given class that match the specified criteria. Input to the update command includes the name of the class, the list of property name/value pairs to be updated, and the filter criteria by which to identify the instances to be updated. The filter may be specified either as text or as an expression tree (most likely produced by a query builder). The update command can update instances at global scope or nested within an object collection property. Instances at global scope are referred to simply by the class name. Instances at a nested scope (i.e., instances within an object collection property) are referred to by the containing class name, followed by a '.', followed by the object collection property name.  <a href="../../d0/d3f/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_feature_1_1_i_update_imp.htm#_details">More...</a><br></td></tr>
</table>
<!-- footer.html -->
		<hr>
		<table width="100%"  border="0">
			<tr>
				<td>Comments or suggestions? Send us <a href="mailto:isd.docs@autodesk.com&subject=FDO%20.NET%20API%20documentation">feedback</a>.</td>
				<!-- The logo can go in another cell, when we get one -->			
			</tr>
		</table>
	</body>
</html>
