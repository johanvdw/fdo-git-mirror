<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"	"http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>FDO .NET API Reference</title>
		<link href="../../custom.css" rel="stylesheet" type="text/css">
		<link href="../../tabs.css" rel="stylesheet" type="text/css">
	</head>
	<body bgcolor="#FFFFFF">
		<table width="100%"  border="0">
			<tr>
				<td><b>FDO .NET API Reference<b></td>
				<td align="right"><b>Feature Data Objects<b></td>
			</tr>
			
		</table>
<!-- End of: header.html -->
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="../../main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="../../modules.htm"><span>Modules</span></a></li>
    <li><a href="../../namespaces.htm"><span>Namespaces</span></a></li>
    <li id="current"><a href="../../classes.htm"><span>Classes</span></a></li>
    <li><a href="../../files.htm"><span>Files</span></a></li>
    <li><a href="../../pages.htm"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="../../classes.htm"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="../../annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="../../hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="../../functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="../../d4/dae/namespace_o_s_geo.htm">OSGeo</a>::<a class="el" href="../../db/d2d/namespace_o_s_geo_1_1_f_d_o.htm">FDO</a>::<a class="el" href="../../da/db1/namespace_o_s_geo_1_1_f_d_o_1_1_commands.htm">Commands</a>::<a class="el" href="../../dd/d85/namespace_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l.htm">SQL</a>::<a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp.htm">ISQLDataReaderImp</a></div>
<h1>OSGeo::FDO::Commands::SQL::ISQLDataReaderImp Class Reference<br>
<small>
[<a class="el" href="../../d5/da0/group___o_s_geo_f_d_o_commands_s_q_l.htm">OSGeo::FDO::Commands::SQL</a>]</small>
</h1><!-- doxytag: class="OSGeo::FDO::Commands::SQL::ISQLDataReaderImp" --><!-- doxytag: inherits="OSGeo::FDO::Runtime::Disposable,OSGeo::FDO::Commands::SQL::ISQLDataReader" -->Inherits <a class="el" href="../../d1/dcb/class_o_s_geo_1_1_f_d_o_1_1_runtime_1_1_disposable.htm">OSGeo::FDO::Runtime::Disposable</a>, and <a class="el" href="../../d6/d91/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader.htm">OSGeo::FDO::Commands::SQL::ISQLDataReader</a>.
<p>
Inheritance diagram for OSGeo::FDO::Commands::SQL::ISQLDataReaderImp:<p><center><img src="../../d2/d9a/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp__inherit__graph.png" border="0" usemap="#d1/d8a/_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp__inherit__map" alt="Inheritance graph"></center>
<map name="d1/d8a/_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp__inherit__map">
<area href="../../d1/dcb/class_o_s_geo_1_1_f_d_o_1_1_runtime_1_1_disposable.htm" shape="rect" coords="7,7,239,359" alt="">
<area href="../../d6/d91/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader.htm" shape="rect" coords="263,143,585,223" alt="">
</map>
<center><font size="2">[<a target="top" href="../../graph_legend.htm">legend</a>]</font></center><a href="../../d2/d2e/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp-members.htm">List of all members.</a><hr><a name="_details"></a><h2>Detailed Description</h2>
The <a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp.htm">ISQLDataReaderImp</a> class is a concrete implementation of <a class="el" href="../../d6/d91/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader.htm">ISQLDataReader</a>. The <a class="el" href="../../d6/d91/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader.htm">ISQLDataReader</a> interface provides a forward-only, read-only iterator for reading relational table data. A reference to an <a class="el" href="../../d6/d91/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader.htm">ISQLDataReader</a> is returned from the SQLCommands ExecuteReader method. The initial position of the <a class="el" href="../../d6/d91/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader.htm">ISQLDataReader</a> interface is prior to the first item. Thus, you must call ReadNext to begin accessing any data. 
<p>
() 
<p>

<p>
Definition at line <a class="el" href="../../df/d27/mg_i_s_q_l_data_reader_imp_8h-source.htm#l00045">45</a> of file <a class="el" href="../../df/d27/mg_i_s_q_l_data_reader_imp_8h-source.htm">mgISQLDataReaderImp.h</a>.<table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_05866b1320f7b0e6e342cd0d76ec33e6.htm#05866b1320f7b0e6e342cd0d76ec33e6">Close</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Closes the <a class="el" href="../../d6/d91/interface_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader.htm">ISQLDataReader</a> object, freeing any resources it may be holding.  <a href="#05866b1320f7b0e6e342cd0d76ec33e6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Boolean&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_b7a2593c133e0aa026d611b5793346c2.htm#b7a2593c133e0aa026d611b5793346c2">GetBoolean</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the Boolean value of the specified column. No conversion is performed, thus the column must be DataType_Boolean or an exception is thrown.  <a href="#b7a2593c133e0aa026d611b5793346c2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Byte&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_a86b7b0e2f8a191b90aa8e8bc3b8c1d4.htm#a86b7b0e2f8a191b90aa8e8bc3b8c1d4">GetByte</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the byte value of the specified column. No conversion is performed, thus the column must be DataType_Byte or an exception is thrown.  <a href="#a86b7b0e2f8a191b90aa8e8bc3b8c1d4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Int32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_34b91c6f64f34a9b47ae75b13741f2b1.htm#34b91c6f64f34a9b47ae75b13741f2b1">GetColumnCount</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the number of columns in the result set.  <a href="#34b91c6f64f34a9b47ae75b13741f2b1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::String *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_e885789bb48e848add85b29639eda9c1.htm#e885789bb48e848add85b29639eda9c1">GetColumnName</a> (System::Int32 index)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the name of the column at the given ordinal position.  <a href="#e885789bb48e848add85b29639eda9c1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="../../dc/dd2/group___o_s_geo_f_d_o_schema_gd8ed01ff3ff33333d8e19db4d2818bb6.htm#gd8ed01ff3ff33333d8e19db4d2818bb6">OSGeo::FDO::Schema::DataType</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_1f2a0915f7fbc3a1c57b6d03f15f7413.htm#1f2a0915f7fbc3a1c57b6d03f15f7413">GetColumnType</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the data type of the column with the specified name.  <a href="#1f2a0915f7fbc3a1c57b6d03f15f7413"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::DateTime&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_39a86c8490b434e5eba6e67880261bf6.htm#39a86c8490b434e5eba6e67880261bf6">GetDateTime</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the date time value of the specified column. No conversion is performed, thus the column must be DataType_DateTime or an exception is thrown.  <a href="#39a86c8490b434e5eba6e67880261bf6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_229a345c957bf5e551a4b7868977ed03.htm#229a345c957bf5e551a4b7868977ed03">GetDouble</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the double-precision floating point value of the specified column. No conversion is performed, thus the column must be of type Double or an exception is thrown.  <a href="#229a345c957bf5e551a4b7868977ed03"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Byte&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_233591801741a94c3255440cec4b1203.htm#233591801741a94c3255440cec4b1203">GetGeometry</a> (System::String *name)[]</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the geometry value of the specified column as a byte array in FGF format. No conversion is performed, thus the column must be of Geometric type or an exception is thrown.  <a href="#233591801741a94c3255440cec4b1203"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Int16&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_f5e78ea2fc4df4a721ff33c57eae92cd.htm#f5e78ea2fc4df4a721ff33c57eae92cd">GetInt16</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the signed 16-bit integer value of the specified column. No conversion is performed, thus the column must be DataType_Int16 or an exception is thrown.  <a href="#f5e78ea2fc4df4a721ff33c57eae92cd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Int32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_01a1ebafe8f429bf646ab0094a02c460.htm#01a1ebafe8f429bf646ab0094a02c460">GetInt32</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the signed 32-bit integer value of the specified column. No conversion is performed, thus the column must be DataType_Int32 or an exception is thrown.  <a href="#01a1ebafe8f429bf646ab0094a02c460"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Int64&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_d66d4022fa88e20b4583d3951da3d5e9.htm#d66d4022fa88e20b4583d3951da3d5e9">GetInt64</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the signed 64-bit integer value of the specified column. No conversion is performed, thus the column must be DataType_Int64 or an exception is thrown.  <a href="#d66d4022fa88e20b4583d3951da3d5e9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="../../df/dfd/class_o_s_geo_1_1_f_d_o_1_1_expression_1_1_l_o_b_value.htm">OSGeo::FDO::Expression::LOBValue</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_d9727069218d3c4bb3cfbacc3610282b.htm#d9727069218d3c4bb3cfbacc3610282b">GetLOB</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets a LOBValue reference. The LOB is fully read in and data available. Because no conversion is performed, the property must be DataType_BLOB or DataType_CLOB etc. (a LOB type).  <a href="#d9727069218d3c4bb3cfbacc3610282b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="../../d9/d1f/interface_o_s_geo_1_1_f_d_o_1_1_common_1_1_i_stream_reader.htm">OSGeo::FDO::Common::IStreamReader</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_787883426830567913853563a0583f0d.htm#787883426830567913853563a0583f0d">GetLOBStreamReader</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets a reference of the specified LOB property as a BLOBStreamReader or CLOBStreamReader etc. to allow reading in blocks of data. Because no conversion is performed, the property must be DataType_BLOB or DataType_CLOB etc. (a LOB type) Cast the IStreamReader to the appropiate LOB Stream Reader.  <a href="#787883426830567913853563a0583f0d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="../../dc/dd2/group___o_s_geo_f_d_o_schema_g7ff5a5c54f182b86d1cd993cf4512c87.htm#g7ff5a5c54f182b86d1cd993cf4512c87">OSGeo::FDO::Schema::PropertyType</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_a35d91629dd6233032a1487ff7d11062.htm#a35d91629dd6233032a1487ff7d11062">GetPropertyType</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets property type of the column with the specified name. This is used to indicate if a given column is a geometric property or a data property. If the column is a PropertyType_DataProperty, then GetColumnType can be used to find the data type of the column.  <a href="#a35d91629dd6233032a1487ff7d11062"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Single&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_0d0ff7948bcc58aeda0cd5ab4dad386a.htm#0d0ff7948bcc58aeda0cd5ab4dad386a">GetSingle</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the single-precision floating point value of the specified column. No conversion is performed, thus the column must be DataType_Single or an exception is thrown.  <a href="#0d0ff7948bcc58aeda0cd5ab4dad386a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::String *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_9bdc526965f30c864a03c025d3717798.htm#9bdc526965f30c864a03c025d3717798">GetString</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the string value of the specified column. No conversion is performed, thus the column must be DataType_String or an exception is thrown.  <a href="#9bdc526965f30c864a03c025d3717798"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Boolean&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_69ffa21449d0ec32ef64d9247cf50421.htm#69ffa21449d0ec32ef64d9247cf50421">IsNull</a> (System::String *name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if the value of the specified column is null.  <a href="#69ffa21449d0ec32ef64d9247cf50421"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">System::Boolean&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d0b/class_o_s_geo_1_1_f_d_o_1_1_commands_1_1_s_q_l_1_1_i_s_q_l_data_reader_imp_8641e40ac94b4e7dd9a9aba671c9165c.htm#8641e40ac94b4e7dd9a9aba671c9165c">ReadNext</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Advances the reader to the next item. The default position of the reader is prior to the first item. Thus, you must call ReadNext to begin accessing any data.  <a href="#8641e40ac94b4e7dd9a9aba671c9165c"></a><br></td></tr>
</table>
<!-- footer.html -->
		<hr>
		<table width="100%"  border="0">
			<tr>
				<td>Comments or suggestions? Send us <a href="mailto:isd.docs@autodesk.com&subject=FDO%20.NET%20API%20documentation">feedback</a>.</td>
				<!-- The logo can go in another cell, when we get one -->			
			</tr>
		</table>
	</body>
</html>
