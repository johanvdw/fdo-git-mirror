<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"	"http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>FDO .NET API Reference</title>
		<link href="../../custom.css" rel="stylesheet" type="text/css">
		<link href="../../tabs.css" rel="stylesheet" type="text/css">
	</head>
	<body bgcolor="#FFFFFF">
		<table width="100%"  border="0">
			<tr>
				<td><b>FDO .NET API Reference<b></td>
				<td align="right"><b>Feature Data Objects<b></td>
			</tr>
			
		</table>
<!-- End of: header.html -->
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="../../main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="../../modules.htm"><span>Modules</span></a></li>
    <li><a href="../../namespaces.htm"><span>Namespaces</span></a></li>
    <li><a href="../../classes.htm"><span>Classes</span></a></li>
    <li id="current"><a href="../../files.htm"><span>Files</span></a></li>
    <li><a href="../../pages.htm"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="../../files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="../../globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>mgStringDictionary.h</h1><a href="../../d1/d30/mg_string_dictionary_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright (C) 2004-2006  Autodesk, Inc.</span>
<a name="l00002"></a>00002 <span class="comment">// </span>
<a name="l00003"></a>00003 <span class="comment">// This library is free software; you can redistribute it and/or</span>
<a name="l00004"></a>00004 <span class="comment">// modify it under the terms of version 2.1 of the GNU Lesser</span>
<a name="l00005"></a>00005 <span class="comment">// General Public License as published by the Free Software Foundation.</span>
<a name="l00006"></a>00006 <span class="comment">// </span>
<a name="l00007"></a>00007 <span class="comment">// This library is distributed in the hope that it will be useful,</span>
<a name="l00008"></a>00008 <span class="comment">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00009"></a>00009 <span class="comment">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00010"></a>00010 <span class="comment">// Lesser General Public License for more details.</span>
<a name="l00011"></a>00011 <span class="comment">// </span>
<a name="l00012"></a>00012 <span class="comment">// You should have received a copy of the GNU Lesser General Public</span>
<a name="l00013"></a>00013 <span class="comment">// License along with this library; if not, write to the Free Software</span>
<a name="l00014"></a>00014 <span class="comment">// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="comment">//#pragma once</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">//BEGIN_NAMESPACE_COMMON</span>
<a name="l00019"></a>00019 <span class="comment">//</span>
<a name="l00020"></a>00020 <span class="comment">//public __sealed __gc class StringDictionary : public DictionaryBase</span>
<a name="l00021"></a>00021 <span class="comment">//{</span>
<a name="l00022"></a>00022 <span class="comment">//public:</span>
<a name="l00023"></a>00023 <span class="comment">//  __property String* get_Item( String* key )</span>
<a name="l00024"></a>00024 <span class="comment">//  {</span>
<a name="l00025"></a>00025 <span class="comment">//      return __try_cast&lt;String*&gt;(Dictionary-&gt;Item[key]);</span>
<a name="l00026"></a>00026 <span class="comment">//  }</span>
<a name="l00027"></a>00027 <span class="comment">//</span>
<a name="l00028"></a>00028 <span class="comment">//  __property void set_Item( String* key, String* value )</span>
<a name="l00029"></a>00029 <span class="comment">//  {</span>
<a name="l00030"></a>00030 <span class="comment">//      Dictionary-&gt;Item[key] = value;</span>
<a name="l00031"></a>00031 <span class="comment">//  }</span>
<a name="l00032"></a>00032 <span class="comment">//</span>
<a name="l00033"></a>00033 <span class="comment">//  __property ICollection* get_Keys()</span>
<a name="l00034"></a>00034 <span class="comment">//  {</span>
<a name="l00035"></a>00035 <span class="comment">//      return(Dictionary-&gt;Keys);</span>
<a name="l00036"></a>00036 <span class="comment">//  }</span>
<a name="l00037"></a>00037 <span class="comment">//</span>
<a name="l00038"></a>00038 <span class="comment">//  __property ICollection* get_Values()</span>
<a name="l00039"></a>00039 <span class="comment">//  {</span>
<a name="l00040"></a>00040 <span class="comment">//      return(Dictionary-&gt;Values);</span>
<a name="l00041"></a>00041 <span class="comment">//  }</span>
<a name="l00042"></a>00042 <span class="comment">//</span>
<a name="l00043"></a>00043 <span class="comment">//  void Add(String* key, String* value) {</span>
<a name="l00044"></a>00044 <span class="comment">//      Dictionary-&gt;Add(key, value);</span>
<a name="l00045"></a>00045 <span class="comment">//  }</span>
<a name="l00046"></a>00046 <span class="comment">//</span>
<a name="l00047"></a>00047 <span class="comment">//  bool Contains(String* key) {</span>
<a name="l00048"></a>00048 <span class="comment">//      return(Dictionary-&gt;Contains(key));</span>
<a name="l00049"></a>00049 <span class="comment">//  }</span>
<a name="l00050"></a>00050 <span class="comment">//</span>
<a name="l00051"></a>00051 <span class="comment">//  void Remove(String* key) {</span>
<a name="l00052"></a>00052 <span class="comment">//      Dictionary-&gt;Remove(key);</span>
<a name="l00053"></a>00053 <span class="comment">//  }</span>
<a name="l00054"></a>00054 <span class="comment">//</span>
<a name="l00055"></a>00055 <span class="comment">//protected:</span>
<a name="l00056"></a>00056 <span class="comment">//  void OnInsert(Object* key, Object* value) </span>
<a name="l00057"></a>00057 <span class="comment">//  {</span>
<a name="l00058"></a>00058 <span class="comment">//      if (key-&gt;GetType() != Type::GetType(S"System.String"))</span>
<a name="l00059"></a>00059 <span class="comment">//          throw new ArgumentException(S"key must be of type String.", S"key");</span>
<a name="l00060"></a>00060 <span class="comment">//</span>
<a name="l00061"></a>00061 <span class="comment">//      if (value-&gt;GetType() != Type::GetType(S"System.String"))</span>
<a name="l00062"></a>00062 <span class="comment">//          throw new ArgumentException(S"value must be of type String.", S"value");</span>
<a name="l00063"></a>00063 <span class="comment">//  }</span>
<a name="l00064"></a>00064 <span class="comment">//</span>
<a name="l00065"></a>00065 <span class="comment">//  void OnRemove(Object* key, Object* value) </span>
<a name="l00066"></a>00066 <span class="comment">//  {</span>
<a name="l00067"></a>00067 <span class="comment">//      if (key-&gt;GetType() != Type::GetType(S"System.String"))</span>
<a name="l00068"></a>00068 <span class="comment">//          throw new ArgumentException(S"key must be of type String.", S"key");</span>
<a name="l00069"></a>00069 <span class="comment">//  }</span>
<a name="l00070"></a>00070 <span class="comment">//</span>
<a name="l00071"></a>00071 <span class="comment">//  void OnSet(Object* key, Object* oldValue, Object* newValue) </span>
<a name="l00072"></a>00072 <span class="comment">//  {</span>
<a name="l00073"></a>00073 <span class="comment">//      if (key-&gt;GetType() != Type::GetType(S"System.String"))</span>
<a name="l00074"></a>00074 <span class="comment">//          throw new ArgumentException(S"key must be of type String.", S"key");</span>
<a name="l00075"></a>00075 <span class="comment">//</span>
<a name="l00076"></a>00076 <span class="comment">//      if (newValue-&gt;GetType() != Type::GetType(S"System.String"))</span>
<a name="l00077"></a>00077 <span class="comment">//          throw new ArgumentException(S"newValue must be of type String.", S"newValue");</span>
<a name="l00078"></a>00078 <span class="comment">//  }</span>
<a name="l00079"></a>00079 <span class="comment">//</span>
<a name="l00080"></a>00080 <span class="comment">//  void OnValidate(Object* key, Object* value) </span>
<a name="l00081"></a>00081 <span class="comment">//  {</span>
<a name="l00082"></a>00082 <span class="comment">//      if (key-&gt;GetType() != Type::GetType(S"System.String"))</span>
<a name="l00083"></a>00083 <span class="comment">//          throw new ArgumentException(S"key must be of type String.", S"key");</span>
<a name="l00084"></a>00084 <span class="comment">//</span>
<a name="l00085"></a>00085 <span class="comment">//      if (value-&gt;GetType() != Type::GetType(S"System.String"))</span>
<a name="l00086"></a>00086 <span class="comment">//          throw new ArgumentException(S"value must be of type String.", S"value");</span>
<a name="l00087"></a>00087 <span class="comment">//  }</span>
<a name="l00088"></a>00088 <span class="comment">//</span>
<a name="l00089"></a>00089 <span class="comment">//};</span>
<a name="l00090"></a>00090 <span class="comment">//</span>
<a name="l00091"></a>00091 <span class="comment">//END_NAMESPACE_COMMON</span>
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 
</pre></div><!-- footer.html -->
		<hr>
		<table width="100%"  border="0">
			<tr>
				<td>Comments or suggestions? Send us <a href="mailto:isd.docs@autodesk.com&subject=FDO%20.NET%20API%20documentation">feedback</a>.</td>
				<!-- The logo can go in another cell, when we get one -->			
			</tr>
		</table>
	</body>
</html>
