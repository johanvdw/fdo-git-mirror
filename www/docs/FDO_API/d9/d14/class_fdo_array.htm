<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"	"http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>FDO API Reference</title>
		<link href="../../custom.css" rel="stylesheet" type="text/css">
		<link href="../../tabs.css" rel="stylesheet" type="text/css">
	</head>
	<body bgcolor="#FFFFFF">
		<table width="100%"  border="0">
			<tr>
				<td><b>FDO API Reference<b></td>
				<td align="right"><b>Feature Data Objects<b></td>
			</tr>
			
		</table>
<!-- End of: header.html -->
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="../../main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="../../modules.htm"><span>Modules</span></a></li>
    <li id="current"><a href="../../classes.htm"><span>Classes</span></a></li>
    <li><a href="../../files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="../../classes.htm"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="../../annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="../../hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="../../functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<h1>FdoArray&lt; T &gt; Class Template Reference</h1><!-- doxytag: class="FdoArray" --><code>#include &lt;<a class="el" href="../../d4/d13/_array_8h-source.htm">Array.h</a>&gt;</code>
<p>
<a href="../../d2/d88/class_fdo_array-members.htm">List of all members.</a><hr><a name="_details"></a><h2>Detailed Description</h2>
<h3>template&lt;typename T&gt;<br>
 class FdoArray&lt; T &gt;</h3>

Abstract template class for defining dynamic arrays. 
<p>
<span class="red_text"><b>WARNING:</b></span> This array uses a single memory allocation to store array elements and may re-allocate that memory when the array size needs to change. Therefore, do not keep pointers to array elements and avoid using for objects which cannot be safely moved around in memory or which have non-empty destructors. 
<p>

<p>
Definition at line <a class="el" href="../../d4/d13/_array_8h-source.htm#l00068">68</a> of file <a class="el" href="../../d4/d13/_array_8h-source.htm">Array.h</a>.<table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">FdoInt32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_59875bfbb3ff859c77bcb48b78ddb86a.htm#59875bfbb3ff859c77bcb48b78ddb86a">AddRef</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Increase the reference count.  <a href="#59875bfbb3ff859c77bcb48b78ddb86a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_807ff5b1db666e05f4077ccacfc3cd7e.htm#807ff5b1db666e05f4077ccacfc3cd7e">Clear</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Removes all items from the array.  <a href="#807ff5b1db666e05f4077ccacfc3cd7e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">FdoInt32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_bd3558080c3a0f16cf6037940eaeb37b.htm#bd3558080c3a0f16cf6037940eaeb37b">GetCount</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the number of items in the array.  <a href="#bd3558080c3a0f16cf6037940eaeb37b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const T *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_56519e3fe023078361d9886628b093cf.htm#56519e3fe023078361d9886628b093cf">GetData</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get a pointer to the data in the array.  <a href="#56519e3fe023078361d9886628b093cf"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">T *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_0d786a95cee46b3f8d49173ed2d1e5dd.htm#0d786a95cee46b3f8d49173ed2d1e5dd">GetData</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get a pointer to the data in the array.  <a href="#0d786a95cee46b3f8d49173ed2d1e5dd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">FdoInt32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_e8efb6ebb32a4623390e3c41aeaae156.htm#e8efb6ebb32a4623390e3c41aeaae156">GetRefCount</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Retrieves the reference count.  <a href="#e8efb6ebb32a4623390e3c41aeaae156"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">T &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_4252985a37efa055c57963b7be91f054.htm#4252985a37efa055c57963b7be91f054">operator[]</a> (int i)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Provide index operator [] access to array members.  <a href="#4252985a37efa055c57963b7be91f054"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const T &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_ba28ecf74bf483e5ea5ba033d1126c56.htm#ba28ecf74bf483e5ea5ba033d1126c56">operator[]</a> (int i) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Provide index operator [] access to array members.  <a href="#ba28ecf74bf483e5ea5ba033d1126c56"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">FdoInt32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_20091a0a0071baa7132275e972b844c9.htm#20091a0a0071baa7132275e972b844c9">Release</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Decrease the reference count.  <a href="#20091a0a0071baa7132275e972b844c9"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="../../d9/d14/class_fdo_array.htm">FdoArray</a>&lt; T &gt; *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_1fe7d0938a9f456e58d8acf8aefc8994.htm#1fe7d0938a9f456e58d8acf8aefc8994">Append</a> (<a class="el" href="../../d9/d14/class_fdo_array.htm">FdoArray</a>&lt; T &gt; *array, T element)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Adds the specified item to the end of the array. Returns a new array pointer.  <a href="#1fe7d0938a9f456e58d8acf8aefc8994"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="../../d9/d14/class_fdo_array.htm">FdoArray</a>&lt; T &gt; *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_f1d99bc4832671324451a3631403c4ef.htm#f1d99bc4832671324451a3631403c4ef">Append</a> (<a class="el" href="../../d9/d14/class_fdo_array.htm">FdoArray</a>&lt; T &gt; *array, FdoInt32 numElements, T *elements)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Adds the specified array of items to the end of the array. Returns a new array pointer.  <a href="#f1d99bc4832671324451a3631403c4ef"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="../../d9/d14/class_fdo_array.htm">FdoArray</a>&lt; T &gt; *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_b77fad9963d5ccaa542487efe767b7a9.htm#b77fad9963d5ccaa542487efe767b7a9">Create</a> (const T *elements, FdoInt32 initialNumElements)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Create a dynamic array from a pointer to a fixed array.  <a href="#b77fad9963d5ccaa542487efe767b7a9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="../../d9/d14/class_fdo_array.htm">FdoArray</a>&lt; T &gt; *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_9ef7f9828c5a4c5e8931f4a91e1c7bc6.htm#9ef7f9828c5a4c5e8931f4a91e1c7bc6">Create</a> (FdoInt32 initialAlloc)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Create a dynamic array preallocated to a specific size.  <a href="#9ef7f9828c5a4c5e8931f4a91e1c7bc6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="../../d9/d14/class_fdo_array.htm">FdoArray</a>&lt; T &gt; *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_68aa13104536308e249b437d2c750ea8.htm#68aa13104536308e249b437d2c750ea8">Create</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Create an empty array.  <a href="#68aa13104536308e249b437d2c750ea8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="../../d9/d14/class_fdo_array.htm">FdoArray</a>&lt; T &gt; *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_299ae788a34b75bb16967b03e28dc02e.htm#299ae788a34b75bb16967b03e28dc02e">SetSize</a> (<a class="el" href="../../d9/d14/class_fdo_array.htm">FdoArray</a>&lt; T &gt; *array, FdoInt32 numElements)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resize the array.  <a href="#299ae788a34b75bb16967b03e28dc02e"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_d650b64014b20414a531231a4815c201.htm#d650b64014b20414a531231a4815c201">Dispose</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">the rest of <a class="el" href="../../d7/da5/class_fdo_i_disposable.htm">FdoIDisposable</a>  <a href="#d650b64014b20414a531231a4815c201"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_bb9c0070732d9fab7c5b30a77aedfa5a.htm#bb9c0070732d9fab7c5b30a77aedfa5a">FdoArray</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#bb9c0070732d9fab7c5b30a77aedfa5a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">T &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_d17334f019e97ad8e39e1eee6b9fcd79.htm#d17334f019e97ad8e39e1eee6b9fcd79">GetValue</a> (FdoInt32 i)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const T &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_9eaa32a3606bc8c5cefa04e2b4f10509.htm#9eaa32a3606bc8c5cefa04e2b4f10509">GetValue</a> (FdoInt32 i) const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Access elements.  <a href="#9eaa32a3606bc8c5cefa04e2b4f10509"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_2cc96c586a0cbbec01decdd2e7581f37.htm#2cc96c586a0cbbec01decdd2e7581f37">SetValue</a> (FdoInt32 i, T newElement)</td></tr>

<tr><td colspan="2"><br><h2>Static Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="../../d9/d14/class_fdo_array.htm">FdoArray</a>&lt; T &gt; *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_28dfbf133ca379bff53112cb0ed484d8.htm#28dfbf133ca379bff53112cb0ed484d8">AllocMore</a> (<a class="el" href="../../d9/d14/class_fdo_array.htm">FdoArray</a>&lt; T &gt; *array, FdoInt32 atLeastThisMuch, bool exactly)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="../../d9/d14/class_fdo_array.htm">FdoArray</a>&lt; T &gt; *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d14/class_fdo_array_3e0f3866df9037444f80645cab426716.htm#3e0f3866df9037444f80645cab426716">SetAlloc</a> (<a class="el" href="../../d9/d14/class_fdo_array.htm">FdoArray</a>&lt; T &gt; *array, FdoInt32 numElements)</td></tr>

</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="../../d4/d13/_array_8h-source.htm">Array.h</a></ul>
<!-- footer.html -->
		<hr>
		<table width="100%"  border="0">
			<tr>
				<td>Comments or suggestions? Send us <a href="mailto:isd.docs@autodesk.com&subject=FDO%20API%20documentation">feedback</a>.</td>
				<!-- The logo can go in another cell, when we get one -->			
			</tr>
		</table>
	</body>
</html>
