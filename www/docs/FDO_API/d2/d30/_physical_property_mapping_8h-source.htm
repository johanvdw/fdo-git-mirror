<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"	"http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>FDO API Reference</title>
		<link href="../../custom.css" rel="stylesheet" type="text/css">
		<link href="../../tabs.css" rel="stylesheet" type="text/css">
	</head>
	<body bgcolor="#FFFFFF">
		<table width="100%"  border="0">
			<tr>
				<td><b>FDO API Reference<b></td>
				<td align="right"><b>Feature Data Objects<b></td>
			</tr>
			
		</table>
<!-- End of: header.html -->
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="../../main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="../../modules.htm"><span>Modules</span></a></li>
    <li><a href="../../classes.htm"><span>Classes</span></a></li>
    <li id="current"><a href="../../files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="../../files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="../../globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>PhysicalPropertyMapping.h</h1><a href="../../d2/dd0/_physical_property_mapping_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="preprocessor">#ifndef FDO_PHYSICALPROPERTYMAPPING_H</span>
<a name="l00002"></a>00002 <span class="preprocessor"></span><span class="preprocessor">#define FDO_PHYSICALPROPERTYMAPPING_H</span>
<a name="l00003"></a>00003 <span class="preprocessor"></span><span class="comment">// </span>
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// Copyright (C) 2004-2006  Autodesk, Inc.</span>
<a name="l00007"></a>00007 <span class="comment">// </span>
<a name="l00008"></a>00008 <span class="comment">// This library is free software; you can redistribute it and/or</span>
<a name="l00009"></a>00009 <span class="comment">// modify it under the terms of version 2.1 of the GNU Lesser</span>
<a name="l00010"></a>00010 <span class="comment">// General Public License as published by the Free Software Foundation.</span>
<a name="l00011"></a>00011 <span class="comment">// </span>
<a name="l00012"></a>00012 <span class="comment">// This library is distributed in the hope that it will be useful,</span>
<a name="l00013"></a>00013 <span class="comment">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment">// Lesser General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment">// </span>
<a name="l00017"></a>00017 <span class="comment">// You should have received a copy of the GNU Lesser General Public</span>
<a name="l00018"></a>00018 <span class="comment">// License along with this library; if not, write to the Free Software</span>
<a name="l00019"></a>00019 <span class="comment">// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifdef _WIN32</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#pragma once</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;<a class="code" href="../../d6/d27/_fdo_std_8h.htm">FdoStd.h</a>&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;<a class="code" href="../../d5/de2/_fdo_2_xml_2_context_8h.htm">Fdo/Xml/Context.h</a>&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;<a class="code" href="../../dd/d66/_command_exception_8h.htm">Fdo/Commands/CommandException.h</a>&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;<a class="code" href="../../d7/d6e/_physical_element_mapping_8h.htm">Fdo/Commands/Schema/PhysicalElementMapping.h</a>&gt;</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="keyword">class </span><a class="code" href="../../d7/d94/class_fdo_physical_schema_mapping.htm">FdoPhysicalSchemaMapping</a>;
<a name="l00032"></a>00032 <span class="keyword">class </span><a class="code" href="../../d9/d9b/class_fdo_xml_flags.htm">FdoXmlFlags</a>;
<a name="l00033"></a>00033 <span class="comment"></span>
<a name="l00034"></a>00034 <span class="comment">/// \brief</span>
<a name="l00035"></a>00035 <span class="comment">/// FdoPhysicalPropertyMapping is an abstract class that acts as a base class for all </span>
<a name="l00036"></a>00036 <span class="comment">/// Physical Schema Mapping property overrides.</span>
<a name="l00037"></a><a class="code" href="../../d3/dbd/class_fdo_physical_property_mapping.htm">00037</a> <span class="comment"></span><span class="keyword">class </span><a class="code" href="../../d3/dbd/class_fdo_physical_property_mapping.htm">FdoPhysicalPropertyMapping</a> : 
<a name="l00038"></a>00038     <span class="keyword">public</span> <a class="code" href="../../da/d7d/class_fdo_physical_element_mapping.htm">FdoPhysicalElementMapping</a>
<a name="l00039"></a>00039 {
<a name="l00040"></a>00040 <span class="keyword">public</span>:<span class="comment"></span>
<a name="l00041"></a>00041 <span class="comment">    /// \brief</span>
<a name="l00042"></a>00042 <span class="comment">    /// Initializes this Physical Property Mapping from its XML attributes. Called when</span>
<a name="l00043"></a>00043 <span class="comment">    /// this element is deserialized from XML. This function decodes any</span>
<a name="l00044"></a>00044 <span class="comment">    /// encoded property names (See _writeXml). Can be extended to handle </span>
<a name="l00045"></a>00045 <span class="comment">    /// particular XML attributes for derived classes.</span>
<a name="l00046"></a>00046 <span class="comment">    /// </span>
<a name="l00047"></a>00047 <span class="comment">    /// \param pContext </span>
<a name="l00048"></a>00048 <span class="comment">    /// Input context contain information about the current deserialization operation</span>
<a name="l00049"></a>00049 <span class="comment">    /// \param attrs </span>
<a name="l00050"></a>00050 <span class="comment">    /// Input the XML attributes.</span>
<a name="l00051"></a>00051 <span class="comment">    /// </span>
<a name="l00052"></a>00052 <span class="comment">    /// \return</span>
<a name="l00053"></a>00053 <span class="comment">    /// Returns nothing</span>
<a name="l00054"></a>00054 <span class="comment">    /// </span>
<a name="l00055"></a>00055 <span class="comment"></span>    <a class="code" href="../../d6/d27/_fdo_std_8h_159e6d8cdf66ea5e6786ccd47550101f.htm#159e6d8cdf66ea5e6786ccd47550101f">FDO_API</a> <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/dbd/class_fdo_physical_property_mapping_3b95e801a81c04ada969dfa7b2b1238b.htm#3b95e801a81c04ada969dfa7b2b1238b">InitFromXml</a>(<a class="code" href="../../d2/da9/class_fdo_xml_sax_context.htm">FdoXmlSaxContext</a>* pContext, <a class="code" href="../../da/ddb/class_fdo_xml_attribute_collection.htm">FdoXmlAttributeCollection</a>* attrs);
<a name="l00056"></a>00056 <span class="comment"></span>
<a name="l00057"></a>00057 <span class="comment">    /// \brief</span>
<a name="l00058"></a>00058 <span class="comment">    /// Writes this Physical Property Mapping to XML. Called when</span>
<a name="l00059"></a>00059 <span class="comment">    /// this element is serialized to XML. This function converts (encodes) </span>
<a name="l00060"></a>00060 <span class="comment">    /// property names to be valid XML element names. Can be extended to handle </span>
<a name="l00061"></a>00061 <span class="comment">    /// particular XML attributes and sub-elements for derived classes.</span>
<a name="l00062"></a>00062 <span class="comment">    /// \note</span>
<a name="l00063"></a>00063 <span class="comment">    /// Schema Override elements that do not require name encoding</span>
<a name="l00064"></a>00064 <span class="comment">    /// should be based on FdoPhysicalElementMapping instead of this class.</span>
<a name="l00065"></a>00065 <span class="comment">    /// </span>
<a name="l00066"></a>00066 <span class="comment">    /// \param xmlWriter </span>
<a name="l00067"></a>00067 <span class="comment">    /// Input write the element to this XML writer</span>
<a name="l00068"></a>00068 <span class="comment">    /// \param flags </span>
<a name="l00069"></a>00069 <span class="comment">    /// Input flags that control the writing of the element.</span>
<a name="l00070"></a>00070 <span class="comment">    /// </span>
<a name="l00071"></a>00071 <span class="comment">    /// \return</span>
<a name="l00072"></a>00072 <span class="comment">    /// Returns nothing</span>
<a name="l00073"></a>00073 <span class="comment">    /// </span>
<a name="l00074"></a>00074 <span class="comment"></span>    <a class="code" href="../../d6/d27/_fdo_std_8h_159e6d8cdf66ea5e6786ccd47550101f.htm#159e6d8cdf66ea5e6786ccd47550101f">FDO_API</a> <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/dbd/class_fdo_physical_property_mapping_3c33b5da1481e3bef7bc5b4e411a5f96.htm#3c33b5da1481e3bef7bc5b4e411a5f96">_writeXml</a>(
<a name="l00075"></a>00075         <a class="code" href="../../d8/d53/class_fdo_xml_writer.htm">FdoXmlWriter</a>* xmlWriter, 
<a name="l00076"></a>00076         <span class="keyword">const</span> <a class="code" href="../../d9/d9b/class_fdo_xml_flags.htm">FdoXmlFlags</a>* flags
<a name="l00077"></a>00077     );
<a name="l00078"></a>00078 
<a name="l00079"></a>00079 
<a name="l00080"></a>00080 <span class="keyword">protected</span>:<span class="comment"></span>
<a name="l00081"></a>00081 <span class="comment">    /// \brief</span>
<a name="l00082"></a>00082 <span class="comment">    /// Constructs a default instance of a property mapping.</span>
<a name="l00083"></a>00083 <span class="comment">    /// </span>
<a name="l00084"></a>00084 <span class="comment"></span>    <a class="code" href="../../d6/d27/_fdo_std_8h_159e6d8cdf66ea5e6786ccd47550101f.htm#159e6d8cdf66ea5e6786ccd47550101f">FDO_API</a> <a class="code" href="../../d3/dbd/class_fdo_physical_property_mapping_49f2355b6e671d9b698a2509b779375b.htm#49f2355b6e671d9b698a2509b779375b">FdoPhysicalPropertyMapping</a>(); 
<a name="l00085"></a>00085 <span class="comment"></span>
<a name="l00086"></a>00086 <span class="comment">    /// \brief</span>
<a name="l00087"></a>00087 <span class="comment">    /// Constructs a named instance of a property mapping.</span>
<a name="l00088"></a>00088 <span class="comment">    /// </span>
<a name="l00089"></a>00089 <span class="comment">    /// \param name </span>
<a name="l00090"></a>00090 <span class="comment">    /// Input the class name</span>
<a name="l00091"></a>00091 <span class="comment">    /// </span>
<a name="l00092"></a>00092 <span class="comment"></span>    <a class="code" href="../../d6/d27/_fdo_std_8h_159e6d8cdf66ea5e6786ccd47550101f.htm#159e6d8cdf66ea5e6786ccd47550101f">FDO_API</a> <a class="code" href="../../d3/dbd/class_fdo_physical_property_mapping_49f2355b6e671d9b698a2509b779375b.htm#49f2355b6e671d9b698a2509b779375b">FdoPhysicalPropertyMapping</a>( <a class="code" href="../../df/db1/group__typedefs_gd5a3d36c3e5fd69a638c2164a236e10f.htm#gd5a3d36c3e5fd69a638c2164a236e10f">FdoString</a>* name );
<a name="l00093"></a>00093 <span class="comment"></span>
<a name="l00094"></a>00094 <span class="comment">    /// \brief</span>
<a name="l00095"></a>00095 <span class="comment">    /// property mapping destructor.</span>
<a name="l00096"></a>00096 <span class="comment">    /// </span>
<a name="l00097"></a>00097 <span class="comment"></span>    <a class="code" href="../../d6/d27/_fdo_std_8h_159e6d8cdf66ea5e6786ccd47550101f.htm#159e6d8cdf66ea5e6786ccd47550101f">FDO_API</a> <span class="keyword">virtual</span> <a class="code" href="../../d3/dbd/class_fdo_physical_property_mapping_d4081f193de6c4d8843301d0ee0d94d8.htm#d4081f193de6c4d8843301d0ee0d94d8">~FdoPhysicalPropertyMapping</a>();
<a name="l00098"></a>00098 
<a name="l00099"></a>00099 };
<a name="l00100"></a>00100 <span class="comment"></span>
<a name="l00101"></a>00101 <span class="comment">/// \ingroup (typedefs)</span>
<a name="l00102"></a>00102 <span class="comment">/// \brief</span>
<a name="l00103"></a>00103 <span class="comment">/// FdoPhysicalPropertyMappingP is a FdoPtr on FdoPhysicalPropertyMapping, provided for convenience.</span>
<a name="l00104"></a><a class="code" href="../../df/db1/group__typedefs_ge301b177f5dfdb8cc35967b63473b31f.htm#ge301b177f5dfdb8cc35967b63473b31f">00104</a> <span class="comment"></span><span class="keyword">typedef</span> <a class="code" href="../../d3/dd2/class_fdo_ptr.htm">FdoPtr&lt;FdoPhysicalPropertyMapping&gt;</a> <a class="code" href="../../d3/dd2/class_fdo_ptr.htm">FdoPhysicalPropertyMappingP</a>;
<a name="l00105"></a>00105 
<a name="l00106"></a>00106 <span class="preprocessor">#endif</span>
<a name="l00107"></a>00107 <span class="preprocessor"></span>
<a name="l00108"></a>00108 
</pre></div><!-- footer.html -->
		<hr>
		<table width="100%"  border="0">
			<tr>
				<td>Comments or suggestions? Send us <a href="mailto:isd.docs@autodesk.com&subject=FDO%20API%20documentation">feedback</a>.</td>
				<!-- The logo can go in another cell, when we get one -->			
			</tr>
		</table>
	</body>
</html>
