<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"	"http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>FDO API Reference</title>
		<link href="../../custom.css" rel="stylesheet" type="text/css">
		<link href="../../tabs.css" rel="stylesheet" type="text/css">
	</head>
	<body bgcolor="#FFFFFF">
		<table width="100%"  border="0">
			<tr>
				<td><b>FDO API Reference<b></td>
				<td align="right"><b>Feature Data Objects<b></td>
			</tr>
			
		</table>
<!-- End of: header.html -->
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="../../main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="../../modules.htm"><span>Modules</span></a></li>
    <li><a href="../../classes.htm"><span>Classes</span></a></li>
    <li id="current"><a href="../../files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="../../files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="../../globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>NamedCollection.h</h1><a href="../../df/d4a/_named_collection_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="preprocessor">#ifndef FDO_NAMED_COLLECTION_H</span>
<a name="l00002"></a><a class="code" href="../../df/d4a/_named_collection_8h_72549ecd34dcb9e572e07c7e4d7f7e84.htm#72549ecd34dcb9e572e07c7e4d7f7e84">00002</a> <span class="preprocessor"></span><span class="preprocessor">#define FDO_NAMED_COLLECTION_H        1</span>
<a name="l00003"></a>00003 <span class="preprocessor"></span><span class="comment">// </span>
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// Copyright (C) 2004-2006  Autodesk, Inc.</span>
<a name="l00007"></a>00007 <span class="comment">// </span>
<a name="l00008"></a>00008 <span class="comment">// This library is free software; you can redistribute it and/or</span>
<a name="l00009"></a>00009 <span class="comment">// modify it under the terms of version 2.1 of the GNU Lesser</span>
<a name="l00010"></a>00010 <span class="comment">// General Public License as published by the Free Software Foundation.</span>
<a name="l00011"></a>00011 <span class="comment">// </span>
<a name="l00012"></a>00012 <span class="comment">// This library is distributed in the hope that it will be useful,</span>
<a name="l00013"></a>00013 <span class="comment">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment">// Lesser General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment">// </span>
<a name="l00017"></a>00017 <span class="comment">// You should have received a copy of the GNU Lesser General Public</span>
<a name="l00018"></a>00018 <span class="comment">// License along with this library; if not, write to the Free Software</span>
<a name="l00019"></a>00019 <span class="comment">// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifdef _WIN32</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#pragma once</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;<a class="code" href="../../dc/d75/_fdo_common_8h.htm">FdoCommon.h</a>&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;<a class="code" href="../../d8/da1/_collection_8h.htm">Common/Collection.h</a>&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;map&gt;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="comment">// Build a map when the collection exceeds this number of elements.</span>
<a name="l00031"></a>00031 <span class="comment">// GetItem by name is faster through the map, when the collection</span>
<a name="l00032"></a>00032 <span class="comment">// exceeds 10 elements. The threshold is set a bit higher to account</span>
<a name="l00033"></a>00033 <span class="comment">// for the overhead of building and deleting the map. </span>
<a name="l00034"></a><a class="code" href="../../df/d4a/_named_collection_8h_30792f3f5224b8dbf93fadbe6ae6874f.htm#30792f3f5224b8dbf93fadbe6ae6874f">00034</a> <span class="preprocessor">#define FDO_COLL_MAP_THRESHOLD 50</span>
<a name="l00035"></a>00035 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00036"></a>00036 <span class="comment">/// \brief</span>
<a name="l00037"></a>00037 <span class="comment">/// FdoNamedCollection is a template for collections keyed by element name.</span>
<a name="l00038"></a>00038 <span class="comment">/// The OBJ class must provide a GetName() function that returns the element name </span>
<a name="l00039"></a>00039 <span class="comment">/// as a FdoString* and a CanSetName() function that returns true if the class </span>
<a name="l00040"></a>00040 <span class="comment">/// allows modification of the name (implements SetName()) and false if it does not. </span>
<a name="l00041"></a>00041 <span class="comment">/// This class also provides fast access by name for large collections.</span>
<a name="l00042"></a>00042 <span class="comment">/// When CanSetName() returns true, the access by name is a bit less </span>
<a name="l00043"></a>00043 <span class="comment">/// efficient since linear searches need to be done in some cases. The </span>
<a name="l00044"></a>00044 <span class="comment">/// reason for this is that after an object changes name, it is no longer</span>
<a name="l00045"></a>00045 <span class="comment">/// in the right position in this collection's name map.</span>
<a name="l00046"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection.htm">00046</a> <span class="comment"></span><span class="keyword">template</span> &lt;<span class="keyword">class</span> OBJ, <span class="keyword">class</span> EXC&gt; <span class="keyword">class </span><a class="code" href="../../d0/d5e/class_fdo_named_collection.htm">FdoNamedCollection</a> : <span class="keyword">public</span> <a class="code" href="../../d6/daa/class_fdo_collection.htm">FdoCollection</a>&lt;OBJ, EXC&gt;
<a name="l00047"></a>00047 {
<a name="l00048"></a>00048 <span class="keyword">public</span>: <span class="comment"></span>
<a name="l00049"></a>00049 <span class="comment">    /// \brief</span>
<a name="l00050"></a>00050 <span class="comment">    /// Gets the item in the collection at the specified index. Throws an invalid argument exception if the index is out of range.</span>
<a name="l00051"></a>00051 <span class="comment">    /// </span>
<a name="l00052"></a>00052 <span class="comment">    /// \param index </span>
<a name="l00053"></a>00053 <span class="comment">    /// Input index</span>
<a name="l00054"></a>00054 <span class="comment">    /// </span>
<a name="l00055"></a>00055 <span class="comment">    /// \return</span>
<a name="l00056"></a>00056 <span class="comment">    /// Returns the item in the collection at the specified index</span>
<a name="l00057"></a>00057 <span class="comment">    /// </span>
<a name="l00058"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_700fd7d8143651a42f75c37ba000f992.htm#700fd7d8143651a42f75c37ba000f992">00058</a> <span class="comment"></span>    <span class="keyword">virtual</span> OBJ* <a class="code" href="../../d0/d5e/class_fdo_named_collection_700fd7d8143651a42f75c37ba000f992.htm#700fd7d8143651a42f75c37ba000f992">GetItem</a>(FdoInt32 index)<span class="keyword"> const</span>
<a name="l00059"></a>00059 <span class="keyword">    </span>{
<a name="l00060"></a>00060         <span class="keywordflow">return</span> <a class="code" href="../../d6/daa/class_fdo_collection_b19a98ddf088fdeb3a6335e17960e5b7.htm#b19a98ddf088fdeb3a6335e17960e5b7">FdoCollection&lt;OBJ, EXC&gt;::GetItem</a>(index);
<a name="l00061"></a>00061     }
<a name="l00062"></a>00062 <span class="comment"></span>
<a name="l00063"></a>00063 <span class="comment">    /// \brief</span>
<a name="l00064"></a>00064 <span class="comment">    /// Gets the item in the collection with the specified name. Throws an exception if the item is not found.</span>
<a name="l00065"></a>00065 <span class="comment">    /// </span>
<a name="l00066"></a>00066 <span class="comment">    /// \param name </span>
<a name="l00067"></a>00067 <span class="comment">    /// Input item name</span>
<a name="l00068"></a>00068 <span class="comment">    /// </span>
<a name="l00069"></a>00069 <span class="comment">    /// \return</span>
<a name="l00070"></a>00070 <span class="comment">    /// Returns the item in the collection with the specified name</span>
<a name="l00071"></a>00071 <span class="comment">    /// </span>
<a name="l00072"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_b811f02448bc8ea3f5db0a6c4874c588.htm#b811f02448bc8ea3f5db0a6c4874c588">00072</a> <span class="comment"></span>    <span class="keyword">virtual</span> OBJ* <a class="code" href="../../d0/d5e/class_fdo_named_collection_700fd7d8143651a42f75c37ba000f992.htm#700fd7d8143651a42f75c37ba000f992">GetItem</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* name)<span class="keyword"> const</span>
<a name="l00073"></a>00073 <span class="keyword">    </span>{
<a name="l00074"></a>00074         OBJ* item = <a class="code" href="../../d0/d5e/class_fdo_named_collection_6bcd05268830b882f111bd9363b03976.htm#6bcd05268830b882f111bd9363b03976">FindItem</a>( name );
<a name="l00075"></a>00075         <span class="keywordflow">if</span> ( !item ) 
<a name="l00076"></a>00076             <span class="keywordflow">throw</span> EXC::Create(
<a name="l00077"></a>00077                 <a class="code" href="../../db/dee/class_fdo_exception_0f9d229e51975e1ea886949e6ea83188.htm#0f9d229e51975e1ea886949e6ea83188">FdoException::NLSGetMessage</a>(
<a name="l00078"></a>00078                     <a class="code" href="../../df/d98/_exception_8h_277e2b8d4ea4e4c6ff7a7c1a37cafdd2.htm#277e2b8d4ea4e4c6ff7a7c1a37cafdd2">FDO_NLSID</a>(<a class="code" href="../../d9/d44/_fdo_message_8h_972ebd37f229f1db02b2fbcda0d15a82.htm#972ebd37f229f1db02b2fbcda0d15a82">FDO_38_ITEMNOTFOUND</a>),
<a name="l00079"></a>00079                     name
<a name="l00080"></a>00080                 )
<a name="l00081"></a>00081             );
<a name="l00082"></a>00082 
<a name="l00083"></a>00083         <span class="keywordflow">return</span>(item);
<a name="l00084"></a>00084     }
<a name="l00085"></a>00085 <span class="comment"></span>
<a name="l00086"></a>00086 <span class="comment">    /// \brief</span>
<a name="l00087"></a>00087 <span class="comment">    /// Finds the item in the collection with the specified name.</span>
<a name="l00088"></a>00088 <span class="comment">    /// </span>
<a name="l00089"></a>00089 <span class="comment">    /// \param name </span>
<a name="l00090"></a>00090 <span class="comment">    /// Input item name</span>
<a name="l00091"></a>00091 <span class="comment">    /// </span>
<a name="l00092"></a>00092 <span class="comment">    /// \return</span>
<a name="l00093"></a>00093 <span class="comment">    /// Returns the item in the collection with the specified name.</span>
<a name="l00094"></a>00094 <span class="comment">    /// Returns NULL if the item was not found.</span>
<a name="l00095"></a>00095 <span class="comment">    /// </span>
<a name="l00096"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_6bcd05268830b882f111bd9363b03976.htm#6bcd05268830b882f111bd9363b03976">00096</a> <span class="comment"></span>    <span class="keyword">virtual</span> OBJ* <a class="code" href="../../d0/d5e/class_fdo_named_collection_6bcd05268830b882f111bd9363b03976.htm#6bcd05268830b882f111bd9363b03976">FindItem</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* name)<span class="keyword"> const</span>
<a name="l00097"></a>00097 <span class="keyword">    </span>{
<a name="l00098"></a>00098     <span class="comment">// trigger the building of a map when the collection reaches the threshold size.</span>
<a name="l00099"></a>00099         ((<a class="code" href="../../d0/d5e/class_fdo_named_collection.htm">FdoNamedCollection&lt;OBJ,EXC&gt;</a>*) <span class="keyword">this</span>)-&gt;InitMap();
<a name="l00100"></a>00100 
<a name="l00101"></a>00101         OBJ* obj = NULL;
<a name="l00102"></a>00102 
<a name="l00103"></a>00103         <span class="keywordflow">if</span> ( mpNameMap ) {
<a name="l00104"></a>00104     <span class="comment">// Accessing the map is faster for large collections, so use it if built.</span>
<a name="l00105"></a>00105             obj = GetMap(name);
<a name="l00106"></a>00106 
<a name="l00107"></a>00107     <span class="comment">// If the object name can't be modified then we're done.</span>
<a name="l00108"></a>00108     <span class="comment">// Otherwise, there's a chance the object name was modified,</span>
<a name="l00109"></a>00109     <span class="comment">// meaning that it can be in the collection but not the map,</span>
<a name="l00110"></a>00110     <span class="comment">// or in the wrong place in the map.</span>
<a name="l00111"></a>00111             <span class="keywordflow">if</span> ( (obj != NULL) &amp;&amp; !obj-&gt;CanSetName() )
<a name="l00112"></a>00112                 <span class="keywordflow">return</span>(obj);
<a name="l00113"></a>00113 
<a name="l00114"></a>00114     <span class="comment">// If the found object's name is the same as the given name</span>
<a name="l00115"></a>00115     <span class="comment">// then we're done. Otherwise, this object's name has changed</span>
<a name="l00116"></a>00116     <span class="comment">// and a linear search is needed to find the requested object.</span>
<a name="l00117"></a>00117             <span class="keywordflow">if</span> ( (obj != NULL) &amp;&amp; (Compare(obj-&gt;GetName(), name) != 0) )
<a name="l00118"></a>00118                 <a class="code" href="../../dc/de6/_i_disposable_8h_c8dcc5cf2761a2ed23e790e21bc1d4b4.htm#c8dcc5cf2761a2ed23e790e21bc1d4b4">FDO_SAFE_RELEASE</a>( obj );
<a name="l00119"></a>00119         }
<a name="l00120"></a>00120 
<a name="l00121"></a>00121         <span class="keywordflow">if</span> ( obj == NULL ) {
<a name="l00122"></a>00122     <span class="comment">// No map so do linear search.</span>
<a name="l00123"></a>00123             <span class="keywordflow">for</span> ( FdoInt32 i = 0; i &lt; FdoCollection&lt;OBJ, EXC&gt;::GetCount(); i++ ) {
<a name="l00124"></a>00124                 OBJ* obj = <a class="code" href="../../d0/d5e/class_fdo_named_collection_700fd7d8143651a42f75c37ba000f992.htm#700fd7d8143651a42f75c37ba000f992">GetItem</a>(i);
<a name="l00125"></a>00125 
<a name="l00126"></a>00126                 <span class="keywordflow">if</span> ( Compare(name, obj-&gt;GetName()) == 0 )
<a name="l00127"></a>00127                     <span class="keywordflow">return</span>(obj);
<a name="l00128"></a>00128 
<a name="l00129"></a>00129                 <a class="code" href="../../dc/de6/_i_disposable_8h_c8dcc5cf2761a2ed23e790e21bc1d4b4.htm#c8dcc5cf2761a2ed23e790e21bc1d4b4">FDO_SAFE_RELEASE</a>(obj);
<a name="l00130"></a>00130             }
<a name="l00131"></a>00131         }
<a name="l00132"></a>00132 
<a name="l00133"></a>00133         <span class="keywordflow">return</span> (obj);
<a name="l00134"></a>00134     }
<a name="l00135"></a>00135 <span class="comment"></span>
<a name="l00136"></a>00136 <span class="comment">    /// \brief</span>
<a name="l00137"></a>00137 <span class="comment">    /// Sets the item in the collection at the specified index to the specified value. Throws an invalid argument exception if the index is out of range.</span>
<a name="l00138"></a>00138 <span class="comment">    /// </span>
<a name="l00139"></a>00139 <span class="comment">    /// \param index </span>
<a name="l00140"></a>00140 <span class="comment">    /// Input index</span>
<a name="l00141"></a>00141 <span class="comment">    /// \param value </span>
<a name="l00142"></a>00142 <span class="comment">    /// Input value</span>
<a name="l00143"></a>00143 <span class="comment">    /// </span>
<a name="l00144"></a>00144 <span class="comment">    /// \return</span>
<a name="l00145"></a>00145 <span class="comment">    /// Returns nothing</span>
<a name="l00146"></a>00146 <span class="comment">    /// </span>
<a name="l00147"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_57a9c844e3911cbabd1cda712a869584.htm#57a9c844e3911cbabd1cda712a869584">00147</a> <span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d0/d5e/class_fdo_named_collection_57a9c844e3911cbabd1cda712a869584.htm#57a9c844e3911cbabd1cda712a869584">SetItem</a>(FdoInt32 index, OBJ* value)
<a name="l00148"></a>00148     {
<a name="l00149"></a>00149         CheckDuplicate( value, index );
<a name="l00150"></a>00150 
<a name="l00151"></a>00151     <span class="comment">// Remove the old item from the map </span>
<a name="l00152"></a>00152         <span class="keywordflow">if</span> ( mpNameMap ) 
<a name="l00153"></a>00153             RemoveMapAt(index);
<a name="l00154"></a>00154 
<a name="l00155"></a>00155     <span class="comment">// Add the new item to the map</span>
<a name="l00156"></a>00156         <span class="keywordflow">if</span> ( mpNameMap &amp;&amp; value ) 
<a name="l00157"></a>00157             InsertMap( value );
<a name="l00158"></a>00158 
<a name="l00159"></a>00159     <span class="comment">// Set the new item in the collection.</span>
<a name="l00160"></a>00160         <a class="code" href="../../d6/daa/class_fdo_collection_a289684469f6e98a6cc0355f27eebdfe.htm#a289684469f6e98a6cc0355f27eebdfe">FdoCollection&lt;OBJ,EXC&gt;::SetItem</a>(index, value);
<a name="l00161"></a>00161     }
<a name="l00162"></a>00162 <span class="comment"></span>
<a name="l00163"></a>00163 <span class="comment">    /// \brief</span>
<a name="l00164"></a>00164 <span class="comment">    /// Adds the specified item to the end of the collection. Returns the index of the newly added item.</span>
<a name="l00165"></a>00165 <span class="comment">    /// </span>
<a name="l00166"></a>00166 <span class="comment">    /// \param value </span>
<a name="l00167"></a>00167 <span class="comment">    /// Input value</span>
<a name="l00168"></a>00168 <span class="comment">    /// </span>
<a name="l00169"></a>00169 <span class="comment">    /// \return</span>
<a name="l00170"></a>00170 <span class="comment">    /// Returns the index of the newly added item</span>
<a name="l00171"></a>00171 <span class="comment">    /// </span>
<a name="l00172"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_4819f86bcc3dcfebecd620414615505d.htm#4819f86bcc3dcfebecd620414615505d">00172</a> <span class="comment"></span>    <span class="keyword">virtual</span> FdoInt32 <a class="code" href="../../d0/d5e/class_fdo_named_collection_4819f86bcc3dcfebecd620414615505d.htm#4819f86bcc3dcfebecd620414615505d">Add</a>( OBJ* value)
<a name="l00173"></a>00173     {
<a name="l00174"></a>00174         CheckDuplicate( value, -1 );
<a name="l00175"></a>00175 
<a name="l00176"></a>00176     <span class="comment">// Insert the new item in the map</span>
<a name="l00177"></a>00177         <span class="keywordflow">if</span> ( mpNameMap &amp;&amp; value ) {
<a name="l00178"></a>00178             InsertMap(value);
<a name="l00179"></a>00179         }
<a name="l00180"></a>00180 
<a name="l00181"></a>00181     <span class="comment">// add it to the list.</span>
<a name="l00182"></a>00182         <span class="keywordflow">return</span>( <a class="code" href="../../d6/daa/class_fdo_collection.htm">FdoCollection&lt;OBJ,EXC&gt;::Add</a>(value) );
<a name="l00183"></a>00183     }
<a name="l00184"></a>00184 <span class="comment"></span>
<a name="l00185"></a>00185 <span class="comment">    /// \brief</span>
<a name="l00186"></a>00186 <span class="comment">    /// Inserts the specified item at the specified index within the collection. </span>
<a name="l00187"></a>00187 <span class="comment">    /// Items following the insertion point are moved down to accommodate the new item. </span>
<a name="l00188"></a>00188 <span class="comment">    /// Throws an invalid argument exception if the specified index is out of range.</span>
<a name="l00189"></a>00189 <span class="comment">    /// </span>
<a name="l00190"></a>00190 <span class="comment">    /// \param item </span>
<a name="l00191"></a>00191 <span class="comment">    /// Input item</span>
<a name="l00192"></a>00192 <span class="comment">    /// \param value </span>
<a name="l00193"></a>00193 <span class="comment">    /// Input value</span>
<a name="l00194"></a>00194 <span class="comment">    /// </span>
<a name="l00195"></a>00195 <span class="comment">    /// \return</span>
<a name="l00196"></a>00196 <span class="comment">    /// Returns nothing</span>
<a name="l00197"></a>00197 <span class="comment">    /// </span>
<a name="l00198"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_c1dab58621cfbb90b08fe15a75555af0.htm#c1dab58621cfbb90b08fe15a75555af0">00198</a> <span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d0/d5e/class_fdo_named_collection_c1dab58621cfbb90b08fe15a75555af0.htm#c1dab58621cfbb90b08fe15a75555af0">Insert</a>( FdoInt32 item, OBJ* value)
<a name="l00199"></a>00199     {
<a name="l00200"></a>00200         CheckDuplicate( value, -1 );
<a name="l00201"></a>00201 
<a name="l00202"></a>00202     <span class="comment">// Insert the new item in the map</span>
<a name="l00203"></a>00203         <span class="keywordflow">if</span> ( mpNameMap ) {
<a name="l00204"></a>00204             InsertMap(value);
<a name="l00205"></a>00205         }
<a name="l00206"></a>00206 
<a name="l00207"></a>00207     <span class="comment">// Insert it in the list</span>
<a name="l00208"></a>00208         <span class="keywordflow">return</span>( <a class="code" href="../../d6/daa/class_fdo_collection.htm">FdoCollection&lt;OBJ,EXC&gt;::Insert</a>(item, value) );
<a name="l00209"></a>00209     }
<a name="l00210"></a>00210 <span class="comment"></span>
<a name="l00211"></a>00211 <span class="comment">    /// \brief</span>
<a name="l00212"></a>00212 <span class="comment">    /// Removes all items from the collection.</span>
<a name="l00213"></a>00213 <span class="comment">    /// </span>
<a name="l00214"></a>00214 <span class="comment">    /// \return</span>
<a name="l00215"></a>00215 <span class="comment">    /// Returns nothing</span>
<a name="l00216"></a>00216 <span class="comment">    /// </span>
<a name="l00217"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_d8c207b73b487f2760954ea14eab6fd8.htm#d8c207b73b487f2760954ea14eab6fd8">00217</a> <span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d0/d5e/class_fdo_named_collection_d8c207b73b487f2760954ea14eab6fd8.htm#d8c207b73b487f2760954ea14eab6fd8">Clear</a>()
<a name="l00218"></a>00218     {
<a name="l00219"></a>00219     <span class="comment">// Clear the map</span>
<a name="l00220"></a>00220         <span class="keywordflow">if</span> (mpNameMap ) {
<a name="l00221"></a>00221             <span class="keyword">delete</span> mpNameMap;
<a name="l00222"></a>00222             mpNameMap = NULL;
<a name="l00223"></a>00223         }
<a name="l00224"></a>00224 
<a name="l00225"></a>00225     <span class="comment">// Clear the list</span>
<a name="l00226"></a>00226         <a class="code" href="../../d6/daa/class_fdo_collection_6f6a3e53a815c2a8dcf99b23e4bb8c3c.htm#6f6a3e53a815c2a8dcf99b23e4bb8c3c">FdoCollection&lt;OBJ,EXC&gt;::Clear</a>();
<a name="l00227"></a>00227     }
<a name="l00228"></a>00228 <span class="comment"></span>
<a name="l00229"></a>00229 <span class="comment">    /// \brief</span>
<a name="l00230"></a>00230 <span class="comment">    /// Removes the specified item from the collection. Throws an invalid argument exception if the item does not exist within the collection.</span>
<a name="l00231"></a>00231 <span class="comment">    /// </span>
<a name="l00232"></a>00232 <span class="comment">    /// \param value </span>
<a name="l00233"></a>00233 <span class="comment">    /// Input value</span>
<a name="l00234"></a>00234 <span class="comment">    /// </span>
<a name="l00235"></a>00235 <span class="comment">    /// \return</span>
<a name="l00236"></a>00236 <span class="comment">    /// Returns nothing</span>
<a name="l00237"></a>00237 <span class="comment">    /// </span>
<a name="l00238"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_3612cdd2f042fa485b1d92fc1d306ba8.htm#3612cdd2f042fa485b1d92fc1d306ba8">00238</a> <span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d0/d5e/class_fdo_named_collection_3612cdd2f042fa485b1d92fc1d306ba8.htm#3612cdd2f042fa485b1d92fc1d306ba8">Remove</a>(<span class="keyword">const</span> OBJ* value)
<a name="l00239"></a>00239     {
<a name="l00240"></a>00240     <span class="comment">// Remove the item from the map.</span>
<a name="l00241"></a>00241         <span class="keywordflow">if</span> ( mpNameMap ) 
<a name="l00242"></a>00242             RemoveMap( value );
<a name="l00243"></a>00243 
<a name="l00244"></a>00244     <span class="comment">// Remove it from the list</span>
<a name="l00245"></a>00245         <a class="code" href="../../d6/daa/class_fdo_collection_b3f9d00f5e7bc81a34431fa2582ee2ff.htm#b3f9d00f5e7bc81a34431fa2582ee2ff">FdoCollection&lt;OBJ,EXC&gt;::Remove</a>(value);
<a name="l00246"></a>00246     }
<a name="l00247"></a>00247 <span class="comment"></span>
<a name="l00248"></a>00248 <span class="comment">    /// \brief</span>
<a name="l00249"></a>00249 <span class="comment">    /// Removes the specified item from the collection. Throws an invalid argument exception if the item does not exist within the collection.</span>
<a name="l00250"></a>00250 <span class="comment">    /// </span>
<a name="l00251"></a>00251 <span class="comment">    /// \param index </span>
<a name="l00252"></a>00252 <span class="comment">    /// Input index</span>
<a name="l00253"></a>00253 <span class="comment">    /// </span>
<a name="l00254"></a>00254 <span class="comment">    /// \return</span>
<a name="l00255"></a>00255 <span class="comment">    /// Returns nothing</span>
<a name="l00256"></a>00256 <span class="comment">    /// </span>
<a name="l00257"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_58e27a39b16f4dd7151f5dd019650168.htm#58e27a39b16f4dd7151f5dd019650168">00257</a> <span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d0/d5e/class_fdo_named_collection_58e27a39b16f4dd7151f5dd019650168.htm#58e27a39b16f4dd7151f5dd019650168">RemoveAt</a>(FdoInt32 index)
<a name="l00258"></a>00258     {
<a name="l00259"></a>00259     <span class="comment">// Remove the item from the map.</span>
<a name="l00260"></a>00260         <span class="keywordflow">if</span> ( mpNameMap ) 
<a name="l00261"></a>00261             RemoveMapAt(index);
<a name="l00262"></a>00262 
<a name="l00263"></a>00263     <span class="comment">// Remove it from the list</span>
<a name="l00264"></a>00264         <a class="code" href="../../d6/daa/class_fdo_collection_5f52b84213b0efea2c96f44700a13a91.htm#5f52b84213b0efea2c96f44700a13a91">FdoCollection&lt;OBJ,EXC&gt;::RemoveAt</a>(index);
<a name="l00265"></a>00265     }
<a name="l00266"></a>00266 <span class="comment"></span>
<a name="l00267"></a>00267 <span class="comment">    /// \brief</span>
<a name="l00268"></a>00268 <span class="comment">    /// Returns true if the collection contains the specified item, false otherwise.</span>
<a name="l00269"></a>00269 <span class="comment">    /// </span>
<a name="l00270"></a>00270 <span class="comment">    /// \param value </span>
<a name="l00271"></a>00271 <span class="comment">    /// Input value</span>
<a name="l00272"></a>00272 <span class="comment">    /// </span>
<a name="l00273"></a>00273 <span class="comment">    /// \return</span>
<a name="l00274"></a>00274 <span class="comment">    /// Returns true if the collection contains the specified item, false otherwise</span>
<a name="l00275"></a>00275 <span class="comment">    /// </span>
<a name="l00276"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_cac2c0e6a69167a1b52fcb887609bd07.htm#cac2c0e6a69167a1b52fcb887609bd07">00276</a> <span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="../../d0/d5e/class_fdo_named_collection_cac2c0e6a69167a1b52fcb887609bd07.htm#cac2c0e6a69167a1b52fcb887609bd07">Contains</a>(<span class="keyword">const</span> OBJ* value)<span class="keyword"> const</span>
<a name="l00277"></a>00277 <span class="keyword">    </span>{
<a name="l00278"></a>00278     <span class="comment">// trigger the building of a map when the collection reaches the threshold size.</span>
<a name="l00279"></a>00279         ((<a class="code" href="../../d0/d5e/class_fdo_named_collection.htm">FdoNamedCollection&lt;OBJ,EXC&gt;</a>*) <span class="keyword">this</span>)-&gt;InitMap();
<a name="l00280"></a>00280 
<a name="l00281"></a>00281         <span class="keywordflow">if</span> (mpNameMap )
<a name="l00282"></a>00282         {
<a name="l00283"></a>00283     <span class="comment">// If map is built, use it since it is faster. </span>
<a name="l00284"></a>00284             FdoPtr &lt;FdoIDisposable&gt; temp = GetMap (((OBJ*)value)-&gt;GetName());
<a name="l00285"></a>00285             <span class="keywordtype">bool</span> ret = (temp != NULL);
<a name="l00286"></a>00286             <span class="keywordflow">return</span> (ret);
<a name="l00287"></a>00287         }
<a name="l00288"></a>00288         <span class="keywordflow">else</span> <span class="comment">// Otherwise, linear search</span>
<a name="l00289"></a>00289         {
<a name="l00290"></a>00290             <a class="code" href="../../df/db1/group__typedefs_gd5a3d36c3e5fd69a638c2164a236e10f.htm#gd5a3d36c3e5fd69a638c2164a236e10f">FdoString</a> * valueName = ((OBJ*)value)-&gt;GetName();
<a name="l00291"></a>00291             FdoInt32 count = <a class="code" href="../../d6/daa/class_fdo_collection_b9ab69c8397d8aaca2e91eee7a6786de.htm#b9ab69c8397d8aaca2e91eee7a6786de">FdoCollection&lt;OBJ, EXC&gt;::GetCount</a>();
<a name="l00292"></a>00292             <span class="keywordtype">bool</span> ret = <span class="keyword">false</span>;
<a name="l00293"></a>00293             <span class="keywordflow">for</span> (FdoInt32 i = 0; !ret &amp;&amp; i &lt; count; i++)
<a name="l00294"></a>00294             {
<a name="l00295"></a>00295                 <a class="code" href="../../d3/dd2/class_fdo_ptr.htm">FdoPtr&lt;OBJ&gt;</a> item = <a class="code" href="../../d0/d5e/class_fdo_named_collection_700fd7d8143651a42f75c37ba000f992.htm#700fd7d8143651a42f75c37ba000f992">GetItem</a>(i);
<a name="l00296"></a>00296                 <a class="code" href="../../df/db1/group__typedefs_gd5a3d36c3e5fd69a638c2164a236e10f.htm#gd5a3d36c3e5fd69a638c2164a236e10f">FdoString</a> * itemName = item-&gt;GetName();
<a name="l00297"></a>00297                 ret = (Compare(itemName, valueName)==0);
<a name="l00298"></a>00298             }
<a name="l00299"></a>00299             <span class="keywordflow">return</span> ret;
<a name="l00300"></a>00300         }
<a name="l00301"></a>00301     }
<a name="l00302"></a>00302 <span class="comment"></span>
<a name="l00303"></a>00303 <span class="comment">    /// \brief</span>
<a name="l00304"></a>00304 <span class="comment">    /// Returns true if the collection contains the specified item, false otherwise.</span>
<a name="l00305"></a>00305 <span class="comment">    /// </span>
<a name="l00306"></a>00306 <span class="comment">    /// \param name </span>
<a name="l00307"></a>00307 <span class="comment">    /// Input the item name</span>
<a name="l00308"></a>00308 <span class="comment">    /// </span>
<a name="l00309"></a>00309 <span class="comment">    /// \return</span>
<a name="l00310"></a>00310 <span class="comment">    /// Returns true if the collection contains the specified item, false otherwise</span>
<a name="l00311"></a>00311 <span class="comment">    /// </span>
<a name="l00312"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_738e21c6b0580be29dfee4377c3d7b36.htm#738e21c6b0580be29dfee4377c3d7b36">00312</a> <span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="../../d0/d5e/class_fdo_named_collection_cac2c0e6a69167a1b52fcb887609bd07.htm#cac2c0e6a69167a1b52fcb887609bd07">Contains</a>(<a class="code" href="../../df/db1/group__typedefs_gd5a3d36c3e5fd69a638c2164a236e10f.htm#gd5a3d36c3e5fd69a638c2164a236e10f">FdoString</a>* name)<span class="keyword"> const</span>
<a name="l00313"></a>00313 <span class="keyword">    </span>{
<a name="l00314"></a>00314         OBJ* item = <a class="code" href="../../d0/d5e/class_fdo_named_collection_6bcd05268830b882f111bd9363b03976.htm#6bcd05268830b882f111bd9363b03976">FindItem</a>(name);
<a name="l00315"></a>00315         <span class="keywordtype">bool</span> found = (item != NULL);
<a name="l00316"></a>00316 
<a name="l00317"></a>00317         <a class="code" href="../../dc/de6/_i_disposable_8h_c8dcc5cf2761a2ed23e790e21bc1d4b4.htm#c8dcc5cf2761a2ed23e790e21bc1d4b4">FDO_SAFE_RELEASE</a>(item);
<a name="l00318"></a>00318 
<a name="l00319"></a>00319         <span class="keywordflow">return</span>(found);
<a name="l00320"></a>00320     }
<a name="l00321"></a>00321 <span class="comment"></span>
<a name="l00322"></a>00322 <span class="comment">    /// \brief</span>
<a name="l00323"></a>00323 <span class="comment">    /// Returns the index of the specified item in the collection or -1 if the item does not exist.</span>
<a name="l00324"></a>00324 <span class="comment">    /// </span>
<a name="l00325"></a>00325 <span class="comment">    /// \param value </span>
<a name="l00326"></a>00326 <span class="comment">    /// Input value</span>
<a name="l00327"></a>00327 <span class="comment">    /// </span>
<a name="l00328"></a>00328 <span class="comment">    /// \return</span>
<a name="l00329"></a>00329 <span class="comment">    /// Returns the index of the specified item in the collection or -1 if the item does not exist</span>
<a name="l00330"></a>00330 <span class="comment">    /// </span>
<a name="l00331"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_46c7dcf61dd56493e7c35632d8a55cbc.htm#46c7dcf61dd56493e7c35632d8a55cbc">00331</a> <span class="comment"></span>    <span class="keyword">virtual</span> FdoInt32 <a class="code" href="../../d0/d5e/class_fdo_named_collection_46c7dcf61dd56493e7c35632d8a55cbc.htm#46c7dcf61dd56493e7c35632d8a55cbc">IndexOf</a>(<span class="keyword">const</span> OBJ* value)<span class="keyword"> const</span>
<a name="l00332"></a>00332 <span class="keyword">    </span>{
<a name="l00333"></a>00333         <span class="keywordflow">return</span>(<a class="code" href="../../d6/daa/class_fdo_collection.htm">FdoCollection&lt;OBJ,EXC&gt;::IndexOf</a>(value));
<a name="l00334"></a>00334     }
<a name="l00335"></a>00335 <span class="comment"></span>
<a name="l00336"></a>00336 <span class="comment">    /// \brief</span>
<a name="l00337"></a>00337 <span class="comment">    /// Returns the index of the specified item (by name) in the collection or -1 if the item does not exist.</span>
<a name="l00338"></a>00338 <span class="comment">    /// </span>
<a name="l00339"></a>00339 <span class="comment">    /// \param name </span>
<a name="l00340"></a>00340 <span class="comment">    /// Input the item name</span>
<a name="l00341"></a>00341 <span class="comment">    /// </span>
<a name="l00342"></a>00342 <span class="comment">    /// \return</span>
<a name="l00343"></a>00343 <span class="comment">    /// Returns the index of the specified item in the collection or -1 if the item does not exist</span>
<a name="l00344"></a>00344 <span class="comment">    /// </span>
<a name="l00345"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_a696d5590b6e74646cf49de062ebd076.htm#a696d5590b6e74646cf49de062ebd076">00345</a> <span class="comment"></span>    <span class="keyword">virtual</span> FdoInt32 <a class="code" href="../../d0/d5e/class_fdo_named_collection_46c7dcf61dd56493e7c35632d8a55cbc.htm#46c7dcf61dd56493e7c35632d8a55cbc">IndexOf</a>(<a class="code" href="../../df/db1/group__typedefs_gd5a3d36c3e5fd69a638c2164a236e10f.htm#gd5a3d36c3e5fd69a638c2164a236e10f">FdoString</a>* name)<span class="keyword"> const</span>
<a name="l00346"></a>00346 <span class="keyword">    </span>{
<a name="l00347"></a>00347         <span class="keywordflow">if</span> (name == NULL)
<a name="l00348"></a>00348             <span class="keywordflow">throw</span> EXC::Create(<a class="code" href="../../db/dee/class_fdo_exception_0f9d229e51975e1ea886949e6ea83188.htm#0f9d229e51975e1ea886949e6ea83188">FdoException::NLSGetMessage</a>(<a class="code" href="../../df/d98/_exception_8h_277e2b8d4ea4e4c6ff7a7c1a37cafdd2.htm#277e2b8d4ea4e4c6ff7a7c1a37cafdd2">FDO_NLSID</a>(<a class="code" href="../../d9/d44/_fdo_message_8h_f35ab4942a4f028b00587499201a9de4.htm#f35ab4942a4f028b00587499201a9de4">FDO_137_NAMED_COLLECTION_INDEX_NAME_ERROR</a>),
<a name="l00349"></a>00349                                                           L<span class="stringliteral">"FdoNamedCollection::IndexOf"</span>));
<a name="l00350"></a>00350 
<a name="l00351"></a>00351         FdoInt32    size = FdoCollection &lt;OBJ, EXC&gt;::GetCount();
<a name="l00352"></a>00352         <span class="keywordflow">for</span> (FdoInt32 i = 0; i &lt; size; i++)
<a name="l00353"></a>00353         {
<a name="l00354"></a>00354             <a class="code" href="../../d3/dd2/class_fdo_ptr.htm">FdoPtr&lt;OBJ&gt;</a> pitem = <a class="code" href="../../d0/d5e/class_fdo_named_collection.htm">FdoNamedCollection&lt;OBJ, EXC&gt;::GetItem</a>(i);
<a name="l00355"></a>00355             <span class="keywordflow">if</span> (pitem != NULL &amp;&amp; pitem-&gt;GetName() != (<a class="code" href="../../df/db1/group__typedefs_gd5a3d36c3e5fd69a638c2164a236e10f.htm#gd5a3d36c3e5fd69a638c2164a236e10f">FdoString</a>*) NULL &amp;&amp; Compare(name, pitem-&gt;GetName()) == 0) {
<a name="l00356"></a>00356                 <span class="keywordflow">return</span> i;
<a name="l00357"></a>00357             }
<a name="l00358"></a>00358         }
<a name="l00359"></a>00359 
<a name="l00360"></a>00360         <span class="keywordflow">return</span>(-1);
<a name="l00361"></a>00361     }
<a name="l00362"></a>00362 
<a name="l00363"></a>00363 <span class="keyword">protected</span>:
<a name="l00364"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_774aff834262d11681243f657871c637.htm#774aff834262d11681243f657871c637">00364</a>     <a class="code" href="../../d0/d5e/class_fdo_named_collection_774aff834262d11681243f657871c637.htm#774aff834262d11681243f657871c637">FdoNamedCollection</a>( <span class="keywordtype">bool</span> caseSensitive = <span class="keyword">true</span> )
<a name="l00365"></a>00365     {
<a name="l00366"></a>00366         mbCaseSensitive = caseSensitive;
<a name="l00367"></a>00367         mpNameMap = NULL;
<a name="l00368"></a>00368     }
<a name="l00369"></a>00369 
<a name="l00370"></a><a class="code" href="../../d0/d5e/class_fdo_named_collection_ff39656932ea5f08cc703838ea0ff74a.htm#ff39656932ea5f08cc703838ea0ff74a">00370</a>     <span class="keyword">virtual</span> <a class="code" href="../../d0/d5e/class_fdo_named_collection_ff39656932ea5f08cc703838ea0ff74a.htm#ff39656932ea5f08cc703838ea0ff74a">~FdoNamedCollection</a>(<span class="keywordtype">void</span>)
<a name="l00371"></a>00371     {
<a name="l00372"></a>00372         <span class="keywordflow">if</span> (mpNameMap ) 
<a name="l00373"></a>00373             <span class="keyword">delete</span> mpNameMap;
<a name="l00374"></a>00374     }
<a name="l00375"></a>00375 <span class="comment"></span>
<a name="l00376"></a>00376 <span class="comment">/// \cond DOXYGEN-IGNORE</span>
<a name="l00377"></a>00377 <span class="comment"></span>    <span class="keywordtype">int</span> Compare( <a class="code" href="../../df/db1/group__typedefs_gd5a3d36c3e5fd69a638c2164a236e10f.htm#gd5a3d36c3e5fd69a638c2164a236e10f">FdoString</a>* str1, <a class="code" href="../../df/db1/group__typedefs_gd5a3d36c3e5fd69a638c2164a236e10f.htm#gd5a3d36c3e5fd69a638c2164a236e10f">FdoString</a>* str2 )<span class="keyword"> const</span>
<a name="l00378"></a>00378 <span class="keyword">    </span>{
<a name="l00379"></a>00379         <span class="keywordflow">if</span> ( mbCaseSensitive )
<a name="l00380"></a>00380             <span class="keywordflow">return</span> ( wcscmp(str1, str2) );
<a name="l00381"></a>00381 
<a name="l00382"></a>00382     <span class="comment">// Try case-insensitive comparison.</span>
<a name="l00383"></a>00383 <span class="preprocessor">#ifdef _WIN32</span>
<a name="l00384"></a>00384 <span class="preprocessor"></span>        <span class="keywordflow">return</span> ( _wcsicmp(str1, str2) );
<a name="l00385"></a>00385 <span class="preprocessor">#else</span>
<a name="l00386"></a>00386 <span class="preprocessor"></span>        <span class="keywordflow">return</span> ( wcscasecmp(str1, str2) );
<a name="l00387"></a>00387 <span class="preprocessor">#endif</span>
<a name="l00388"></a>00388 <span class="preprocessor"></span>    }
<a name="l00389"></a>00389 
<a name="l00390"></a>00390     <span class="keywordtype">void</span> CheckDuplicate( OBJ* item, FdoInt32 index )
<a name="l00391"></a>00391     {
<a name="l00392"></a>00392         <a class="code" href="../../d3/dd2/class_fdo_ptr.htm">FdoPtr&lt;OBJ&gt;</a> foundItem1 = <a class="code" href="../../d0/d5e/class_fdo_named_collection_6bcd05268830b882f111bd9363b03976.htm#6bcd05268830b882f111bd9363b03976">FindItem</a>( item-&gt;GetName() );
<a name="l00393"></a>00393         <a class="code" href="../../d3/dd2/class_fdo_ptr.htm">FdoPtr&lt;OBJ&gt;</a> foundItem2;
<a name="l00394"></a>00394 
<a name="l00395"></a>00395         <span class="keywordflow">if</span> ( index &gt;= 0 ) {
<a name="l00396"></a>00396             foundItem2 = <a class="code" href="../../d0/d5e/class_fdo_named_collection_700fd7d8143651a42f75c37ba000f992.htm#700fd7d8143651a42f75c37ba000f992">GetItem</a>(index);
<a name="l00397"></a>00397         }
<a name="l00398"></a>00398 
<a name="l00399"></a>00399         <span class="keywordflow">if</span> ( (foundItem1 !=NULL) &amp;&amp; (foundItem1.<a class="code" href="../../d3/dd2/class_fdo_ptr_716198fc5da86379a2b18b96f8afcc4c.htm#716198fc5da86379a2b18b96f8afcc4c">p</a> != foundItem2.p ) ) { 
<a name="l00400"></a>00400             <span class="keywordflow">throw</span> EXC::Create(
<a name="l00401"></a>00401                 <a class="code" href="../../db/dee/class_fdo_exception_0f9d229e51975e1ea886949e6ea83188.htm#0f9d229e51975e1ea886949e6ea83188">FdoException::NLSGetMessage</a>(
<a name="l00402"></a>00402                     <a class="code" href="../../df/d98/_exception_8h_277e2b8d4ea4e4c6ff7a7c1a37cafdd2.htm#277e2b8d4ea4e4c6ff7a7c1a37cafdd2">FDO_NLSID</a>(<a class="code" href="../../d9/d44/_fdo_message_8h_90ec5f26b5f585d65b5f8fc8b63036fc.htm#90ec5f26b5f585d65b5f8fc8b63036fc">FDO_45_ITEMINCOLLECTION</a>),
<a name="l00403"></a>00403                     (<a class="code" href="../../df/db1/group__typedefs_gd5a3d36c3e5fd69a638c2164a236e10f.htm#gd5a3d36c3e5fd69a638c2164a236e10f">FdoString</a>*) item-&gt;GetName()
<a name="l00404"></a>00404                 )
<a name="l00405"></a>00405             );
<a name="l00406"></a>00406         }
<a name="l00407"></a>00407     }<span class="comment"></span>
<a name="l00408"></a>00408 <span class="comment">/// \endcond</span>
<a name="l00409"></a>00409 <span class="comment"></span>
<a name="l00410"></a>00410 <span class="keyword">private</span>:
<a name="l00411"></a>00411     <span class="keywordtype">void</span> InitMap()
<a name="l00412"></a>00412     {
<a name="l00413"></a>00413     <span class="comment">// Build the map if not already built and the collection has hit the threshold</span>
<a name="l00414"></a>00414         <span class="keywordflow">if</span> ( !mpNameMap &amp;&amp; ( FdoCollection &lt;OBJ, EXC&gt;::GetCount() &gt; <a class="code" href="../../df/d4a/_named_collection_8h_30792f3f5224b8dbf93fadbe6ae6874f.htm#30792f3f5224b8dbf93fadbe6ae6874f">FDO_COLL_MAP_THRESHOLD</a> ) ) {
<a name="l00415"></a>00415             mpNameMap = <span class="keyword">new</span> std::map&lt;FdoStringP,OBJ*&gt;();
<a name="l00416"></a>00416 
<a name="l00417"></a>00417     <span class="comment">// Put all the current elements into the map</span>
<a name="l00418"></a>00418             <span class="keywordflow">for</span> ( FdoInt32 i = (FdoCollection &lt;OBJ, EXC&gt;::GetCount() - 1); i &gt;= 0; i-- ) 
<a name="l00419"></a>00419                 InsertMap( <a class="code" href="../../d3/dd2/class_fdo_ptr.htm">FdoPtr&lt;OBJ&gt;</a>(<a class="code" href="../../d0/d5e/class_fdo_named_collection_700fd7d8143651a42f75c37ba000f992.htm#700fd7d8143651a42f75c37ba000f992">GetItem</a>(i)) );
<a name="l00420"></a>00420         }
<a name="l00421"></a>00421     }
<a name="l00422"></a>00422 
<a name="l00423"></a>00423     <span class="keywordtype">void</span> InsertMap( OBJ* value )<span class="keyword"> const</span>
<a name="l00424"></a>00424 <span class="keyword">    </span>{
<a name="l00425"></a>00425     <span class="comment">// Add an element to the map. Elements are keyed by name, which may or may not be case sensitive.</span>
<a name="l00426"></a>00426     <span class="comment">// Case insensitive names are stored in lower case.</span>
<a name="l00427"></a>00427         <span class="keywordflow">if</span> ( mbCaseSensitive ) 
<a name="l00428"></a>00428             mpNameMap-&gt;insert( std::pair&lt;FdoStringP,OBJ*&gt; ( value-&gt;GetName(), value ) );
<a name="l00429"></a>00429         <span class="keywordflow">else</span>
<a name="l00430"></a>00430             mpNameMap-&gt;insert( std::pair&lt;FdoStringP,OBJ*&gt; ( <a class="code" href="../../d8/d8d/class_fdo_string_p.htm">FdoStringP</a>(value-&gt;GetName()).Lower(), value ) );            
<a name="l00431"></a>00431     }
<a name="l00432"></a>00432 
<a name="l00433"></a>00433     <span class="comment">// Remove the element at the specified index, from the map</span>
<a name="l00434"></a>00434     <span class="keywordtype">void</span> RemoveMapAt( FdoInt32 index )
<a name="l00435"></a>00435     {
<a name="l00436"></a>00436     <span class="comment">// Remove the old item from the map </span>
<a name="l00437"></a>00437         OBJ* pItem = <a class="code" href="../../d6/daa/class_fdo_collection_b19a98ddf088fdeb3a6335e17960e5b7.htm#b19a98ddf088fdeb3a6335e17960e5b7">FdoCollection&lt;OBJ,EXC&gt;::GetItem</a>(index);
<a name="l00438"></a>00438 
<a name="l00439"></a>00439         <span class="keywordflow">if</span> ( pItem ) {
<a name="l00440"></a>00440             RemoveMap( pItem );
<a name="l00441"></a>00441             pItem-&gt;Release();
<a name="l00442"></a>00442         }
<a name="l00443"></a>00443     }
<a name="l00444"></a>00444 
<a name="l00445"></a>00445     <span class="comment">// Remove the given element from the map.</span>
<a name="l00446"></a>00446     <span class="keywordtype">void</span> RemoveMap( <span class="keyword">const</span> OBJ* value )
<a name="l00447"></a>00447     {
<a name="l00448"></a>00448     <span class="comment">// handle the current case sensitivity of the element name.</span>
<a name="l00449"></a>00449         <span class="keywordflow">if</span> ( mbCaseSensitive ) 
<a name="l00450"></a>00450             mpNameMap-&gt;erase( <a class="code" href="../../d8/d8d/class_fdo_string_p.htm">FdoStringP</a>( ((OBJ*)value)-&gt;GetName() ) );
<a name="l00451"></a>00451         <span class="keywordflow">else</span>
<a name="l00452"></a>00452             mpNameMap-&gt;erase( <a class="code" href="../../d8/d8d/class_fdo_string_p.htm">FdoStringP</a>( ((OBJ*)value)-&gt;GetName() ).Lower() );            
<a name="l00453"></a>00453     }
<a name="l00454"></a>00454 
<a name="l00455"></a>00455     <span class="comment">// Get the named element from the map. Returns NULL if element not in map.</span>
<a name="l00456"></a>00456     OBJ* GetMap( <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* name )<span class="keyword"> const</span>
<a name="l00457"></a>00457 <span class="keyword">    </span>{
<a name="l00458"></a>00458         OBJ* pItem = NULL;
<a name="l00459"></a>00459 
<a name="l00460"></a>00460         <span class="keyword">typename</span> std::map &lt;FdoStringP,OBJ*&gt; :: const_iterator iter;
<a name="l00461"></a>00461 
<a name="l00462"></a>00462         <span class="keywordflow">if</span> ( mbCaseSensitive )
<a name="l00463"></a>00463             iter = mpNameMap-&gt;find( <a class="code" href="../../d8/d8d/class_fdo_string_p.htm">FdoStringP</a>(name) );
<a name="l00464"></a>00464         <span class="keywordflow">else</span> 
<a name="l00465"></a>00465     <span class="comment">// Case sensitive names are stored in lower case.</span>
<a name="l00466"></a>00466             iter = mpNameMap-&gt;find( <a class="code" href="../../d8/d8d/class_fdo_string_p.htm">FdoStringP</a>(name).Lower() );
<a name="l00467"></a>00467 
<a name="l00468"></a>00468         <span class="keywordflow">if</span> ( iter != mpNameMap-&gt;end() ) { 
<a name="l00469"></a>00469             pItem = (OBJ*) iter-&gt;second;
<a name="l00470"></a>00470             <a class="code" href="../../dc/de6/_i_disposable_8h_815049a5ebf6bfe5f04c0365d4258eff.htm#815049a5ebf6bfe5f04c0365d4258eff">FDO_SAFE_ADDREF</a>(pItem);
<a name="l00471"></a>00471         }
<a name="l00472"></a>00472 
<a name="l00473"></a>00473         <span class="keywordflow">return</span>( pItem );
<a name="l00474"></a>00474     }
<a name="l00475"></a>00475 
<a name="l00476"></a>00476     <span class="keywordtype">bool</span> mbCaseSensitive;
<a name="l00477"></a>00477 
<a name="l00478"></a>00478     <span class="comment">// A map keyed by name, to help performance of large collections.</span>
<a name="l00479"></a>00479     std::map&lt;FdoStringP,OBJ*&gt; *mpNameMap;
<a name="l00480"></a>00480 };
<a name="l00481"></a>00481 
<a name="l00482"></a>00482 <span class="preprocessor">#endif</span>
<a name="l00483"></a>00483 <span class="preprocessor"></span>
<a name="l00484"></a>00484 
</pre></div><!-- footer.html -->
		<hr>
		<table width="100%"  border="0">
			<tr>
				<td>Comments or suggestions? Send us <a href="mailto:isd.docs@autodesk.com&subject=FDO%20API%20documentation">feedback</a>.</td>
				<!-- The logo can go in another cell, when we get one -->			
			</tr>
		</table>
	</body>
</html>
