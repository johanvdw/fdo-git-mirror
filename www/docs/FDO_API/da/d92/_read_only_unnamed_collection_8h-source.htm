<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"	"http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>FDO API Reference</title>
		<link href="../../custom.css" rel="stylesheet" type="text/css">
		<link href="../../tabs.css" rel="stylesheet" type="text/css">
	</head>
	<body bgcolor="#FFFFFF">
		<table width="100%"  border="0">
			<tr>
				<td><b>FDO API Reference<b></td>
				<td align="right"><b>Feature Data Objects<b></td>
			</tr>
			
		</table>
<!-- End of: header.html -->
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="../../main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="../../modules.htm"><span>Modules</span></a></li>
    <li><a href="../../classes.htm"><span>Classes</span></a></li>
    <li id="current"><a href="../../files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="../../files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="../../globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>ReadOnlyUnnamedCollection.h</h1><a href="../../db/d31/_read_only_unnamed_collection_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="preprocessor">#ifndef _READONLYUNNAMEDCOLLECTION_H_</span>
<a name="l00002"></a>00002 <span class="preprocessor"></span><span class="preprocessor">#define _READONLYUNNAMEDCOLLECTION_H_</span>
<a name="l00003"></a>00003 <span class="preprocessor"></span><span class="comment">// </span>
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// Copyright (C) 2004-2006  Autodesk, Inc.</span>
<a name="l00007"></a>00007 <span class="comment">// </span>
<a name="l00008"></a>00008 <span class="comment">// This library is free software; you can redistribute it and/or</span>
<a name="l00009"></a>00009 <span class="comment">// modify it under the terms of version 2.1 of the GNU Lesser</span>
<a name="l00010"></a>00010 <span class="comment">// General Public License as published by the Free Software Foundation.</span>
<a name="l00011"></a>00011 <span class="comment">// </span>
<a name="l00012"></a>00012 <span class="comment">// This library is distributed in the hope that it will be useful,</span>
<a name="l00013"></a>00013 <span class="comment">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment">// Lesser General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment">// </span>
<a name="l00017"></a>00017 <span class="comment">// You should have received a copy of the GNU Lesser General Public</span>
<a name="l00018"></a>00018 <span class="comment">// License along with this library; if not, write to the Free Software</span>
<a name="l00019"></a>00019 <span class="comment">// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifdef _WIN32</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#pragma once</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span><span class="preprocessor">#include &lt;<a class="code" href="../../d6/d27/_fdo_std_8h.htm">FdoStd.h</a>&gt;</span>
<a name="l00026"></a>00026 <span class="comment"></span>
<a name="l00027"></a>00027 <span class="comment">/// \brief</span>
<a name="l00028"></a>00028 <span class="comment">/// FdoReadOnlyUnnamedCollection is an abstract template class used to define a collection</span>
<a name="l00029"></a>00029 <span class="comment">/// that can not be modified after it is constructed, i.e. provides read-only access. The </span>
<a name="l00030"></a>00030 <span class="comment">/// difference to the class FdoReadOnlyCollection is that this class contains objects that</span>
<a name="l00031"></a>00031 <span class="comment">/// do not have a property name.</span>
<a name="l00032"></a><a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection.htm">00032</a> <span class="comment"></span><span class="keyword">template</span> &lt;<span class="keyword">class</span> OBJ, <span class="keyword">class</span> BASE, <span class="keyword">class</span> EXC&gt; <span class="keyword">class </span><a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection.htm">FdoReadOnlyUnnamedCollection</a> : <span class="keyword">public</span> <a class="code" href="../../d7/da5/class_fdo_i_disposable.htm">FdoIDisposable</a>
<a name="l00033"></a>00033 {
<a name="l00034"></a>00034 <span class="keyword">protected</span>:
<a name="l00035"></a><a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_08692d80f15ee36ea6ab8124f1c7ab1a.htm#08692d80f15ee36ea6ab8124f1c7ab1a">00035</a>     <a class="code" href="../../d6/d27/_fdo_std_8h_159e6d8cdf66ea5e6786ccd47550101f.htm#159e6d8cdf66ea5e6786ccd47550101f">FDO_API</a> <a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_08692d80f15ee36ea6ab8124f1c7ab1a.htm#08692d80f15ee36ea6ab8124f1c7ab1a">FdoReadOnlyUnnamedCollection</a>()
<a name="l00036"></a>00036     {
<a name="l00037"></a>00037     }
<a name="l00038"></a>00038 
<a name="l00039"></a><a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_048c9006f3d25468338f34e8022b911d.htm#048c9006f3d25468338f34e8022b911d">00039</a>     <a class="code" href="../../d6/d27/_fdo_std_8h_159e6d8cdf66ea5e6786ccd47550101f.htm#159e6d8cdf66ea5e6786ccd47550101f">FDO_API</a> <span class="keyword">virtual</span> <a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_048c9006f3d25468338f34e8022b911d.htm#048c9006f3d25468338f34e8022b911d">~FdoReadOnlyUnnamedCollection</a>()
<a name="l00040"></a>00040     {
<a name="l00041"></a>00041         <a class="code" href="../../dc/de6/_i_disposable_8h_c8dcc5cf2761a2ed23e790e21bc1d4b4.htm#c8dcc5cf2761a2ed23e790e21bc1d4b4">FDO_SAFE_RELEASE</a>(m_base);
<a name="l00042"></a>00042     }
<a name="l00043"></a>00043 
<a name="l00044"></a><a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_155794d3cdb9613ca0f6b9b7d7fc79ae.htm#155794d3cdb9613ca0f6b9b7d7fc79ae">00044</a>     <span class="keywordtype">void</span> <a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_155794d3cdb9613ca0f6b9b7d7fc79ae.htm#155794d3cdb9613ca0f6b9b7d7fc79ae">SetBaseCollection</a>(BASE* base)
<a name="l00045"></a>00045     {
<a name="l00046"></a>00046         <a class="code" href="../../dc/de6/_i_disposable_8h_815049a5ebf6bfe5f04c0365d4258eff.htm#815049a5ebf6bfe5f04c0365d4258eff">FDO_SAFE_ADDREF</a>(base);
<a name="l00047"></a>00047         m_base = base;
<a name="l00048"></a>00048     }
<a name="l00049"></a>00049 
<a name="l00050"></a>00050 <span class="keyword">public</span>:<span class="comment"></span>
<a name="l00051"></a>00051 <span class="comment">    /// \brief</span>
<a name="l00052"></a>00052 <span class="comment">    /// Gets the number of items in the collection.</span>
<a name="l00053"></a>00053 <span class="comment">    /// </span>
<a name="l00054"></a>00054 <span class="comment">    /// \return</span>
<a name="l00055"></a>00055 <span class="comment">    /// Returns number of items in the collection</span>
<a name="l00056"></a>00056 <span class="comment">    /// </span>
<a name="l00057"></a><a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_2510e32273c60a8002c8050c10dc87dc.htm#2510e32273c60a8002c8050c10dc87dc">00057</a> <span class="comment"></span>    <a class="code" href="../../d6/d27/_fdo_std_8h_159e6d8cdf66ea5e6786ccd47550101f.htm#159e6d8cdf66ea5e6786ccd47550101f">FDO_API</a> <span class="keyword">virtual</span> FdoInt32 <a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_2510e32273c60a8002c8050c10dc87dc.htm#2510e32273c60a8002c8050c10dc87dc">GetCount</a>()
<a name="l00058"></a>00058     {
<a name="l00059"></a>00059         <span class="keywordflow">if</span> (m_base)
<a name="l00060"></a>00060             <span class="keywordflow">return</span> m_base-&gt;GetCount();
<a name="l00061"></a>00061         <span class="keywordflow">else</span>
<a name="l00062"></a>00062             <span class="keywordflow">return</span> 0;
<a name="l00063"></a>00063     }
<a name="l00064"></a>00064 <span class="comment"></span>
<a name="l00065"></a>00065 <span class="comment">    /// \brief</span>
<a name="l00066"></a>00066 <span class="comment">    /// Gets the item in the collection at the specified index. Throws an invalid argument exception if the index is out of range.</span>
<a name="l00067"></a>00067 <span class="comment">    /// </span>
<a name="l00068"></a>00068 <span class="comment">    /// \param index </span>
<a name="l00069"></a>00069 <span class="comment">    /// Input index</span>
<a name="l00070"></a>00070 <span class="comment">    /// </span>
<a name="l00071"></a>00071 <span class="comment">    /// \return</span>
<a name="l00072"></a>00072 <span class="comment">    /// Returns the item in the collection at the specified index</span>
<a name="l00073"></a>00073 <span class="comment">    /// </span>
<a name="l00074"></a><a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_56925f8e22883ea47e499d55f24dd27e.htm#56925f8e22883ea47e499d55f24dd27e">00074</a> <span class="comment"></span>    <a class="code" href="../../d6/d27/_fdo_std_8h_159e6d8cdf66ea5e6786ccd47550101f.htm#159e6d8cdf66ea5e6786ccd47550101f">FDO_API</a> <span class="keyword">virtual</span> OBJ* <a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_56925f8e22883ea47e499d55f24dd27e.htm#56925f8e22883ea47e499d55f24dd27e">GetItem</a>(FdoInt32 index)
<a name="l00075"></a>00075     {
<a name="l00076"></a>00076         <span class="keywordflow">if</span> (m_base)
<a name="l00077"></a>00077             <span class="keywordflow">return</span> (OBJ*)m_base-&gt;GetItem(index);
<a name="l00078"></a>00078         <span class="keywordflow">else</span>
<a name="l00079"></a>00079             <span class="keywordflow">throw</span> EXC::Create(<a class="code" href="../../db/dee/class_fdo_exception_0f9d229e51975e1ea886949e6ea83188.htm#0f9d229e51975e1ea886949e6ea83188">FdoException::NLSGetMessage</a>(<a class="code" href="../../df/d98/_exception_8h_277e2b8d4ea4e4c6ff7a7c1a37cafdd2.htm#277e2b8d4ea4e4c6ff7a7c1a37cafdd2">FDO_NLSID</a>(<a class="code" href="../../d9/d44/_fdo_message_8h_5a491bbdf26dea12e85175095495bfd4.htm#5a491bbdf26dea12e85175095495bfd4">FDO_1_INDEXOUTOFBOUNDS</a>)));
<a name="l00080"></a>00080     }
<a name="l00081"></a>00081 <span class="comment"></span>
<a name="l00082"></a>00082 <span class="comment">    /// \brief</span>
<a name="l00083"></a>00083 <span class="comment">    /// Returns true if the collection contains the specified item, false otherwise.</span>
<a name="l00084"></a>00084 <span class="comment">    /// </span>
<a name="l00085"></a>00085 <span class="comment">    /// \param value </span>
<a name="l00086"></a>00086 <span class="comment">    /// Input value</span>
<a name="l00087"></a>00087 <span class="comment">    /// </span>
<a name="l00088"></a>00088 <span class="comment">    /// \return</span>
<a name="l00089"></a>00089 <span class="comment">    /// Returns true if the collection contains the specified item, false otherwise</span>
<a name="l00090"></a>00090 <span class="comment">    /// </span>
<a name="l00091"></a><a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_a67de93d6e5275a44abc1ddfb3771e56.htm#a67de93d6e5275a44abc1ddfb3771e56">00091</a> <span class="comment"></span>    <a class="code" href="../../d6/d27/_fdo_std_8h_159e6d8cdf66ea5e6786ccd47550101f.htm#159e6d8cdf66ea5e6786ccd47550101f">FDO_API</a> <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_a67de93d6e5275a44abc1ddfb3771e56.htm#a67de93d6e5275a44abc1ddfb3771e56">Contains</a>(<span class="keyword">const</span> OBJ* value)
<a name="l00092"></a>00092     {
<a name="l00093"></a>00093         <span class="keywordflow">if</span> (m_base)
<a name="l00094"></a>00094             <span class="keywordflow">return</span> m_base-&gt;Contains(value);
<a name="l00095"></a>00095         <span class="keywordflow">else</span>
<a name="l00096"></a>00096             <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00097"></a>00097     }
<a name="l00098"></a>00098 <span class="comment"></span>
<a name="l00099"></a>00099 <span class="comment">    /// \brief</span>
<a name="l00100"></a>00100 <span class="comment">    /// Returns the index of the specified item in the collection or -1 if the item does not exist.</span>
<a name="l00101"></a>00101 <span class="comment">    /// </span>
<a name="l00102"></a>00102 <span class="comment">    /// \param value </span>
<a name="l00103"></a>00103 <span class="comment">    /// Input value</span>
<a name="l00104"></a>00104 <span class="comment">    /// </span>
<a name="l00105"></a>00105 <span class="comment">    /// \return</span>
<a name="l00106"></a>00106 <span class="comment">    /// Returns the index of the specified item in the collection or -1 if the item does not exist</span>
<a name="l00107"></a>00107 <span class="comment">    /// </span>
<a name="l00108"></a><a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_5adb039423d6c2c882bcec392e344ecd.htm#5adb039423d6c2c882bcec392e344ecd">00108</a> <span class="comment"></span>    <a class="code" href="../../d6/d27/_fdo_std_8h_159e6d8cdf66ea5e6786ccd47550101f.htm#159e6d8cdf66ea5e6786ccd47550101f">FDO_API</a> <span class="keyword">virtual</span> FdoInt32 <a class="code" href="../../d7/da2/class_fdo_read_only_unnamed_collection_5adb039423d6c2c882bcec392e344ecd.htm#5adb039423d6c2c882bcec392e344ecd">IndexOf</a>(<span class="keyword">const</span> OBJ* value)
<a name="l00109"></a>00109     {
<a name="l00110"></a>00110         <span class="keywordflow">if</span> (m_base)
<a name="l00111"></a>00111             <span class="keywordflow">return</span> m_base-&gt;IndexOf(value);
<a name="l00112"></a>00112         <span class="keywordflow">else</span>
<a name="l00113"></a>00113             <span class="keywordflow">return</span> -1;
<a name="l00114"></a>00114     }
<a name="l00115"></a>00115 
<a name="l00116"></a>00116 <span class="keyword">private</span>:
<a name="l00117"></a>00117     BASE*   m_base;    
<a name="l00118"></a>00118 };
<a name="l00119"></a>00119 <span class="preprocessor">#endif</span>
<a name="l00120"></a>00120 <span class="preprocessor"></span>
<a name="l00121"></a>00121 
</pre></div><!-- footer.html -->
		<hr>
		<table width="100%"  border="0">
			<tr>
				<td>Comments or suggestions? Send us <a href="mailto:isd.docs@autodesk.com&subject=FDO%20API%20documentation">feedback</a>.</td>
				<!-- The logo can go in another cell, when we get one -->			
			</tr>
		</table>
	</body>
</html>
